import{_ as s,c as a,d as n,o as e}from"./app-DtAVAFTf.js";const t={};function h(l,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="jenkins的一些笔记" tabindex="-1"><a class="header-anchor" href="#jenkins的一些笔记"><span>Jenkins的一些笔记</span></a></h1><p>公司主要要开发自己的paas平台，集成了Jenkins，真的是遇到了很多很多困难，特别是在api调用的权限这一块，这里，把自己遇到的一些坑的解决方法做一下笔记吧。当然，首先要讲的，就是如何在开启安全的情况下进行API调用。</p><h2 id="一、在全局安全配置中" tabindex="-1"><a class="header-anchor" href="#一、在全局安全配置中"><span>一、在全局安全配置中</span></a></h2><h4 id="_1-1-启用安全" tabindex="-1"><a class="header-anchor" href="#_1-1-启用安全"><span>1.1 启用安全</span></a></h4><p>如果勾选不对，那么Jenkins有可能崩溃掉，亲身经历，之前一直没有勾选安全域，然后授权策略为登录用户可以做任何事，之后权限这一块就彻底崩溃了，重装了又重装，才知道，需要勾选安全域。</p><div align="center"><figure><img src="https://github-images.wenzhihuai.com/images/20181027023132911846860.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h4 id="_1-2-跨域" tabindex="-1"><a class="header-anchor" href="#_1-2-跨域"><span>1.2 跨域</span></a></h4><p>同时开启跨站请求伪造保护，Jenkins的一些API需要用到的。</p><div align="center"><figure><img src="https://github-images.wenzhihuai.com/images/201810270231471528136147.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h2 id="二、获取token" tabindex="-1"><a class="header-anchor" href="#二、获取token"><span>二、获取TOKEN</span></a></h2><h4 id="_2-1-token" tabindex="-1"><a class="header-anchor" href="#_2-1-token"><span>2.1 TOKEN</span></a></h4><p>Jenkins的用户token可以在用户的设置下面获得，但是这种方式如果需要重装Jenkins的话，就得重新修改一次配置文件</p><div align="center"><figure><img src="https://github-images.wenzhihuai.com/images/20181027023526539361439.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>经过对<a href="https://github.com/jenkinsci/java-client-api" target="_blank" rel="noopener noreferrer">Jenkins-client</a>的抓包分析，token可以由username+&quot;:&quot;+password，然后进行base64加密组成，之后在token前面加上&quot;Basic &quot;即可，代码如下：</p><div align="center"><figure><img src="https://github-images.wenzhihuai.com/images/20181027024305570167743.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h2 id="三、获取jenkins-crumb" tabindex="-1"><a class="header-anchor" href="#三、获取jenkins-crumb"><span>三、获取Jenkins-Crumb</span></a></h2><p>在远程API调用的时候，Jenkins对于某些接口的要求不仅限于Authorization，还必须要有Jenkins-Crumb，这个东西之前在进行获取的时候，有时候会变来变去，比如用curl命令和f12查看的时候发现不一致，实在受不了，感觉毫无规律可言，之后才发现上面的Authorization来直接调用接口获取的才是正确的，再然后想想，可能是之前调用api的时候，没有开启启用安全，再或者是有没有勾选上使用碎片算法。</p><div align="center"><figure><img src="https://github-images.wenzhihuai.com/images/201810270251031329488332.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>另，附上curl查询Jenkins-Crumb的命令：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;http://admin:yourtoken@jenkins-url/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>替换掉yourtoken和jenkins-url即可。</p><h2 id="四、值得注意的事" tabindex="-1"><a class="header-anchor" href="#四、值得注意的事"><span>四、值得注意的事</span></a></h2><h4 id="_4-1-api设计" tabindex="-1"><a class="header-anchor" href="#_4-1-api设计"><span>4.1 API设计</span></a></h4><p>Jenkins的API设计可谓是独领风骚，能把一个提交设计成这样真实佩服测试之后才发现只要提交个表单，key为json，value为值即可，其他的都不需要，这个设计我也不知道怎么来的，感觉超级坑。</p><div align="center"><figure><img src="https://github-images.wenzhihuai.com/images/20181027030059348201424.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h4 id="_4-2-生成构建job" tabindex="-1"><a class="header-anchor" href="#_4-2-生成构建job"><span>4.2 生成构建job</span></a></h4><p>由于我们是将Jenkins集成在我们自己的平台里面，并不暴露Jenkins给用户，所以，创建一个job的时候，必须由我们平台的参数往Jenkins里面提交，这一提交，发现的问题不少。<br> 一是Jenkins的整个job的提交是由两步组成的，先是创建job，再提交配置。即：/createItem?name=xxx接口。<br> 二是提交的配置参数，提交的是整个xml，而不是由一个一个参数组成的。对于java来说，就得使用xstream或者其他来转化，甚是折腾，如图这种转化。</p><div align="center"><figure><img src="https://github-images.wenzhihuai.com/images/20181029112422597829257.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h4 id="_4-3-构建的队列" tabindex="-1"><a class="header-anchor" href="#_4-3-构建的队列"><span>4.3 构建的队列</span></a></h4><p>在点击立即构建的时候，Jenkins是没有返回任何信息，但是在Jenkins的内部，它是通过放到队列里等待的，如果有空闲，就开始构建，否则等待，这个队列是可以获取得到的，我们从里面可以获取上一次构建的信息，是成功还是失败。这种情况下，假设我们多个人同时点击，这下子就有点慌了，如何获取到具体某个人的构建结果，有点虐心。想了半天，最终得出的事：代码相同，意味着每次构建的结果相同，为什么要允许多个人同时点击？就这么解决了：从一个job的构建队列中获取最后一次构建的信息，如果是正在构建，那么不允许构建了，直到构建结果出来。</p><h4 id="_4-4-构建进度的查看" tabindex="-1"><a class="header-anchor" href="#_4-4-构建进度的查看"><span>4.4 构建进度的查看</span></a></h4><p>需要将Jenkins中的构建进度移植到我们自有的平台，Jenkins的构建进度时通过ajax轮询实现的，获取文本的规则主要从response header里面的两个字段获取<br> （1）X-More-Data：是否有更多的数据<br> （2）X-Text-Size：从开始到该次调用的文本大小<br> 我们是通过websocket来将文本内容推送到前端，使用的stomp协议，部分代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            ...</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> string </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> header </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X-More-Data&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Strings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">isNullOrEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(header)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> start </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">convertAndSend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/topic/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> uuid, string);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">                String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> textSize </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X-Text-Size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Strings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">isNullOrEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(textSize)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">                    start </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">parseInt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(textSize);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">                }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">convertAndSend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/topic/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> uuid, string);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考：<br> 1.<a href="https://www.cnblogs.com/jwentest/p/8204421.html" target="_blank" rel="noopener noreferrer">通过jenkins API去build一个job</a><br> 2.<a href="https://wiki.jenkins.io/display/JENKINS/Remote+access+API" target="_blank" rel="noopener noreferrer">Jenkins Remote API</a></p>`,34)]))}const k=s(t,[["render",h],["__file","Jenkins的一些笔记.html.vue"]]),r=JSON.parse('{"path":"/kubernetes/Jenkins%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0.html","title":"Jenkins的一些笔记","lang":"zh-CN","frontmatter":{"description":"Jenkins的一些笔记 公司主要要开发自己的paas平台，集成了Jenkins，真的是遇到了很多很多困难，特别是在api调用的权限这一块，这里，把自己遇到的一些坑的解决方法做一下笔记吧。当然，首先要讲的，就是如何在开启安全的情况下进行API调用。 一、在全局安全配置中 1.1 启用安全 如果勾选不对，那么Jenkins有可能崩溃掉，亲身经历，之前一直...","head":[["meta",{"property":"og:url","content":"http://www.wenzhihuai.com/kubernetes/Jenkins%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"Jenkins的一些笔记"}],["meta",{"property":"og:description","content":"Jenkins的一些笔记 公司主要要开发自己的paas平台，集成了Jenkins，真的是遇到了很多很多困难，特别是在api调用的权限这一块，这里，把自己遇到的一些坑的解决方法做一下笔记吧。当然，首先要讲的，就是如何在开启安全的情况下进行API调用。 一、在全局安全配置中 1.1 启用安全 如果勾选不对，那么Jenkins有可能崩溃掉，亲身经历，之前一直..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github-images.wenzhihuai.com/images/20181027023132911846860.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-24T05:12:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-24T05:12:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Jenkins的一些笔记\\",\\"image\\":[\\"https://github-images.wenzhihuai.com/images/20181027023132911846860.png\\",\\"https://github-images.wenzhihuai.com/images/201810270231471528136147.png\\",\\"https://github-images.wenzhihuai.com/images/20181027023526539361439.png\\",\\"https://github-images.wenzhihuai.com/images/20181027024305570167743.png\\",\\"https://github-images.wenzhihuai.com/images/201810270251031329488332.png\\",\\"https://github-images.wenzhihuai.com/images/20181027030059348201424.png\\",\\"https://github-images.wenzhihuai.com/images/20181029112422597829257.png\\"],\\"dateModified\\":\\"2024-02-24T05:12:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zephery\\",\\"url\\":\\"https://wenzhihuai.com/article/\\"}]}"]]},"headers":[{"level":2,"title":"一、在全局安全配置中","slug":"一、在全局安全配置中","link":"#一、在全局安全配置中","children":[]},{"level":2,"title":"二、获取TOKEN","slug":"二、获取token","link":"#二、获取token","children":[]},{"level":2,"title":"三、获取Jenkins-Crumb","slug":"三、获取jenkins-crumb","link":"#三、获取jenkins-crumb","children":[]},{"level":2,"title":"四、值得注意的事","slug":"四、值得注意的事","link":"#四、值得注意的事","children":[]}],"git":{"createdTime":1708751576000,"updatedTime":1708751576000,"contributors":[{"name":"zhihuaiwen","email":"zhihuaiwen@tencent.com","commits":1}]},"readingTime":{"minutes":3.98,"words":1195},"filePathRelative":"kubernetes/Jenkins的一些笔记.md","localizedDate":"2024年2月24日","excerpt":"\\n<p>公司主要要开发自己的paas平台，集成了Jenkins，真的是遇到了很多很多困难，特别是在api调用的权限这一块，这里，把自己遇到的一些坑的解决方法做一下笔记吧。当然，首先要讲的，就是如何在开启安全的情况下进行API调用。</p>","autoDesc":true}');export{k as comp,r as data};
