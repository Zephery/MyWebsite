import{_ as a,c as t,d as r,o as i}from"./app-DtAVAFTf.js";const o={};function n(l,e){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="volatile" tabindex="-1"><a class="header-anchor" href="#volatile"><span>volatile</span></a></h1><p>Volatile是Java中的一种<a href="https://www.zhihu.com/search?q=%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2978976437%7D" target="_blank" rel="noopener noreferrer">轻量级同步机制</a>，用于保证变量的可见性和禁止<a href="https://www.zhihu.com/search?q=%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2978976437%7D" target="_blank" rel="noopener noreferrer">指令重排</a>。当一个变量被声明为Volatile类型时，任何修改该变量的操作都会立即被所有线程看到。也就是说，Volatile修饰的变量在每次修改时都会强制将修改刷新到主内存中，具有很好的可见性和线程安全性。</p><figure><img src="https://github-images.wenzhihuai.com/images/image-20240217004404932.png" alt="image-20240217004404932" tabindex="0" loading="lazy"><figcaption>image-20240217004404932</figcaption></figure><h2 id="可见性" tabindex="-1"><a class="header-anchor" href="#可见性"><span>可见性</span></a></h2><h2 id="有序性" tabindex="-1"><a class="header-anchor" href="#有序性"><span>有序性</span></a></h2>',5)]))}const h=a(o,[["render",n],["__file","volatile.html.vue"]]),s=JSON.parse('{"path":"/java/%E7%BA%BF%E7%A8%8B/volatile.html","title":"volatile","lang":"zh-CN","frontmatter":{"description":"volatile Volatile是Java中的一种轻量级同步机制，用于保证变量的可见性和禁止指令重排。当一个变量被声明为Volatile类型时，任何修改该变量的操作都会立即被所有线程看到。也就是说，Volatile修饰的变量在每次修改时都会强制将修改刷新到主内存中，具有很好的可见性和线程安全性。 image-20240217004404932imag...","head":[["meta",{"property":"og:url","content":"http://www.wenzhihuai.com/java/%E7%BA%BF%E7%A8%8B/volatile.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"volatile"}],["meta",{"property":"og:description","content":"volatile Volatile是Java中的一种轻量级同步机制，用于保证变量的可见性和禁止指令重排。当一个变量被声明为Volatile类型时，任何修改该变量的操作都会立即被所有线程看到。也就是说，Volatile修饰的变量在每次修改时都会强制将修改刷新到主内存中，具有很好的可见性和线程安全性。 image-20240217004404932imag..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github-images.wenzhihuai.com/images/image-20240217004404932.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T17:21:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T17:21:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"volatile\\",\\"image\\":[\\"https://github-images.wenzhihuai.com/images/image-20240217004404932.png\\"],\\"dateModified\\":\\"2024-02-16T17:21:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zephery\\",\\"url\\":\\"https://wenzhihuai.com/article/\\"}]}"]]},"headers":[{"level":2,"title":"可见性","slug":"可见性","link":"#可见性","children":[]},{"level":2,"title":"有序性","slug":"有序性","link":"#有序性","children":[]}],"git":{"createdTime":1708056026000,"updatedTime":1708104115000,"contributors":[{"name":"zhihuaiwen","email":"zhihuaiwen@tencent.com","commits":2}]},"readingTime":{"minutes":0.54,"words":161},"filePathRelative":"java/线程/volatile.md","localizedDate":"2024年2月16日","excerpt":"\\n<p>Volatile是Java中的一种<a href=\\"https://www.zhihu.com/search?q=%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2978976437%7D\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">轻量级同步机制</a>，用于保证变量的可见性和禁止<a href=\\"https://www.zhihu.com/search?q=%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2978976437%7D\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">指令重排</a>。当一个变量被声明为Volatile类型时，任何修改该变量的操作都会立即被所有线程看到。也就是说，Volatile修饰的变量在每次修改时都会强制将修改刷新到主内存中，具有很好的可见性和线程安全性。</p>","autoDesc":true}');export{h as comp,s as data};
