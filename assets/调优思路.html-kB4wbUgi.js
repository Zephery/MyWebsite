import{_ as t,c as a,d as r,o as n}from"./app-DtAVAFTf.js";const o={};function i(p,e){return n(),a("div",null,e[0]||(e[0]=[r('<h1 id="jvm调优思路" tabindex="-1"><a class="header-anchor" href="#jvm调优思路"><span>JVM调优思路</span></a></h1><p>在项目开发过程中、生产环境中，任何问题的解决、性能的调优总结下来都是三个步骤，即发现问题、定位问题、解决问题，本文将从这个步骤入手，详细阐述内存溢出（OOM、OutOfMemeory）、CPU飙高、GC频繁等JVM问题的排查、定位，以及调优。</p><p>1.监控发现问题<br> 2.工具分析问题<br> 3.性能调优<br> 下面开始一步步讲解</p><h2 id="一、监控发现问题" tabindex="-1"><a class="header-anchor" href="#一、监控发现问题"><span>一、监控发现问题</span></a></h2><p>通过监控工具例如Prometheus+Grafana，监控服务器有没有以下情况，有的话需要调优：</p><p>GC频繁<br> CPU负载过高<br> OOM<br> 内存泄露<br> 死锁<br> 程序响应时间较长</p><h2 id="二、工具分析问题" tabindex="-1"><a class="header-anchor" href="#二、工具分析问题"><span>二、工具分析问题</span></a></h2><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p>1.<a href="https://blog.csdn.net/qq_40991313/article/details/132382094" target="_blank" rel="noopener noreferrer">【JVM调优】如何进行JVM调优？一篇文章就够了！</a></p>',9)]))}const c=t(o,[["render",i],["__file","调优思路.html.vue"]]),s=JSON.parse('{"path":"/java/JVM/%E8%B0%83%E4%BC%98%E6%80%9D%E8%B7%AF.html","title":"JVM调优思路","lang":"zh-CN","frontmatter":{"index":false,"description":"JVM调优思路 在项目开发过程中、生产环境中，任何问题的解决、性能的调优总结下来都是三个步骤，即发现问题、定位问题、解决问题，本文将从这个步骤入手，详细阐述内存溢出（OOM、OutOfMemeory）、CPU飙高、GC频繁等JVM问题的排查、定位，以及调优。 1.监控发现问题 2.工具分析问题 3.性能调优 下面开始一步步讲解 一、监控发现问题 通过监...","head":[["meta",{"property":"og:url","content":"http://www.wenzhihuai.com/java/JVM/%E8%B0%83%E4%BC%98%E6%80%9D%E8%B7%AF.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"JVM调优思路"}],["meta",{"property":"og:description","content":"JVM调优思路 在项目开发过程中、生产环境中，任何问题的解决、性能的调优总结下来都是三个步骤，即发现问题、定位问题、解决问题，本文将从这个步骤入手，详细阐述内存溢出（OOM、OutOfMemeory）、CPU飙高、GC频繁等JVM问题的排查、定位，以及调优。 1.监控发现问题 2.工具分析问题 3.性能调优 下面开始一步步讲解 一、监控发现问题 通过监..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T11:46:28.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T11:46:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM调优思路\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-16T11:46:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zephery\\",\\"url\\":\\"https://wenzhihuai.com/article/\\"}]}"]]},"headers":[{"level":2,"title":"一、监控发现问题","slug":"一、监控发现问题","link":"#一、监控发现问题","children":[]},{"level":2,"title":"二、工具分析问题","slug":"二、工具分析问题","link":"#二、工具分析问题","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1708083988000,"updatedTime":1708083988000,"contributors":[{"name":"zhihuaiwen","email":"zhihuaiwen@tencent.com","commits":1}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"java/JVM/调优思路.md","localizedDate":"2024年2月16日","excerpt":"\\n<p>在项目开发过程中、生产环境中，任何问题的解决、性能的调优总结下来都是三个步骤，即发现问题、定位问题、解决问题，本文将从这个步骤入手，详细阐述内存溢出（OOM、OutOfMemeory）、CPU飙高、GC频繁等JVM问题的排查、定位，以及调优。</p>","autoDesc":true}');export{c as comp,s as data};
