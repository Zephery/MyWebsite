{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "个人博客",
  "home_page_url": "http://www.wenzhihuai.com/",
  "feed_url": "http://www.wenzhihuai.com/feed.json",
  "description": "个人博客",
  "favicon": "http://www.wenzhihuai.com/favicon.ico",
  "items": [
    {
      "title": "商品推荐系统-FAISS召回",
      "url": "http://www.wenzhihuai.com/system-design/%E7%B3%BB%E7%BB%9F%E5%BB%BA%E8%AE%BE/%E5%95%86%E5%93%81%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F-FAISS%E5%8F%AC%E5%9B%9E.html",
      "id": "http://www.wenzhihuai.com/system-design/%E7%B3%BB%E7%BB%9F%E5%BB%BA%E8%AE%BE/%E5%95%86%E5%93%81%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F-FAISS%E5%8F%AC%E5%9B%9E.html",
      "summary": "商品推荐系统-FAISS召回 1. 背景与挑战 在互联网电商、内容平台等实际业务中，商品库动辄百万量级，如何为每位用户从海量商品中迅速召回个性化、高相关的候选商品，是推荐系统最基础也最关键的一环。 如果只依赖商品的原始属性（如标题、描述）匹配，不仅难以刻画深层语义，还会因为暴力检索计算巨大，难以支撑在线业务实时性需求。 向量化（Embedding）特征...",
      "content_html": "\n<h2>1. 背景与挑战</h2>\n<p>在互联网电商、内容平台等实际业务中，商品库动辄百万量级，如何为每位用户从海量商品中迅速召回个性化、高相关的候选商品，是推荐系统最基础也最关键的一环。 如果只依赖商品的原始属性（如标题、描述）匹配，不仅难以刻画深层语义，还会因为暴力检索计算巨大，难以支撑在线业务实时性需求。</p>\n<p><strong>向量化（Embedding）特征+高效大规模近邻搜索</strong>，成为业界主流技术路径。FAISS（Facebook AI Similarity Search）就是这样一款解决大规模向量检索难题的利器。然而，FAISS 只“用”向量不“生产”向量，如何从表结构中高效提取、存储和利用embedding，直接关系到系统效果和可扩展性。</p>\n",
      "date_published": "2025-06-10T16:06:41.000Z",
      "date_modified": "2025-06-10T16:06:41.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "商品推荐系统",
      "url": "http://www.wenzhihuai.com/system-design/%E7%B3%BB%E7%BB%9F%E5%BB%BA%E8%AE%BE/%E4%BA%9A%E9%A9%AC%E9%80%8A%E5%95%86%E5%93%81%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F.html",
      "id": "http://www.wenzhihuai.com/system-design/%E7%B3%BB%E7%BB%9F%E5%BB%BA%E8%AE%BE/%E4%BA%9A%E9%A9%AC%E9%80%8A%E5%95%86%E5%93%81%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F.html",
      "summary": "商品推荐系统 推荐系统首先收集用户的历史行为数据,然后通过预处理的方法得到用户-评价矩阵,再利用机器学习领域中相关推荐技术形成对用户的个性化推荐。有的推荐系统还搜集用户对推荐结果的反馈,并根据实际的反馈信息实时调整推荐策略,产生更符合用户需求的推荐结果。为了更好的去了解一个推荐系统，从0到1了解推荐过程，我们通过一些网上开源的数据来搭建一个推荐系统 一...",
      "content_html": "\n<p>推荐系统首先收集用户的历史行为数据,然后通过预处理的方法得到用户-评价矩阵,再利用机器学习领域中相关推荐技术形成对用户的个性化推荐。有的推荐系统还搜集用户对推荐结果的反馈,并根据实际的反馈信息实时调整推荐策略,产生更符合用户需求的推荐结果。为了更好的去了解一个推荐系统，从0到1了解推荐过程，我们通过一些网上开源的数据来搭建一个推荐系统</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20250420162331865.png",
      "date_published": "2025-04-20T09:08:56.000Z",
      "date_modified": "2025-06-02T08:15:07.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "在鹅厂做java开发是什么体验",
      "url": "http://www.wenzhihuai.com/interesting/%E5%9C%A8%E9%B9%85%E5%8E%82%E5%81%9Ajava%E5%BC%80%E5%8F%91%E6%98%AF%E4%BB%80%E4%B9%88%E4%BD%93%E9%AA%8C.html",
      "id": "http://www.wenzhihuai.com/interesting/%E5%9C%A8%E9%B9%85%E5%8E%82%E5%81%9Ajava%E5%BC%80%E5%8F%91%E6%98%AF%E4%BB%80%E4%B9%88%E4%BD%93%E9%AA%8C.html",
      "summary": "在鹅厂做java开发是什么体验 离职已有好几个月，准备写一篇关于之前在腾讯做Java开发的经历，现在来谈谈在Java领域里，在腾讯做Java开发的体验。随便写写别较真。 首先，介绍一下腾讯里与Java相关的部门。主要有CDG中的腾讯广告和FIT（金融科技事业群）理财通。其他部门则包括TEG中的一些大数据部门，以及IEG中的大数据相关团队。在腾讯，大部分...",
      "content_html": "\n<p>离职已有好几个月，准备写一篇关于之前在腾讯做Java开发的经历，现在来谈谈在Java领域里，在腾讯做Java开发的体验。随便写写别较真。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20250226005803850.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>首先，介绍一下腾讯里与Java相关的部门。主要有CDG中的腾讯广告和FIT（金融科技事业群）理财通。其他部门则包括TEG中的一些大数据部门，以及IEG中的大数据相关团队。在腾讯，大部分Java工作都是与大数据相关的，因此在腾讯写代码的项目通常B2B或大数据相关的业务，其他类型项目较少。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/a0722ea4-4c0d-43ae-8237-26fc2141dcbe.jpeg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>一、Spring Boot</h2>\n<p>接下来谈谈在腾讯的一些开发工具。首先，在框架方面，大部分项目仍然使用Spring Boot，也有一些项目选择不知名的框架，曾经看到过使用Grizzly（号称高性能目前已过时）的项目，然后加了Spring Boot变成了大杂烩，可能是因为晋升有东西可讲吧。</p>\n<p>还有一些历史较悠久的项目，各种奇怪的框架都有存在。关于JDK，绝大多数项目使用的版本各异，某些项目甚至源自十几或二十年前，可能会基于JDK1.8，更新的则普遍使用JDK 17，具体还是看各个部门的选择。一些ToB业务由于需要迁移到云端，使用了腾讯云的微服务框架TSF，没用过不评价吧。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20250226221411785.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>二、中间件、服务发现、网关等</h2>\n<p>中间件其实都是以来腾讯云，有些BG会二次封装一下，基本也都是Kafka、Mysql、Elasticsearch、Redis这些，二次改装后可能交Tendis，TKafka，TDSQL之类的，是不是很好奇都加了个T，之前有人在脉脉调侃会不会出个TDeepSeek哈哈哈。</p>\n<p>在服务发现方面早期的有Taf，搭配nginx实现微服务框架，同时提供服务发现功能。令人惊讶的是，这些技术已经存在十几、二十年了，由于历史原因，也不敢动，不得不持续使用。内部大部分使用北极星（即在GitHub上开源的Polaris）。也存在一些较老的网关，名字记不太清了。</p>\n<p>RPC的话，内部频繁提到的是TRPC，这是一种类似于开源gRPC的框架。TRPC是基于TAF演变而来，是专为RPC设计的框架。公司为了推广这一框架，已成功在不少项目中应用。然而，TOB业务使用这一框架的情况较少，大部分仍使用SpringCloud框架，尤其是Spring Cloud。我个人觉得，灵活性是最佳策略，绝大多数项目选择Spring Boot。如果整合Kubernetes（k8s），再加上北极星网关，这样基本能够满足大部分业务需求。内部主要还是看团队的工具为主，基本每个BG都在搞自己的paas相关服务，比如tkex、天机阁，各种名字都有。</p>\n<p>ToB的业务可能比较惨，一边公司要求必须使用公司组件，一边客户要求不能使用鹅厂内部的东西，有时就得准备两套应对。。。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20250226221646890.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>三、大数据</h2>\n<p>内部也是封装了spark、flink这些，有的叫taiji、有的叫洛子(us)，现在不知道啥情况了，迭代很慢，spark on k8s这个天然适合调度的，不知道现在集成情况怎么样了。ui的话，感觉洛子交互更加友好（个人感觉哈），任务之间拉条线就能上下依赖，外面也有海豚apache dolphinscheduler类似的。虽然整体大数据平时吐槽会有点老旧，好像外面的集成更差一点哈哈。</p>\n<h2>四、监控</h2>\n<p>在监控方面，各种工具层出不穷。早期有秒级监控，还有天机阁。内部主流的监控产品是孵化出来的，其次有资源监控功能。确实有一些会议类似Prometheus的开源项目，资源监控的实现相对困难，设计上存在一些冗杂的环节。当一个服务不属于任何具体服务时，必须依赖于Agent（这可能指某种特定的日志或监控工具）来收集日志或监控数据。个人觉得这种设计有点奇葩，不知道怎么想的，部署一个服务还得配置考虑怎么配置日志、监控相关的agent。</p>\n<p>早期的秒级监控确实良好，并配有成熟的告警机制，但之后维护减少。我推测，监控逐渐被当作数据库使用，因为多维度相乘的成本相当高，最终的成本由业务自行承担，跨越发展时期的项目因无法承受过高的成本而被迫退出。许多项目在无奈的情况下，选择继续迁移至资源监控，导致监控的使用过程中显得相当不合理。</p>\n<p>此外，也了解到一些部门使用Prometheus，外部生态的确较好，不过Prometheus在腾讯内部使用较少。关于PaaS服务，公司内部有很多平台，主流的是腾讯云及PCG的007平台，还有TEG的TKEX。内部孵化的平台较多，同时保留了一些早期云平台的遗留产物，毕竟是在云原生技术成熟之前形成的。</p>\n<p>由于历史原因，维护这些老旧服务的工作极具挑战性，始终难以去除（这可能指这些古老服务一直以来存在且难以消除的现状），业务方面的调整往往比较谨慎。不同产品线的输出中，也有CICD（持续集成/持续部署）相关的工具。确实存在许多优秀的CICD工具，以蓝鲸平台为主，还有一些收购的公司如Coding等，提供多样化的CICD工具。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20250226004709780.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>五、职场那点事-有人的地方就有江湖。</h2>\n<p>腾讯主要还是以C++、Go为主，做为Java在里面的位置可想而知。10位组长中大约有4位曾经负责C++和PHP开发，另1位可能来自算法研究，剩余5位才是Java相关的。所以和组长的沟通中，就显得非常重要，比如周会说下进度的时候，有的人就简单两三句说完了，有的人就会把很简单的事情说的很复杂，甚至还把别人的成果也说了进去，那么在组长眼里，你做的事情太简单了，别人做的事情更有成果。当然了，大厂还是主要看组，每个组的氛围都不同，也跟组织架构有关，有时候每半年换个总监，每次换领导之前的项目就没有意义了，每个领导的想法不同吧。整体而言，外面也一样，都是看运气和个人如何面对吧。</p>\n<h2>六、总结</h2>\n<p>滨海里的夕阳很好看</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20250226004658950.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20250226005803850.png",
      "date_published": "2025-02-25T16:59:17.000Z",
      "date_modified": "2025-05-14T15:40:47.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "mac通过网线连接主机(fnOS)",
      "url": "http://www.wenzhihuai.com/interesting/mini%E4%B8%BB%E6%9C%BA/mac%E8%BF%9E%E6%8E%A5%E4%B8%BB%E6%9C%BA.html",
      "id": "http://www.wenzhihuai.com/interesting/mini%E4%B8%BB%E6%9C%BA/mac%E8%BF%9E%E6%8E%A5%E4%B8%BB%E6%9C%BA.html",
      "summary": "mac通过网线连接主机(fnOS) 一、mac端 mac是typec的，用了个转接头+网线直连主机，初始化的时候跟下面一致，默认都是自动的 点击详细信息，配置IPv4选择使用DHCP 二、主机端 主机端是最麻烦的，刚开始的时候怎么也找不到网卡，ifconfg敲了很多遍，最后发现是fnOS没有装驱动。。。 *-network UNCLAIMED 表明你的...",
      "content_html": "\n<h2>一、mac端</h2>\n<p>mac是typec的，用了个转接头+网线直连主机，初始化的时候跟下面一致，默认都是自动的</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1732811324411.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>点击详细信息，配置IPv4选择使用DHCP</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/b1efd8cf4b16b9b7ffe0e11500258a91.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>二、主机端</h2>\n<p>主机端是最麻烦的，刚开始的时候怎么也找不到网卡，ifconfg敲了很多遍，最后发现是fnOS没有装驱动。。。</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>root@server:~# sudo lshw -C network</span></span>\n<span class=\"line\"><span>  *-network</span></span>\n<span class=\"line\"><span>       description: Wireless interface</span></span>\n<span class=\"line\"><span>       product: Wi-Fi 6 AX210/AX211/AX411 160MHz</span></span>\n<span class=\"line\"><span>       vendor: Intel Corporation</span></span>\n<span class=\"line\"><span>       physical id: 0</span></span>\n<span class=\"line\"><span>       bus info: pci@0000:01:00.0</span></span>\n<span class=\"line\"><span>       logical name: wlp1s0</span></span>\n<span class=\"line\"><span>       version: 1a</span></span>\n<span class=\"line\"><span>       serial: 10:5f:ad:d6:2b:ee</span></span>\n<span class=\"line\"><span>       width: 64 bits</span></span>\n<span class=\"line\"><span>       clock: 33MHz</span></span>\n<span class=\"line\"><span>       capabilities: pm msi pciexpress msix bus_master cap_list ethernet physical wireless</span></span>\n<span class=\"line\"><span>       configuration: broadcast=yes driver=iwlwifi driverversion=6.6.38-trim firmware=72.daa05125.0 ty-a0-gf-a0-72.uc ip=192.168.0.113 latency=0 link=yes multicast=yes wireless=IEEE 802.11</span></span>\n<span class=\"line\"><span>       resources: irq:18 memory:80900000-80903fff</span></span>\n<span class=\"line\"><span>  *-network UNCLAIMED</span></span>\n<span class=\"line\"><span>       description: Ethernet controller</span></span>\n<span class=\"line\"><span>       product: RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller</span></span>\n<span class=\"line\"><span>       vendor: Realtek Semiconductor Co., Ltd.</span></span>\n<span class=\"line\"><span>       physical id: 0</span></span>\n<span class=\"line\"><span>       bus info: pci@0000:02:00.0</span></span>\n<span class=\"line\"><span>       version: 2b</span></span>\n<span class=\"line\"><span>       width: 64 bits</span></span>\n<span class=\"line\"><span>       clock: 33MHz</span></span>\n<span class=\"line\"><span>       capabilities: pm msi pciexpress msix cap_list</span></span>\n<span class=\"line\"><span>       configuration: latency=0</span></span>\n<span class=\"line\"><span>       resources: ioport:3000(size=256) memory:80804000-80804fff memory:80800000-80803fff</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>*-network UNCLAIMED</code> 表明你的网络接口未被驱动程序识别和管理。为了解决这个问题，你需要安装或重新加载正确的网络驱动程序。</p>\n<h4>下载并安装 Realtek 网络驱动程序</h4>\n<p>访问 Realtek 官方网站下载适用于你的 RTL8111/8168/8411 网络控制器的驱动程序，通常是 <code>r8168</code> 驱动程序。</p>\n<ul>\n<li>访问 <a href=\"https://www.realtek.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Realtek 官方驱动下载页面</a>。</li>\n<li>找到并下载适用于 Linux 内核的 <code>r8168</code> 驱动程序。</li>\n</ul>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">root@server:/vol1#</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /vol1/1000/aaa/r8168-8.054.00/r8168-8.054.00.tar/r8168-8.054.00/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">root@server:/vol1/1000/aaa/r8168-8.054.00/r8168-8.054.00.tar/r8168-8.054.00#</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">autorun.sh</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  Makefile</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  README</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  src</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">root@server:/vol1/1000/aaa/r8168-8.054.00/r8168-8.054.00.tar/r8168-8.054.00#</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sh</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> autorun.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Check</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> old</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> driver</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> and</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> unload</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> it.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Build</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> the</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> module</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> and</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Warning:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> modules_install:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> missing</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'System.map'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Skipping</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> depmod.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Backup</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> r8169.ko</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rename</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> r8169.ko</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> r8169.bak</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">DEPMOD</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 6.6.38-trim</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">load</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> module</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> r8168</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Updating</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> initramfs.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Please</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wait.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">update-initramfs:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Generating</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /boot/initrd.img-6.6.38-trim</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Completed.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>安装好了之后，理论上自动显示网口2，但IP什么的都是空的，需要点击编辑，然后按照下面的填一下。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1732806426577.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>三、最后</h2>\n<p>最后就可以互相ping通了，很稳定，传输速度很快很快，基本都能1ms以内</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1732806404944.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n",
      "image": "https://github-images.wenzhihuai.com/images/QQ_1732811324411.png",
      "date_published": "2024-11-29T18:45:10.000Z",
      "date_modified": "2024-11-29T18:45:10.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "推荐工程-概述",
      "url": "http://www.wenzhihuai.com/system-design/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B-%E6%A6%82%E8%BF%B0.html",
      "id": "http://www.wenzhihuai.com/system-design/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B-%E6%A6%82%E8%BF%B0.html",
      "summary": "推荐工程-概述 随着移动互联网的飞速发展，人们已经处于信息过载的时代。在这个时代，信息的生产者很难将信息呈现在对其感兴趣的消费者面前，而信息消费者也难以从海量信息中找到自己感兴趣的内容。推荐系统充当了将信息生产者和信息消费者连接起来的桥梁，平台通常作为推荐系统的载体，实现信息生产者和消费者之间的匹配。 平台方、信息生产者和消费者可以分别用平台方（如：腾...",
      "content_html": "\n<p>随着移动互联网的飞速发展，人们已经处于信息过载的时代。在这个时代，信息的生产者很难将信息呈现在对其感兴趣的消费者面前，而信息消费者也难以从海量信息中找到自己感兴趣的内容。推荐系统充当了将信息生产者和信息消费者连接起来的桥梁，平台通常作为推荐系统的载体，实现信息生产者和消费者之间的匹配。</p>\n<p>平台方、信息生产者和消费者可以分别用平台方（如：腾讯视频、淘宝、网易云音乐等）、物品（如：视频、商品、音乐等）和用户来指代。</p>\n<p>技术的最终目的都是服务业务的，我们来看下当前电商系统的模式差异。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20241130000406534.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>一、淘宝和拼多多的电商模式差异</h2>\n<p>淘宝是流量逻辑，主体是搜索，需要海量SKU满足长尾需求；拼多多代表的是<strong>匹配逻辑，推荐商品给消费者，SKC有限，但满足结构性丰富</strong>。之前的电商模式都是从淘宝挖一块做小淘宝，而拼多多是在另一个维度做电商，满足不同的场景需求。淘宝的千人千面相当于个性化搜索，但搜索本身是长尾的，你就很难做反向定制。而拼多多集中流量到有限商品里，有了规模后再反向定制。</p>\n<p>拼多多起来之后，京东、唯品会、蘑菇街都实验过相似模式，对于他们来说，拼团不过是一个创造GMV增量的工具；而拼多多是人的逻辑，我们通过拼团了解人，通过人推荐物，后期会过渡到机器推荐物。拼多多APP里几乎没有搜索，也不设购物车，你可以想像把今日头条下的信息流换成商品流就是拼多多。所以早期看大家都是低价和拼团，但我们的出发点不同、方向不同，长大了也就不一样了。</p>\n<p>与其说拼多多是社交电商，不如说它是“人以群分”的电商。以前是人去找东西，现在是相似的人聚集起来，迅速产生需求量，这种模式给供应链优化创造了很大的机会。</p>\n<h2>二、搜索、推荐、广告三者的异同</h2>\n<p><strong>搜索和推荐</strong>都是解决互联网大数据时代信息过载的手段，但是它们也存在着许多的不同：</p>\n<ol>\n<li><strong>用户意图</strong>：搜索时的用户意图是非常明确的，用户通过查询的关键词主动发起搜索请求。对于推荐而言，用户的需求是不明确的，推荐系统在通过对用户历史兴趣的分析给用户推荐他们可能感兴趣的内容。</li>\n<li><strong>个性化程度</strong>：对于搜索而言，由于限定的了搜索词，所以展示的内容对于用户来说是有标准答案的，所以搜索的个性化程度较低。而对于推荐来说，推荐的内容本身就是没有标准答案的，每个人都有不同的兴趣，所以每个人展示的内容，个性化程度比较强。</li>\n<li><strong>优化目标</strong>：对于搜索系统而言，更希望可以快速地、准确地定位到标准答案，所以希望搜索结果中答案越靠前越好，通常评价指标有：归一化折损累计收益（NDCG）、精确率（Precision）和召回率（Recall）。对于推荐系统而言，因为没有标准的答案，所以优化目标可能会更宽泛。例如用户停留时长、点击、多样性，评分等。不同的优化目标又可以拆解成具体的不同的评价指标。</li>\n<li><strong>马太效应和长尾理论</strong>：对于搜索系统来说，用户的点击基本都集中在排列靠前的内容上，对于排列靠后的很少会被关注，这就是马太效应。而对于推荐系统来说，热门物品被用户关注更多，冷门物品不怎么被关注的现象也是存在的，所以也存在马太效应。此外，在推荐系统中，冷门物品的数量远远高于热门物品的数量，所以物品的长尾性非常明显。</li>\n</ol>\n<p>**广告：**借助搜索和推荐技术实现广告的精准投放，可以将广告理解成搜索推荐的一种应用场景，技术方案更复杂，涉及到智能预算控制、广告竞价等。</p>\n<h2>三、推荐整体架构</h2>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-85666a02ae5e703ffdbf45c6bf9f2523_1440w.jpg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>推荐的框架主要有以下几个模块：</p>\n<ul>\n<li><strong>协议调度</strong>：请求的发送和结果的回传。在请求中，用户会发送自己的 ID，地理位置等信息。结果回传中会返回推荐系统给用户推荐的结果。</li>\n<li><strong>推荐算法</strong>：算法按照一定的逻辑为用户产生最终的推荐结果。不同的推荐算法基于不同的逻辑与数据运算过程。</li>\n<li><strong>消息队列</strong>：数据的上报与处理。根据用户的 ID，拉取例如用户的性别、之前的点击、收藏等用户信息。而用户在 APP 中产生的新行为，例如新的点击会储存在存储单元里面。</li>\n<li><strong>存储单元</strong>：不同的数据类型和用途会储存在不同的存储单元中，例如内容标签与内容的索引存储在 mysql 里，实时性数据存储在 redis 里，需要进行数据统计的数据存储在 TDW 里。</li>\n</ul>\n<p>电商系统演变到现在，各类归纳层出不穷，传统零售是“货-场-人”，而新零售是“人-货-场”，强调以人为核心，根据用户的需求推送产品和打造消费场景。在电商线上平台三者具体表现就是：</p>\n<p>**人：**是指店铺访客、流量。通过数据分析、用户画像、顾客细分等手段，可以更加精准地理解顾客，从而提供个性化的产品和服务<br>\n**货：**是指商家商品。选择合适的商品，有竞争力的价格，保证商品的质量和供应链的高效运营，都是成功的关键<br>\n**场：**由最初的交易平台（如京东、淘宝等）演变到场景（首页、商详推荐页、加购推荐页等），实现千人千面。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20241130022550567.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>回到我们推荐本身，<strong>推荐的本质就是排序</strong>，把成千上万的商品更精准的展现到用户面前，提升用户的购买量，从而变现。技术层面，最核心的就是推荐算法，目前市面上对推荐系统基本等于推荐算法，而做为一名后台，在推荐系统中的角色介绍可为少之又少，本系列就<strong>用后台的角色去看待整个推荐系统</strong>。</p>\n<h2>参考</h2>\n<p>1.<a href=\"https://datawhalechina.github.io/fun-rec/#/\" target=\"_blank\" rel=\"noopener noreferrer\">FunRec</a></p>\n<p>2.<a href=\"https://zhuanlan.zhihu.com/p/6859032468\" target=\"_blank\" rel=\"noopener noreferrer\">从零开始了解推荐系统全貌</a></p>\n<p>3.<a href=\"https://zhuanlan.zhihu.com/p/674082007\" target=\"_blank\" rel=\"noopener noreferrer\">从“人、货、场”的不同视角，重新审视电商和新零售</a></p>\n<p>4.<a href=\"https://www.woshipm.com/operate/5802395.html\" target=\"_blank\" rel=\"noopener noreferrer\">“人货场”，在产品业务分析中的具体应用</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20241130000406534.png",
      "date_published": "2024-11-29T18:45:10.000Z",
      "date_modified": "2024-11-29T18:45:10.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "2024-11-09上海迪斯尼",
      "url": "http://www.wenzhihuai.com/about-the-author/personal-life/2024-11-09%E4%B8%8A%E6%B5%B7%E8%BF%AA%E6%96%AF%E5%B0%BC.html",
      "id": "http://www.wenzhihuai.com/about-the-author/personal-life/2024-11-09%E4%B8%8A%E6%B5%B7%E8%BF%AA%E6%96%AF%E5%B0%BC.html",
      "summary": "2024-11-09上海迪斯尼",
      "content_html": "\n",
      "date_published": "2024-11-10T15:55:36.000Z",
      "date_modified": "2024-11-11T16:10:11.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "买了个mini主机",
      "url": "http://www.wenzhihuai.com/interesting/mini%E4%B8%BB%E6%9C%BA/%E4%B9%B0%E4%BA%86%E4%B8%AAmini%E4%B8%BB%E6%9C%BA.html",
      "id": "http://www.wenzhihuai.com/interesting/mini%E4%B8%BB%E6%9C%BA/%E4%B9%B0%E4%BA%86%E4%B8%AAmini%E4%B8%BB%E6%9C%BA.html",
      "summary": "买了个mini主机 虽然有苹果的电脑，但是在安装一些软件的时候，总想着能不能有一个小型的服务器，免得各种设置导致 Mac 出现异常。整体上看了一些小型主机，也看过苹果的 Mac mini，但是发现它太贵了，大概要 3000 多，特别是如果要更高配置的话，价格会更高，甚至更贵。所以，我就考虑一些别的小型主机。也看了一些像 NUC 这些服务器，但是觉得还是...",
      "content_html": "\n<p>虽然有苹果的电脑，但是在安装一些软件的时候，总想着能不能有一个小型的服务器，免得各种设置导致 Mac 出现异常。整体上看了一些小型主机，也看过苹果的 Mac mini，但是发现它太贵了，大概要 3000 多，特别是如果要更高配置的话，价格会更高，甚至更贵。所以，我就考虑一些别的小型主机。也看了一些像 NUC 这些服务器，但是觉得还是太贵了。于是我自己去淘宝搜索，找到了这一款 N100 版的主机。</p>\n<p>成本的话，由于有折扣，所以大概是 410 左右，然后自己加了个看上去不错的内存条花了 300 左右。硬盘的话我自己之前就有，所以总成本大概是 700 左右。大小的话，大概是一台手机横着和竖着的正方形大小，还带 Wi-Fi，虽然不太稳定。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/iowejofwjeofjwoeifjwoe.png\" alt=\"iowejofwjeofjwoeifjwoe\" tabindex=\"0\" loading=\"lazy\"><figcaption>iowejofwjeofjwoeifjwoe</figcaption></figure>\n<h2>一、系统的安装</h2>\n<p>系统我看是支持windows，还有现在Ubuntu，但是我这种选择的是centos stream 9， 10的话我也找过，但是发现很多软件还有不兼容。所以最终还是centos stream 9。</p>\n<p>1、下载Ventoy软件</p>\n<p>去Ventoy官网下载Ventoy软件（Download . Ventoy）如下图界面</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1727625608185.png\" alt=\"QQ_1727625608185\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1727625608185</figcaption></figure>\n<p>2、制作启动盘</p>\n<p>选择合适的版本以及平台下载好之后，进行解压，解压出来之后进入文件夹，如下图左边所示，双击打开Ventoy2Disk.exe，会出现下图右边的界面，选择好自己需要制作启动盘的U盘，然后点击安装等待安装成功即可顺利制作成功启动U盘。</p>\n<p>3、centos安装</p>\n<p>直接取<a href=\"https://www.centos.org/download/\" target=\"_blank\" rel=\"noopener noreferrer\">官网</a>，下载完放到u盘即可。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1727625711792.png\" alt=\"QQ_1727625711792\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1727625711792</figcaption></figure>\n<p>它的BIOS是按F7启动，直接加载即可。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20241007222938414.png\" alt=\"image-20241007222938414\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20241007222938414</figcaption></figure>\n<p>之后就是正常的centos安装流程了。</p>\n<h2>二、连接wifi</h2>\n<p>因为是用作服务器的，所以并没有给它配置个专门的显示器，只要换个网络，就连不上新的wifi了，这里可以用网线连接路由器进行下面的操作即可。</p>\n<p>在 CentOS 系统中，通过命令行连接 Wi-Fi 通常需要使用 nmcli（NetworkManager 命令行工具）来管理网络连接。nmcli 是 NetworkManager 的一个命令行接口，可以用于创建、修改、激活和停用网络连接。以下是如何使用 nmcli 命令行工具连接 Wi-Fi 的详细步骤。</p>\n<h3>步骤 1: 检查网络接口</h3>\n<p>首先，确认你的 Wi-Fi 网络接口是否被检测到，并且 NetworkManager 是否正在运行。</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> device</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> status</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>输出示例：</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>DEVICE         TYPE      STATE         CONNECTION</span></span>\n<span class=\"line\"><span>wlp3s0         wifi      disconnected  --</span></span>\n<span class=\"line\"><span>enp0s25        ethernet  connected     Wired connection 1</span></span>\n<span class=\"line\"><span>lo             loopback  unmanaged     --</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在这个示例中，wlp3s0 是 Wi-Fi 接口，它当前处于未连接状态。</p>\n<h3>步骤 2: 启用 Wi-Fi 网卡</h3>\n<p>如果你的 Wi-Fi 网卡是禁用状态，可以通过以下命令启用：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> radio</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wifi</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> on</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>验证 Wi-Fi 是否已启用：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> radio</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h3>步骤 3: 扫描可用的 Wi-Fi 网络</h3>\n<p>使用 nmcli 扫描附近的 Wi-Fi 网络：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> device</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wifi</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> list</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>你将看到可用的 Wi-Fi 网络列表，每个网络都会显示 SSID（网络名称）、安全类型等信息。</p>\n<h3>步骤 4: 连接到 Wi-Fi 网络</h3>\n<p>使用 nmcli 命令连接到指定的 Wi-Fi 网络。例如，如果你的 Wi-Fi 网络名称（SSID）是 MyWiFiNetwork，并且密码是 password123，你可以使用以下命令连接：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> device</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wifi</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> connect</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'xxxxxx'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> password</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'xxxxx'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>你应该会看到类似于以下输出，表明连接成功：</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>Device 'wlp3s0' successfully activated with 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h3>步骤 5: 验证连接状态</h3>\n<p>验证网络连接状态：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> connection</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> show</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>查看当前连接的详细信息：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> device</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> show</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wlp3s0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的其实在2024年其实有点问题，因为会默认连接2.4GHz的wifi，使用的时候很明显没有那么快，特别是在用命令行的时候会觉得明显卡顿，现在需要切换到5GHz的wifi。<br>\n首先，使用 nmcli 获取可用 WiFi 网络及其 BSSID：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> SSID,BSSID,CHAN</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wifi</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> list</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>示例输出：</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>SSID       BSSID              CHAN</span></span>\n<span class=\"line\"><span>MyNetwork  XX:XX:XX:XX:XX:01  36</span></span>\n<span class=\"line\"><span>MyNetwork  XX:XX:XX:XX:XX:02  1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在这里, XX:XX:XX:XX:XX:01 是 5GHz 网络的 BSSID。</p>\n<p>使用 nmcli 连接到特定的 BSSID</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nmcli</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wifi</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> connect</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'XX:XX:XX:XX:XX:01'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> password</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'your_password'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>三、VNC远程连接</h2>\n<p>桌面还是偶尔需要用一下的，虽然用的不多。</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>root@master:~# dnf install  -y  tigervnc-server</span></span>\n<span class=\"line\"><span>root@master:~# vncserver</span></span>\n<span class=\"line\"><span>bash: vncserver: command not found...</span></span>\n<span class=\"line\"><span>Install package 'tigervnc-server' to provide command 'vncserver'? [N/y] y</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span> * Waiting in queue... </span></span>\n<span class=\"line\"><span> * Loading list of packages.... </span></span>\n<span class=\"line\"><span>The following packages have to be installed:</span></span>\n<span class=\"line\"><span> dbus-x11-1:1.12.20-8.el9.x86_64        X11-requiring add-ons for D-BUS</span></span>\n<span class=\"line\"><span> tigervnc-license-1.14.0-3.el9.noarch   License of TigerVNC suite</span></span>\n<span class=\"line\"><span> tigervnc-selinux-1.14.0-3.el9.noarch   SELinux module for TigerVNC</span></span>\n<span class=\"line\"><span> tigervnc-server-1.14.0-3.el9.x86_64    A TigerVNC server</span></span>\n<span class=\"line\"><span> tigervnc-server-minimal-1.14.0-3.el9.x86_64    A minimal installation of TigerVNC server</span></span>\n<span class=\"line\"><span>Proceed with changes? [N/y] y</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span> * Waiting in queue... </span></span>\n<span class=\"line\"><span> * Waiting for authentication... </span></span>\n<span class=\"line\"><span> * Waiting in queue... </span></span>\n<span class=\"line\"><span> * Downloading packages... </span></span>\n<span class=\"line\"><span> * Requesting data... </span></span>\n<span class=\"line\"><span> * Testing changes... </span></span>\n<span class=\"line\"><span> * Installing packages... </span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>WARNING: vncserver has been replaced by a systemd unit and is now considered deprecated and removed in upstream.</span></span>\n<span class=\"line\"><span>Please read /usr/share/doc/tigervnc/HOWTO.md for more information.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>You will require a password to access your desktops.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>getpassword error: Inappropriate ioctl for device</span></span>\n<span class=\"line\"><span>Password:</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>之后在mac开启屏幕共享就可以了</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20241007225855305.png\" alt=\"image-20241007225855305\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20241007225855305</figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1728313164289.png\" alt=\"QQ_1728313164289\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1728313164289</figcaption></figure>\n<h2>四、docker 配置</h2>\n<p>docker安装我以为很简单，没想到这里是最难的一步了。安装完docker之后，总是报错：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Error</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> response</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> from</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> daemon:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://registry-1.docker.io/v2/\":</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> context</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> deadline</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> exceeded</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>即使改了mirrors也毫无作用</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"registry-mirrors\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"https://ylce84v9.mirror.aliyuncs.com\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><a href=\"http://xn--dockerpullregistry-1-ke45aw72bka0344cql1dhug090aga251c300inv8f28oallnzg3a737akke.docker.io\" target=\"_blank\" rel=\"noopener noreferrer\">看起来好像是docker每次pull镜像都要访问一次registry-1.docker.io</a>，但是这个网址国内已经无法连接了，各种折腾，这里只贴一下代码吧，原理就就不讲了（懂得都懂）。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/5493f11fb4fe4de1bba971a744bf4f4a_1074242703.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sslocal</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/shadowsocks.json</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> start</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --socks5</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 127.0.0.1:1080</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> http://httpbin.org/ip</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> yum</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -y</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> privoxy</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>vim /etc/systemd/system/docker.service.d/http-proxy.conf</code></p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[Service]</span></span>\n<span class=\"line\"><span>Environment=\"HTTP_PROXY=http://127.0.0.1:8118\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>/etc/systemd/system/docker.service.d/https-proxy.conf</code></p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[Service]</span></span>\n<span class=\"line\"><span>Environment=\"HTTPS_PROXY=http://127.0.0.1:8118\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>最后重启docker</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">systemctl</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> start</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> privoxy</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">systemctl</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> enable</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> privoxy</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> systemctl</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> daemon-reload</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> systemctl</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> restart</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> docker</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1729956484197.png\" alt=\"QQ_1729956484197\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1729956484197</figcaption></figure>\n<h2>五、文件共享</h2>\n<p>sd卡好像读取不了，只能换个usb转换器</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fdisk</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mount</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /dev/sdb1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /mnt/usb/sd</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在CentOS中设置文件共享，可以使用Samba服务。以下是配置Samba以共享文件的基本步骤：</p>\n<ol>\n<li>安装Samba</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> samba</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> samba-client</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> samba-common</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ol>\n<li>\n<p>设置共享目录</p>\n<p>编辑Samba配置文件<code>/etc/samba/smb.conf</code>，在文件末尾添加以下内容：</p>\n</li>\n</ol>\n<div class=\"language-ini line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"ini\" data-title=\"ini\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">[shared]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">   path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\"> /path/to/shared/directory</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">   writable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\"> yes</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">   browseable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\"> yes</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\">   guest </span><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">ok</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\"> yes</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>\n<p>设置Samba密码</p>\n<p>为了允许访问，需要为用户设置一个Samba密码：</p>\n</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> smbpasswd</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> your_username</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ol>\n<li>重启Samba服务</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> systemctl</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> restart</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> smb.service</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> systemctl</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> restart</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> nmb.service</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>\n<p>配置防火墙（如果已启用）</p>\n<p>允许Samba通过防火墙：</p>\n</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> firewall-cmd</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --permanent</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --zone=public</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --add-service=samba</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> firewall-cmd</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --reload</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>现在，您应该能够从网络上的其他计算机通过SMB/CIFS访问共享。在Windows中，你可以使用<code>\\\\centos-ip\\shared</code>，在Linux中，你可以使用<code>smbclient //centos-ip/shared -U your_username</code></p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ_1730035390803.png\" alt=\"QQ_1730035390803\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1730035390803</figcaption></figure>\n<p>参考：</p>\n<p><a href=\"https://shadowsockshelp.github.io/Shadowsocks/linux.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://shadowsockshelp.github.io/Shadowsocks/linux.html</a></p>\n<p><a href=\"https://stackoverflow.com/questions/48056365/error-get-https-registry-1-docker-io-v2-net-http-request-canceled-while-b\" target=\"_blank\" rel=\"noopener noreferrer\">https://stackoverflow.com/questions/48056365/error-get-https-registry-1-docker-io-v2-net-http-request-canceled-while-b</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/iowejofwjeofjwoeifjwoe.png",
      "date_published": "2024-10-27T13:33:05.000Z",
      "date_modified": "2024-11-29T18:45:10.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "流程编排LiteFlow",
      "url": "http://www.wenzhihuai.com/java/%E6%B5%81%E7%A8%8B%E7%BC%96%E6%8E%92LiteFlow.html",
      "id": "http://www.wenzhihuai.com/java/%E6%B5%81%E7%A8%8B%E7%BC%96%E6%8E%92LiteFlow.html",
      "summary": "流程编排LiteFlow LiteFlow真的是相见恨晚啊，之前做过的很多系统，都会用各种if else，switch这些来解决不同业务方提出的问题，有时候还要“切一个分支”来搞这些额外的事情，把代码搞得一团糟，毫无可读性而言。如何打破僵局？LiteFlow为解耦逻辑而生，为编排而生，在使用LiteFlow之后，你会发现打造一个低耦合，灵活的系统会变得...",
      "content_html": "\n<p>LiteFlow真的是相见恨晚啊，之前做过的很多系统，都会用各种if else，switch这些来解决不同业务方提出的问题，有时候还要“切一个分支”来搞这些额外的事情，把代码搞得一团糟，毫无可读性而言。如何打破僵局？LiteFlow为解耦逻辑而生，为编排而生，在使用LiteFlow之后，你会发现打造一个低耦合，灵活的系统会变得易如反掌！</p>\n<p>另外， LiteFlow 和 Activiti 们并不是同一个东西，而是面向不同的使用场景和需求。LiteFlow 更加轻量灵活，适合需要简单流程管理和动态配置的场景；而 Activiti 则是一个全面的 BPM 引擎，适合需要复杂业务流程管理和任务管理的场景。根据具体业务需求，可以选择合适的工具来实现流程编排。</p>\n<h2>背景</h2>\n<p>之前做过一个数据分发系统，需要消费kafka的数据，下游有不同的业务，每个业务可能有共同的地方，也有不同的地方，在经过各类的处理之后，最后数据分发到下游里面去。为了简化代码方便理解，我们定义4个Handler（A、B、C、D），然后有3个不同的业务，需要经过不同的Handler，整个流程如下。</p>\n<img src=\"https://github-images.wenzhihuai.com/images/image-20241108000137572.png\" alt=\"image-20241108000137572\" style=\"zoom:50%;\">\n<p>如果要在一个代码实现上诉功能，我们第一反应可能是<strong>责任链设计模式</strong>，每个业务一条链路，在Spring中，类似下面的代码：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> abstract</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    abstract</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Request</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Component</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerA</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Request</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"处理器1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Component</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerB</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Request</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"处理器2\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Component</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerC</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Request</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"处理器3\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Component</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerD</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Request</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"处理器4\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//然后我们定义一个枚举类，用来配置不同业务需要经历过的处理器。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> enum</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandleBuz</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">    Business_1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(HandlerA</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">HandlerB)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">    Business_2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(HandlerB</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">HandlerC)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">    Business_3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(HandlerA</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">HandlerD)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Class</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">?</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Handler</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">[] processors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> HandleBuz</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">?</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">processors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">processors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">processors;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> handle</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Handler</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> handler</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> processors) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">handler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(xxx);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>通过配置责任链，可以灵活地组合处理对象，实现不同的处理流程，并且可以在运行时动态地改变处理的顺序，由于责任链模式遵循<a href=\"https://zhida.zhihu.com/search?q=%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99&amp;zhida_source=entity&amp;is_preview=1\" target=\"_blank\" rel=\"noopener noreferrer\">开闭原则</a>，新的处理者可以随时被加入到责任链中，不需要修改已有代码，提供了良好的扩展性。但实际上面对各种需求的时候，没法做到完全的解耦，比如<strong>对于HandlerA，如果业务1和业务2都有定制化的需求（来自产品提的临时或长期需求）</strong>，此时是应该再HandlerA中用if else解决，还是再额外开个HandlerA_1和HandlerA_2。这类特性需求会非常多，最终把代码可读性变得越来越低。</p>\n<h2>一、为什么需要流程编排</h2>\n<p>LiteFlow由Baidu开源，专注于逻辑驱动流程编排，通过组件化方式快速构建和执行业务流程，有效解耦复杂业务逻辑。它以其轻量级、快速、稳定且可编排的特性，在业务流程管理、规则引擎、工作流、订单处理、数据处理、微服务编排以及智能化流程管理等领域都有广泛的应用前景。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1.svg\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h2>二、它可以解决什么问题</h2>\n<p>对大部分不断迭代的代码来说，历史遗留的代码加上需要面对各类各样的需求，代码会变得越来越难维护，甚至变成屎山。我们想着不断的去进行解耦，不断的去进行切割拆分，还要兼顾新需求，就怕蝴蝶效应导致大故障，liteflow能帮我们在解耦上更加清晰一点。<br>\n（1）复杂业务流程编排和管理<br>\n在一些应用场景中，业务逻辑往往非常复杂，涉及多个步骤的执行，并且这些步骤之间具有复杂的依赖关系。LiteFlow 可以帮助开发者通过配置和代码相结合的方式定义和管理这些流程。<br>\n（2）流程动态配置<br>\nLiteFlow 允许通过配置文件或者数据库动态修改流程，而无需修改代码。这意味着可以根据不同的业务需求快速调整并发布新的流程，而不需要重新部署应用。<br>\n（3）流程节点的复用和解耦<br>\n在使用 LiteFlow 时，每个业务步骤都可以定义为一个独立的节点（Node），这些节点可以独立开发、测试和维护，并且可以在多个流程中复用。通过这种方式，可以实现业务逻辑的复用和解耦，提高代码的可维护性。<br>\n（4）节点状态和错误处理<br>\nLiteFlow 提供了丰富的节点状态管理和错误处理机制，允许开发者在流程执行过程中捕获和处理异常，从而确保系统的稳定性和健壮性。<br>\n（5） 高扩展性和自定义能力<br>\nLiteFlow 具有高度的扩展性，开发者可以根据自身业务的特殊需求定制节点、组件和插件，从而满足复杂场景的要求。</p>\n<p>以下是一些实际使用 LiteFlow 的示例场景：<br>\n（1）<strong>订单处理系统</strong>：在电商系统中，订单处理涉及多个步骤，如库存检查、支付处理、订单确认和发货等。LiteFlow 可以帮助将这些步骤分开独立实现，然后通过流程引擎编排执行。<br>\n（2）<strong>审批流程</strong>：在企业中，审批流程通常包括多个节点（如申请、审批、复核、归档等），并且这些节点之间可能有条件和依赖关系。LiteFlow 可以帮助动态配置和管理这些流程，提高审批效率。<br>\n（3）<strong>营销活动</strong>：在一些营销活动中，不同的活动环节和逻辑可能会因用户行为和外部条件而变化。LiteFlow 可以帮助实现灵活的活动规则配置和执行。</p>\n<h2>三、LiteFlow改造之后</h2>\n<p>首先定义并实现一些组件，确保SpringBoot会扫描到这些组件并注册进上下文。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">LiteflowComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerA</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> NodeComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> process</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Exception</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Customizer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> contextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getContextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Customizer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">LiteflowComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"b\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerB</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> NodeComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> process</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Exception</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Customizer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> contextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getContextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Customizer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">LiteflowComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"c\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerC</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> NodeComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> process</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Exception</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Customizer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> contextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getContextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Customizer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Slf4j</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">LiteflowComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"d\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HandlerD</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> NodeComponent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> process</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Exception</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Customizer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> contextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getContextBean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Customizer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>同时，你得在resources下的<code>config/flow.el.xml</code>中定义规则：</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;?</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">xml</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1.0\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> encoding</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"UTF-8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">flow</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">chain</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"chain1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        THEN(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        a,b</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        );</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">chain</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">chain</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"chain2\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        THEN(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        b,c</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        );</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">chain</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">chain</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"chain3\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        THEN(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        a,d</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        );</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">chain</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">flow</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>最后，在消费kafka的时候，先定义一个ruleChainMap，用来判断根据唯一的id（业务id或者消息id）来判断走哪条chain、哪个组件等，甚至可以定义方法级别的组件。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> ruleChainMap </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HashMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Resource</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> FlowExecutor</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> flowExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">PostConstruct</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        ruleChainMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"业务1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        ruleChainMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"业务2\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        ruleChainMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"业务3\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">KafkaListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">topics</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"xxxx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> common</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">List</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ConsumerRecord</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> records) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ConsumerRecord</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> record </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> records) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> chainName </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ruleChainMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"唯一id(可以是record里的，也可以全局定义的id)\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            LiteflowResponse</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> response </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> flowExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">execute2Resp</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(chainName, xxx, xxx, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> TempContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>由于篇幅的关系，这里不再讲解怎么传递上下文的关系，可以自己去官网研究一下。另外，上面的例子因为是简化之后的，如果你觉得不够形象，可以看看下面的实际业务。这个如果不使用liteflow，可能就得在主流程代码里增加各种if else，甚至后续改了一小块也不知道对别的地方有没有影响。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20241108000231371.png\" alt=\"image-20241108000231371\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20241108000231371</figcaption></figure>\n<h2>总结</h2>\n<p><strong>后续，如果面对产品经理“来自大领导的一个想法，我不知道后续还会不会一直做下去，反正先做了再说”这类需求，就可以自己定义一个LiteFlow的组件，既不污染主流程的代码，后续下线了删掉即可，赏心悦目。</strong></p>\n<h2>文档&amp;参考</h2>\n<p>1.【腾讯文档】业务处理复杂 <a href=\"https://docs.qq.com/flowchart/DZVFURmhCb0JFUHFD\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.qq.com/flowchart/DZVFURmhCb0JFUHFD</a><br>\n2.【腾讯文档】业务处理复杂2 <a href=\"https://docs.qq.com/flowchart/DZXVOaUV5VGRtc3ZD\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.qq.com/flowchart/DZXVOaUV5VGRtc3ZD</a><br>\n3.<a href=\"https://zhuanlan.zhihu.com/p/680508137\" target=\"_blank\" rel=\"noopener noreferrer\">一文搞懂设计模式—责任链模式</a><br>\n4.<a href=\"https://liteflow.cc/\" target=\"_blank\" rel=\"noopener noreferrer\">LiteFlow官网</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/1.svg",
      "date_published": "2024-09-08T16:55:53.000Z",
      "date_modified": "2024-11-07T16:03:32.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "推荐系统入门",
      "url": "http://www.wenzhihuai.com/system-design/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8.html",
      "id": "http://www.wenzhihuai.com/system-design/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8.html",
      "summary": "推荐系统入门 转载自：https://www.cnblogs.com/cgli/p/17225189.html 一、背景 近期由于公司业务系统需要做一个推荐系统，应该说是实现一个相当简单推荐逻辑。毕竟业务场景相当简单，企业的数据规模也比较小，各种用户数据、交易数据、订单数据、行为数据等加在一起 100 多 TB 量级，这点数据量在巨大的平台商面前都谈不...",
      "content_html": "\n<p><em>转载自：<a href=\"https://www.cnblogs.com/cgli/p/17225189.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/cgli/p/17225189.html</a></em></p>\n<h2>一、背景</h2>\n<p>近期由于公司业务系统需要做一个推荐系统，应该说是实现一个相当简单推荐逻辑。毕竟业务场景相当简单，企业的数据规模也比较小，各种用户数据、交易数据、订单数据、行为数据等加在一起 100 多 TB 量级，这点数据量在巨大的平台商面前都谈不数据规模。数据级量小，业务场景也简单，实现起比较的容易，但原理基本上大同小异。</p>\n<p>本文尝试从最简单的推荐入手，我们暂不去讨论大规模数据分析和算法。更多从软件工程角度思考问题，那些高大上算法留给读者去思考。开源获取：<a href=\"https://xie.infoq.cn/link?target=http%3A%2F%2Fwww.jnpfsoft.com%2F%3Ffrom%3Dinfoq\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.jnpfsoft.com/?from=infoq</a></p>\n<p>下面就来谈谈整个推荐的设计实现过程。</p>\n<h2>二、推荐系统介绍</h2>\n<h3>2.1、为什么需要推荐系统？</h3>\n<p>首先推荐系统作用是很大的。推荐系统在很多业务场景有广泛使用和发挥的空间，它的应用和影子无处不在，在多媒体内容、广告平台和电商平台尤为常见。大多平台商或企业都是基于大数据算法分析做推荐系统。推荐算法也是层出不穷，比如相似度计算、近邻推荐、概率矩阵分解、概率图等，当然也有综合多种算法融合使用。</p>\n<p>互联网时代，数据呈爆炸式增长，前所未有的数据量远远超过受众的接收和处理能力，因此，从海量复杂数据中有效获取关键性有用信息成为必须解决的问题。面对信息过载问题，人们迫切需要一种高效的信息过滤系统,“推荐系统”应运而生。</p>\n<p>20 世纪 90 年代以来，尽管推荐系统在理论、方法和应用方面取得了系列重要进展，但数据的稀疏性与长尾性、用户行为模式挖掘、可解释性、社会化推荐等问题仍然是其面临的重要挑战。</p>\n<p>进一步地，伴随互联网及信息技术的持续飞速发展，用户规模与项目数量急剧增长，相应地，用户行为数据的稀疏性、长尾性问题更加凸显。也就是说目前各大平台虽然已经推荐系统，但是实际应用当中还是面临很多问题，仍然有很大的提升空间。这是技术挑战也机会，当然这也是我们这些从业者可以发挥的地方。</p>\n<h3>2.2、推荐系统解决什么问题？</h3>\n<p>推荐系统从 20 世纪 90 年代就被提出来了，但是真正进入大众视野以及在各大互联网公司中流行起来，还是最近几年的事情。</p>\n<p>随着移动互联网的发展，越来越多的信息开始在互联网上传播，产生了严重的信息过载。因此，如何从众多信息中找到用户感兴趣的信息，这个便是推荐系统的价值。精准推荐解决了用户痛点，提升了用户体验，最终便能留住用户。</p>\n<p>推荐系统本质上就是一个信息过滤系统，通常分为：召回、排序、重排序这 3 个环节，每个环节逐层过滤，最终从海量的物料库中筛选出几十个用户可能感兴趣的物品推荐给用户。</p>\n<p>推荐系统的分阶段过滤流程如下图所示：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/9cd60b43b0f590e54ff8fd2de18b16a2.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h3>2.3、推荐系统应用场景</h3>\n<p>哪里有海量信息，哪里就有推荐系统，我们每天最常用的 APP 都涉及到推荐功能：</p>\n<p>资讯类：今日头条、腾讯新闻等</p>\n<p>电商类：淘宝、京东、拼多多、亚马逊等</p>\n<p>娱乐类：抖音、快手、爱奇艺等</p>\n<p>生活服务类：美团、大众点评、携程等</p>\n<p>社交类：微信、陌陌、脉脉等</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/38a57bd31efcdd62404364b89d43e74d.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>实际例子还有很多，稍微上一点规模的平台或 APP 都有这一个推荐模块。</p>\n<p>推荐系统的应用场景通常分为以下两类：</p>\n<p>基于用户维度的推荐：根据用户的历史行为和兴趣进行推荐，比如淘宝首页的猜你喜欢、抖音的首页推荐等。</p>\n<p>基于物品维度的推荐：根据用户当前浏览的标的物进行推荐，比如打开京东 APP 的商品详情页，会推荐和主商品相关的商品给你。</p>\n<h3>2.4、搜索、推荐、广告三者的异同</h3>\n<p>搜索和推荐是 AI 算法最常见的两个应用场景，在技术上有相通的地方。</p>\n<p>搜索：有明确的搜索意图，搜索出来的结果和用户的搜索词相关。推荐：不具有目的性，依赖用户的历史行为和画像数据进行个性化推荐。广告：借助搜索和推荐技术实现广告的精准投放，可以将广告理解成搜索推荐的一种应用场景，技术方案更复杂，涉及到智能预算控制、广告竞价等。</p>\n<h2>三、推荐系统通用框架</h2>\n<p>推荐系统涉及周边和自己模块还是比较多，这里主要从最简单推荐系统自身功能去构思设计简单结构。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/331f2625bd080daf15ab1272ff8b2618.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>上面这个图基本把推荐处理过程画出来，结构比较清晰，看图理想即可。</p>\n<p>从分层架构设计视角来说可以分成多层架构形式</p>\n<p>分层：排序层、过滤层、召回层、数据存储层、计算平台、数据源。</p>\n<p>可以说市面上推荐系统设计都是差不多是这个样子，只是里面使用技术或组件不同而已。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/021e41edfe456b85b854fbfe6324d790.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>上面是推荐系统的整体架构图，自下而上分成了多层，各层的主要作用如下：</p>\n<ul>\n<li>\n<p>数据源：推荐算法所依赖的各种数据源，包括物品数据、用户数据、行为日志、其他可利用的业务数据、甚至公司外部的数据。</p>\n</li>\n<li>\n<p>计算平台：负责对底层的各种异构数据进行清洗、加工，离线计算和实时计算。</p>\n</li>\n<li>\n<p>数据存储层：存储计算平台处理后的数据，根据需要可落地到不同的存储系统中，比如 Redis 中可以存储用户特征和用户画像数据，ES 中可以用来索引物品数据，Faiss 中可以存储用户或者物品的 embedding 向量等。</p>\n</li>\n<li>\n<p>召回层：包括各种推荐策略或者算法，比如经典的协同过滤，基于内容的召回，基于向量的召回，用于托底的热门推荐等。为了应对线上高并发的流量，召回结果通常会预计算好，建立好倒排索引后存入缓存中。</p>\n</li>\n<li>\n<p>融合过滤层：触发多路召回，由于召回层的每个召回源都会返回一个候选集，因此这一层需要进行融合和过滤。</p>\n</li>\n<li>\n<p>排序层：利用机器学习或者深度学习模型，以及更丰富的特征进行重排序，筛选出更小、更精准的推荐集合返回给上层业务。从数据存储层到召回层、再到融合过滤层和排序层，候选集逐层减少，但是精准性要求越来越高，因此也带来了计算复杂度的逐层增加，这个便是推荐系统的最大挑战。</p>\n</li>\n</ul>\n<p>其实对于推荐引擎来说，最核心的部分主要是两块：特征和算法。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/ee91ac49bd6897ec079c7fb0a4f48339.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>这些工具和技术框架都是比较成熟稳定的，是众多厂商在实际业务场景中选择应用的。所以也没有太多特殊的地方。</p>\n<p>特征计算由于数据量大，通常采用大数据的离线和实时处理技术，像 Spark、Flink 等，然后将计算结果保存在 Redis 或者其他存储系统中（比如 HBase、MongoDB 或者 ES），供召回和排序模块使用。</p>\n<p>召回算法的作用是：从海量数据中快速获取一批候选数据，要求是快和尽可能的准。这一层通常有丰富的策略和算法，用来确保多样性，为了更好的推荐效果，某些算法也会做成近实时的。</p>\n<p>排序算法的作用是：对多路召回的候选集进行精细化排序。它会利用物品、用户以及它们之间的交叉特征，然后通过复杂的机器学习或者深度学习模型进行打分排序，这一层的特点是计算复杂但是结果更精准。</p>\n<h2>四、经典算法</h2>\n<p>了解了推荐系统的整体架构和技术方案后，下面带大家深入一下算法细节。这里选择图解的是推荐系统中的明星算法：协同过滤（Collaborative Filtering，CF）。</p>\n<p>对于很多同学来说，可能觉得 AI 算法晦涩难懂，门槛太高，确实很多深度学习算法的确是这样，但是协同过滤却是一个简单同时效果很好的算法，只要你有初中数学的基础就能看懂。</p>\n<h3>4.1、协同过滤是什么？</h3>\n<p>协同过滤算法的核心就是「找相似」，它基于用户的历史行为（浏览、收藏、评论等），去发现用户对物品的喜好，并对喜好进行度量和打分，最终筛选出推荐集合。它又包括两个分支：</p>\n<ul>\n<li>基于用户的协同过滤：User-CF，核心是找相似的人。比如下图中，用户 A 和用户 C 都购买过物品 a 和物品 b，那么可以认为 A 和 C 是相似的，因为他们共同喜欢的物品多。这样，就可以将用户 A 购买过的物品 d 推荐给用户 C。</li>\n</ul>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/81dfa21cedb8b6f682a8e10c445e16a3.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>基于用户的协同过滤示例</p>\n<ul>\n<li>基于物品的协同过滤：Item-CF，核心是找相似的物品。比如下图中，物品 a 和物品 b 同时被用户 A，B，C 购买了，那么物品 a 和物品 b 被认为是相似的，因为它们的共现次数很高。这样，如果用户 D 购买了物品 a，则可以将和物品 a 最相似的物品 b 推荐给用户 D。</li>\n</ul>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/1ae22325d1152c67b6c3d764a5b14da1.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h3>4.2、如何找相似？</h3>\n<p>协同过滤的核心就是找相似，User-CF 是找用户之间的相似，Item-CF 是找物品之间的相似，那到底如何衡量两个用户或者物品之间的相似性呢？</p>\n<p>我们都知道，对于坐标中的两个点，如果它们之间的夹角越小，这两个点越相似。</p>\n<p>这就是初中学过的余弦距离，它的计算公式如下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/026750069c00863d20f066f05500ce0a.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>举个例子，A 坐标是（0，3，1），B 坐标是（4，3，0），那么这两个点的余弦距离是 0.569，余弦距离越接近 1，表示它们越相似。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/536eb6ad9babb3c43f7f5a5769e8123e.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>除了余弦距离，衡量相似性的方法还有很多种，比如：欧式距离、皮尔逊相关系数、Jaccard 相似系数等等，这里不做展开，只是计算公式上的差异而已。</p>\n<h3>4.3、Item-CF 的算法流程</h3>\n<p>清楚了相似性的定义后，下面以 Item-CF 为例，详细说下这个算法到底是如何选出推荐物品的？</p>\n<h4>4.3.1 、整理物品的共现矩阵</h4>\n<p>假设有 A、B、C、D、E 5 个用户，其中用户 A 喜欢物品 a、b、c，用户 B 喜欢物品 a、b 等等。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/b7d64b6e583ea87959599ec8959de2cd.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>所谓共现，即：两个物品被同一个用户喜欢了。比如物品 a 和 b，由于他们同时被用户 A、B、C 喜欢，所以 a 和 b 的共现次数是 3，采用这种统计方法就可以快速构建出共现矩阵。</p>\n<h4>4.3.2、 计算物品的相似度矩阵</h4>\n<p>对于 Item-CF 算法来说，一般不采用前面提到的余弦距离来衡量物品的相似度，而是采用下面的公式：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/c29cd8e5ad23469ba51aac2334f4cab5.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>其中，N(u) 表示喜欢物品 u 的用户数，N(v) 表示喜欢物品 v 的用户数，两者的交集表示同时喜欢物品 u 和物品 v 的用户数。</p>\n<p>很显然，如果两个物品同时被很多人喜欢，那么这两个物品越相似。</p>\n<p>基于第 1 步计算出来的共现矩阵以及每个物品的喜欢人数，便可以构造出物品的相似度矩阵：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/d7bcad0dffe0c8e206dee5302f42fbbf.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h4>4.3.2、 推荐物品</h4>\n<p>最后一步，便可以基于相似度矩阵推荐物品了，公式如下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/8ffa869ca03b8b1acddb871541a3659c.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>其中，Puj 表示用户 u 对物品 j 的感兴趣程度，值越大，越值得被推荐。</p>\n<p>N(u) 表示用户 u 感兴趣的物品集合，S(j,N) 表示和物品 j 最相似的前 N 个物品，Wij 表示物品 i 和物品 j 的相似度，Rui 表示用户 u 对物品 i 的兴趣度。</p>\n<p>上面的公式有点抽象，直接看例子更容易理解，假设我要给用户 E 推荐物品，前面我们已经知道用户 E 喜欢物品 b 和物品 c，喜欢程度假设分别为 0.6 和 0.4。</p>\n<p>那么，利用上面的公式计算出来的推荐结果如下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/851e6744a622918e04591bf79bfb200b.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>因为物品 b 和物品 c 已经被用户 E 喜欢过了，所以不再重复推荐。最终对比用户 E 对物品 a 和物品 d 的感兴趣程度，因为 0.682 &gt; 0.3，因此选择推荐物品 a。</p>\n<h2>五、如何实现推荐系统</h2>\n<h3>5.1、选择数据集</h3>\n<p>这里采用的是推荐领域非常经典的 MovieLens 数据集，它是一个关于电影评分的数据集，官网上提供了多个不同大小的版本，下面以 ml-1m 数据集（大约 100 万条用户评分记录）为例。</p>\n<p>下载解压后，文件夹中包含：ratings.dat、movies.dat、users.dat 3 个文件，共 6040 个用户，3900 部电影，1000209 条评分记录。各个文件的格式都是一样的，每行表示一条记录，字段之间采用 :: 进行分割。</p>\n<p>以 ratings.dat 为例，每一行包括 4 个属性：UserID, MovieID, Rating, Timestamp。</p>\n<p>通过脚本可以统计出不同评分的人数分布：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/28d28f2e8bbf5a4e8ab0dd366b57b67b.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h3>5.2、读取原始数据</h3>\n<p>程序主要使用数据集中的 ratings.dat 这个文件，通过解析该文件，抽取出 user_id、movie_id、rating 3 个字段，最终构造出算法依赖的数据，并保存在变量 dataset 中，它的格式为：dict[user_id][movie_id] = rate</p>\n<h3>5.3、构造物品的相似度矩阵</h3>\n<p>基于第 2 步的 dataset，可以进一步统计出每部电影的评分次数以及电影的共生矩阵，然后再生成相似度矩阵。</p>\n<h3>5.4、基于相似度矩阵推荐物品</h3>\n<p>最后，可以基于相似度矩阵进行推荐了，输入一个用户 id，先针对该用户评分过的电影，依次选出 top 10 最相似的电影，然后加权求和后计算出每个候选电影的最终评分，最后再选择得分前 5 的电影进行推荐。</p>\n<h3>5.5、调用推荐系统</h3>\n<p>下面选择 UserId=1 这个用户，看下程序的执行结果。由于推荐程序输出的是 movieId 列表，为了更直观的了解推荐结果，这里转换成电影的标题进行输出。</p>\n<p>Java 代码示例</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> java.io.File</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> java.io.IOException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> java.util.HashMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> java.util.Map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> java.util.Scanner</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CFRecommendation</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 使用MovieLens数据集</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> RATINGS_FILE </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"ratings.csv\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 用户ID-电影ID-打分</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 加载ratings.csv文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> loadRatings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> IOException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        File</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> file</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> File</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(RATINGS_FILE);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Scanner</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> scanner</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Scanner</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(file);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ratings </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HashMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">scanner</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hasNextLine</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> line</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> scanner</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nextLine</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> line</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">split</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\",\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parseInt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(data[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> movieId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parseInt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(data[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rating</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Double</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parseDouble</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(data[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            // 用户-电影-打分</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">movieRatings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(userId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (movieRatings </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                movieRatings </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HashMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(userId, movieRatings);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            movieRatings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId, rating);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 计算两个用户的相似度</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> double</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> calculateSimilarity</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> user1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> user2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">rating1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(user1);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">rating2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(user2);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (rating1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> rating2 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> sum1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> sum2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> sumProduct</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> movieId</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> rating1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">keySet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">rating2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">containsKey</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId)) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rating1Value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> rating1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rating2Value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> rating2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                sum1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> rating1Value </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> rating1Value;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                sum2 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> rating2Value </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> rating2Value;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                sumProduct </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> rating1Value </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> rating2Value;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> sumProduct </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Math</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sqrt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(sum1) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Math</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sqrt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(sum2));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 计算余弦相似度</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> double</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> cosineSim</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">user1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">user2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> denominator1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> denominator2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> numerator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> key</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> user1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">keySet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            numerator </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> user1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(key) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> user2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(key);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            denominator1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Math</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pow</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">user1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(key), </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            denominator2 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Math</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pow</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">user2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(key), </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        result </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> numerator </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Math</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sqrt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(denominator1) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Math</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sqrt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(denominator2));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> result;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 使用协同过滤算法获取用户的推荐列表</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Double</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> recommend</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">recommendList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HashMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 遍历所有用户</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> otherUserId</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">keySet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (otherUserId </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> userId) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> similarity</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> calculateSimilarity</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(userId, otherUserId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">                Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">otherRating</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(otherUserId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                // 遍历其他用户的评分，如果当前用户没有评分，则将其推荐给当前用户</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> movieId</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> otherRating</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">keySet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">ratings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(userId).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">containsKey</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId)) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> recommendScore</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> otherRating</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> similarity;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                        recommendList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId, recommendScore);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> recommendList;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> IOException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        loadRatings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 测试用例：计算用户1与用户2的相似度</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> user1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> user2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> similarity</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> calculateSimilarity</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(user1, user2);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"用户1与用户2的相似度：\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> similarity);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 测试用例：为用户1推荐电影</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Double</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">recommendList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> recommend</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(userId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"为用户1推荐的电影：\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> movieId</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> recommendList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">keySet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"电影ID：\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> movieId </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \",推荐分数：\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> recommendList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(movieId));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>六、问题与展望</h2>\n<p>通过上面的介绍，大家对推荐系统的基本构成应该有了一个初步认识，但是真正运用到线上真实环境时，还会遇到很多算法和工程上的挑战，绝对不是几十行代码可以搞定的。</p>\n<p><strong>问题：</strong></p>\n<ol>\n<li>\n<p>上面的示例使用了标准化的数据集，而线上环境的数据是非标准化的，因此涉及到海量数据的收集、清洗和加工，最终构造出模型可使用的数据集。</p>\n<p>复杂且繁琐的特征工程，都说算法模型的上限由数据和特征决定。对于线上环境，需要从业务角度选择出可用的特征，然后对数据进行清洗、标准化、归一化、离散化，并通过实验效果进一步验证特征的有效性。</p>\n<p>算法复杂度如何降低？比如上面介绍的 Item-CF 算法，时间和空间复杂度都是 O(N×N)，而线上环境的数据都是千万甚至上亿级别的，如果不做算法优化，可能几天都跑不出数据，或者内存中根本放不下如此大的矩阵数据。</p>\n<p>实时性如何满足？因为用户的兴趣随着他们最新的行为在实时变化的，如果模型只是基于历史数据进行推荐，可能结果不够精准。因此，如何满足实时性要求，以及对于新加入的物品或者用户该如何推荐，都是要解决的问题。</p>\n<p>算法效果和性能的权衡。从算法角度追求多样性和准确性，从工程角度追求性能，这两者之间必须找到一个平衡点。</p>\n<p>推荐系统的稳定性和效果追踪。需要有一套完善的数据监控和应用监控体系，同时有 ABTest 平台进行灰度实验，进行效果对比。</p>\n</li>\n</ol>\n<p><strong>展望：</strong></p>\n<p>AI 时代，算法会更加复杂和完善，推荐的效果也会越来越好，特别是随着 OpenAI ChatGPT 横空出现，推荐系统最有条件和最适合 GPT 模型去结合使用，当然也会更加高效和智能。期待我们智能版推荐系统早日面世。</p>\n",
      "image": "https://github-images.wenzhihuai.com/test/9cd60b43b0f590e54ff8fd2de18b16a2.png",
      "date_published": "2024-09-01T13:54:44.000Z",
      "date_modified": "2024-09-01T13:54:44.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "计算广告基本概念入门总结",
      "url": "http://www.wenzhihuai.com/system-design/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93.html",
      "id": "http://www.wenzhihuai.com/system-design/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93.html",
      "summary": "计算广告基本概念入门总结 广告业务是各大互联网公司主要的商业化变现营收来源。近年来随着互联网和移动端技术的普及，使得广告的用户触达成本大大降低，而广告的形态和内涵也逐渐变得复杂。广告不再是单纯的展示和计费，而是结合了推荐、大数据等各类计算技术，以达到广告的精准受众定向，计算广告概念由此诞生。 本文基于《计算广告》及互联网内容，整理了计算广告核心概念及入...",
      "content_html": "\n<p>广告业务是各大互联网公司主要的商业化变现营收来源。近年来随着互联网和移动端技术的普及，使得广告的用户触达成本大大降低，而广告的形态和内涵也逐渐变得复杂。广告不再是单纯的展示和计费，而是结合了推荐、大数据等各类计算技术，以达到广告的精准受众定向，计算广告概念由此诞生。</p>\n<p>本文基于《计算广告》及互联网内容，整理了计算广告核心概念及入门知识，希望对入行广告行业的RD和非技术同学有所帮助。</p>\n",
      "image": "https://github-images.wenzhihuai.com/test/70353957ecb1660b1ca67b4c8aea852b.png",
      "date_published": "2024-09-01T13:54:44.000Z",
      "date_modified": "2025-08-03T10:47:24.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "程序员副业探索之电商",
      "url": "http://www.wenzhihuai.com/interesting/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%89%AF%E4%B8%9A%E6%8E%A2%E7%B4%A2%E4%B9%8B%E7%94%B5%E5%95%86.html",
      "id": "http://www.wenzhihuai.com/interesting/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%89%AF%E4%B8%9A%E6%8E%A2%E7%B4%A2%E4%B9%8B%E7%94%B5%E5%95%86.html",
      "summary": "程序员副业探索之电商 在腾讯广告工作期间，我主要负责小程序电商与广告业务，见证了互联网电商行业的剧变，特别是众多电商公司纷纷拥抱私域流量，直播带货成为新风尚，广告投入也在持续增加。通过这些经历，我积累了不少关于互联网电商的经验，并萌生了尝试电商副业的想法。 在小红书上，女装博主们凭借独特的穿搭分享吸引了大量粉丝，“种草”文化+电商+私域正成为未来的发展...",
      "content_html": "\n<p>在腾讯广告工作期间，我主要负责小程序电商与广告业务，见证了互联网电商行业的剧变，特别是众多电商公司纷纷拥抱私域流量，直播带货成为新风尚，广告投入也在持续增加。通过这些经历，我积累了不少关于互联网电商的经验，并萌生了尝试电商副业的想法。</p>\n<p>在小红书上，女装博主们凭借独特的穿搭分享吸引了大量粉丝，“种草”文化+电商+私域正成为未来的发展趋势。结合自身的电商背景与资源，我倾向于专注于小程序电商，但对拼多多店铺和跨境电商也有兴趣。</p>\n<p>探索小程序电商的过程中，我结识了许多朋友，也认识了几位从事电商运营的同事。最初，我将重心放在小程序女装项目上，计划从深圳的优质供应商中精选货品，打造一个集商品展示、购买、支付、私域于一体的完整小程序平台。然而，女装行业的高退货率远超预期，几乎每售出十件商品，就有七件被退货，这让项目难以持续。</p>\n<p>因此，我开始考虑其他方向，如化妆品。化妆品作为日常消费品需求稳定且退货率较低，因而具有较高的利润。接下来，我将分享个人在化妆品电商领域的探索。</p>\n<h2>一、小程序化妆品</h2>\n<p>关于小程序，我们其实考虑过很多种不同的方向。比如，我们曾设想过做一个垂直类的平台，主要销售化妆品或者女装。我们也有其他的想法，比如销售珠宝等产品。但是，经过实际流程的运行后，我们发现小程序在很多方面存在诸多限制。下面，我将简单地介绍一下，如何创建一个小程序。</p>\n<h3>1.1 小程序准备（营业执照&amp;微信支付&amp;小程序appId）</h3>\n<p>首先，如果你想开发一个小程序，必须要具备微信支付的功能。而微信支付是个人无法申请的，因此需要一个营业执照。首先，你需要申请一个个人营业执照。</p>\n<p>取得营业执照后，接下来就是用这个营业执照来申请开通微信支付。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/QQ_1722269773245.png\" alt=\"QQ_1722269773245\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1722269773245</figcaption></figure>\n<p>接下来，你需要注册一个小程序。在去年，可以通过一些服务商或代理商注册，每个小程序的注册费用仅需几毛钱。但现在这条途径已被限制，目前注册一个小程序大约需要300元。此外，为了上线小程序，还需要通过审核，审核费用同样大约为300元。</p>\n<p>同时，你还需要准备域名和服务器资源。我们选择了一台配置为8G内存的服务器，因为我们的成交量并不大，这样的配置已经足够应付日常需求。</p>\n<h3>1.2 小程序开发</h3>\n<p>在小程序开发方面，由于我们是想完全独立开发，因此首先我们从 GitHub 上查找了一个电商小程序的开源项目。尽管我们查看了很多项目，但基本上没有直接能用的，都需要进行小改造。我们对其进行了改进，接入了微信支付和腾讯的 COS 对象存储。</p>\n<p>接下来，我们搭建了自己的 MySQL 数据库。考虑到我们的小程序交易量较小，因此没有使用分库分表的复杂结构，单独一个 MySQL 数据库已经足够。如果未来交易量大幅增加，可以考虑使用其他厂商的分库分表方案，例如 TiDB 等。</p>\n<p>开发的框架网上的都类似一样，分为下面的几个模块，整体上感觉代码也不复杂（CRUD），就是比较耗时间。</p>\n<ul>\n<li><strong>会员系统</strong>：用户注册、登录、会员等级、积分管理等。</li>\n<li><strong>商品管理</strong>：商品的添加、编辑、删除、库存管理、分类管理等。</li>\n<li><strong>订单管理</strong>：订单生成、支付、取消、退换货、订单状态管理等。</li>\n<li><strong>支付系统</strong>：支持多种支付方式，如微信支付、支付宝支付、银联支付等。</li>\n<li><strong>营销工具</strong>：优惠券、拼团、秒杀、砍价、满减活动等。</li>\n<li><strong>物流管理</strong>：快递公司管理、物流信息追踪等。</li>\n<li><strong>数据分析</strong>：提供销售数据统计、用户数据分析、商品销售分析等报表功能。</li>\n<li><strong>客服系统</strong>：在线客服、留言板、消息通知等。</li>\n<li><strong>权限管理</strong>：用户权限角色管理，不同角色有不同的操作权限。</li>\n</ul>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/pro_section3_content.png\" alt=\"强化私域流量管理\" tabindex=\"0\" loading=\"lazy\"><figcaption>强化私域流量管理</figcaption></figure>\n<p>网上那些代理商有赞、微盟之类的，可以0元搞个小程序，但是如果要用到营销功能（秒杀、优惠券等），都得给几千、几万块。底成本创业，就自己找开元弄一下了，前后端都会点。在成本方面，由于个人对化妆品并不熟悉，也分不清面霜、补水之类的，因此花费了约500元请别人帮忙上传商品信息。效果如下，也可去微信小程序上搜索一下体验下（不要付款）。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/QQ_1722270680440.png\" alt=\"QQ_1722270680440\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1722270680440</figcaption></figure>\n<p>下面是小程序主要的一些功能：</p>\n<p><strong>域名配置</strong>：不能通过ip使用，需要申请好域名+https才可。</p>\n<p><strong>微信支付</strong>：如上一步所说，营业执照后即可把小程序对接微信支付</p>\n<p><strong>微信物流</strong>（发货信息管理）：以前网上可集成快递100的功能，现在需要收费了，好在微信官方提供了自己的微信物流，可以直接对接，免费，填写完发货信息之后微信还可以直接通知用户。</p>\n<p><strong>客服</strong>：这个很重要，需要直接对接普通用户，回答一些咨询和售后内容。</p>\n<p><strong>微信认证</strong>：这个微信强求，没办法，300块。确保商品、图片、文字等内容的合法性，避免侵权行为。遵守相关电商法律法规，例如消费者权益保护、退换货政策等。</p>\n<p>尽管小程序已经上线，整体功能虽然齐全，但效果不如预期。</p>\n<p>我们原本设想，当用户下单后可以从华南、北地区的供货商那里进行发货。然而，整体计算下来，由于缺乏足够的曝光，导致小程序的商品没有得到应有的推广。在微信平台，小程序的商品不会自动得到推广曝光，需要开发者自行进行推广。</p>\n<p>我们在开发初期计划通过小程序结合私域流量进行引流，主要策略包括：建立小程序，通过社群引流和推广，吸引粉丝，再通过促销和秒杀等营销活动来提高订单量。然而，第一步的推广就遇到了困难。整个五月份几乎没有用户点击和访问。</p>\n<p>最初立下的方向较为宏大，计划通过私域流量提升销售。然而，由于对化妆品行业了解不够深，加之市场上存在假货问题，也是在无法更多的推广。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/QQ_1722270494718.png\" alt=\"QQ_1722270494718\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1722270494718</figcaption></figure>\n<p>算一下总投入吧：</p>\n<p>营业执照（180）+微信支付认证（50）+小程序appId（2）+服务器（100/月）+请人录入化妆品（500），最最最重要的是，营业执照还需要年审，查税什么的，如果不用还得花钱注销。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/QQ_1722359862581.png\" alt=\"QQ_1722359862581\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1722359862581</figcaption></figure>\n<h2>二、拼多多电商</h2>\n<p>在打造自己的私域生态时，我发现仅依靠小程序并不理想，因此开始考虑其他电商平台，比如小红书和拼多多。</p>\n<p>在小红书上，阿里巴巴的 1688 平台不太支持直接批量上传商品，所有商品和图片都需要手动录入和上传，非常不方便。至于选择拼多多还是淘宝，我个人更倾向于拼多多，因为其用户相对较多。</p>\n<p>在选择供应商时，发现 1688 上的化妆品要么不存在，要么是一些小众品牌，无法放心销售。因此，我决定选择一个垂直方向的产品，最终专注于女性相关的饰品，比如手链和宠物项链。</p>\n<p>我在 1688 上找到了一些手链店铺，并支付了 1000 元的保证金，随后通过 1688 的分销中心将产品直接分销到拼多多。然而，拼多多的定价策略需要自行调整，否则利润非常低，甚至可能亏损。</p>\n<p>在开始销售时，由于没注意到新疆和西藏不包邮，导致一起订单亏损了十多元。总体来说，虽然通过广告推广获取了一些流量和曝光，并且实现了约 10 个订单，销售额为 200多 元，但最终有一半订单被退货，只盈利了大约 100 元。</p>\n<p>由于退货地址填写的是我自己这边，所有退货商品都被寄回给我。检查后发现，这些产品的质量确实不佳。由于麻烦，我决定不再将退货商品寄回 1688 的商家，干脆自己留着。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/clone.png\" alt=\"clone\" tabindex=\"0\" loading=\"lazy\"><figcaption>clone</figcaption></figure>\n<p>成本：成交金额270，退单一半左右，自己承担，没退给1688商家，大概亏损130左右。</p>\n<h2>三、跨境电商</h2>\n<p>在腾讯工作期间，我听说有些人通过跨境电商取得了显著的成功，比如将电子烟卖到欧美国家，甚至在一年内赚到了一套深圳的房子。当然，这可能有些夸大。然而，国内电商市场竞争异常激烈，利润微薄，特别是拼多多对工厂的压榨，使得供应商难以生存。广州奥园的事件也是一个例子，显示了供应商在国内激烈竞争中的艰难处境。</p>\n<p>我也考虑过跨境电商的可能性，比如建立独立站或在亚马逊上运营。目前，这些想法还在考察阶段，需要进一步了解和评估。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/test/QQ_1722358300059.png\" alt=\"QQ_1722358300059\" tabindex=\"0\" loading=\"lazy\"><figcaption>QQ_1722358300059</figcaption></figure>\n<p>偶然听别人说：中产做生意返贫之路，就是奶茶店、跨境电商！</p>\n<h2>四、总结</h2>\n<p>小程序+拼多多店，应该亏损1000左右吧，就当做交学费，总的来说，也积累了不少经验。对整体的电商流程，包括开设门店和私域营销，都会有一定了解。但坦率地说，电商市场竞争非常激烈，利润空间被压缩得很厉害。</p>\n<p>首先，以拼多多为例，它直接连接了工厂和用户（B2C），消除了很多中间环节。如果你想在这一过程中作为中间商进行营销推广，就必须具备独特的优势。现在一些平台，比如直播带货，采用的就是大批量采购的方式。这种方式确实能降低成本，并且通过批量采购获利。</p>\n<p>另一方面，很多用户并不了解像阿里巴巴这样的货源平台，还有些用户甚至还在使用淘宝。利用这种信息差，还是可以赚取一定的利润，但这也让电商行业变得更加竞争激烈。</p>\n<p>在电商领域的下一步发展方向上，我个人认为直播带货可能是一个更具潜力的选择。结合种草文化和私域流量管理，这种方式可能相对来说能带来更多的收益。作为中间商，目前似乎也只有这条路可以探索。可惜不是人人都能成为李佳琦或者董宇辉。</p>\n",
      "image": "https://github-images.wenzhihuai.com/test/QQ_1722269773245.png",
      "date_published": "2024-08-04T14:51:49.000Z",
      "date_modified": "2024-08-04T14:51:49.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "2024-07-24",
      "url": "http://www.wenzhihuai.com/about-the-author/personal-life/2024-07-24.html",
      "id": "http://www.wenzhihuai.com/about-the-author/personal-life/2024-07-24.html",
      "summary": "2024-07-24 新买了台air m3，午夜色的，心心念念了好久 IMG_20240723_235443 读写速度 c6c117ff1f5f6371b3ab682621369c1f 和以前的m1 pro对比了下，感觉差了半截，使用上没有区别吧 096e891a0278263d0c790e74f32ef911_720 非果粉，但好多苹果设备 0742...",
      "content_html": "\n<p>新买了台air m3，午夜色的，心心念念了好久</p>\n<img src=\"https://github-images.wenzhihuai.com/test/IMG_20240723_235443.jpg\" alt=\"IMG_20240723_235443\" style=\"zoom: 10%;\">\n<p>读写速度</p>\n<img src=\"https://github-images.wenzhihuai.com/test/c6c117ff1f5f6371b3ab682621369c1f.png\" alt=\"c6c117ff1f5f6371b3ab682621369c1f\" style=\"zoom:25%;\">\n<p>和以前的m1 pro对比了下，感觉差了半截，使用上没有区别吧</p>\n<img src=\"https://github-images.wenzhihuai.com/test/096e891a0278263d0c790e74f32ef911_720.png\" alt=\"096e891a0278263d0c790e74f32ef911_720\" style=\"zoom:25%;\">\n<p>非果粉，但好多苹果设备</p>\n<img src=\"https://github-images.wenzhihuai.com/test/0742e82ab0ba499dea8b267f958cdada.png\" alt=\"0742e82ab0ba499dea8b267f958cdada\" style=\"zoom:33%;\">\n",
      "date_published": "2024-07-24T15:52:12.000Z",
      "date_modified": "2024-07-24T15:52:12.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "股票预测",
      "url": "http://www.wenzhihuai.com/stock/",
      "id": "http://www.wenzhihuai.com/stock/",
      "summary": "股票预测",
      "content_html": "\n<!-- #include-env-start: /home/runner/work/vuepress-theme-hope/vuepress-theme-hope/docs/md-enhance/src/echarts -->\n<!-- #include-env-end -->\n<!-- #include-env-start: /home/runner/work/vuepress-theme-hope/vuepress-theme-hope/docs/md-enhance/src/echarts -->\n<!-- #include-env-end -->",
      "date_published": "2024-07-02T14:33:09.000Z",
      "date_modified": "2024-07-02T14:33:09.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "赛力斯",
      "url": "http://www.wenzhihuai.com/stock/%E8%B5%9B%E5%8A%9B%E6%96%AF.html",
      "id": "http://www.wenzhihuai.com/stock/%E8%B5%9B%E5%8A%9B%E6%96%AF.html",
      "summary": "赛力斯 update",
      "content_html": "\n<p>update</p>\n",
      "date_published": "2024-07-02T14:33:09.000Z",
      "date_modified": "2024-07-02T14:33:09.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "好玩的",
      "url": "http://www.wenzhihuai.com/interesting/",
      "id": "http://www.wenzhihuai.com/interesting/",
      "summary": "好玩的",
      "content_html": "\n",
      "date_published": "2024-05-18T19:54:10.000Z",
      "date_modified": "2024-11-29T18:45:10.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "基于OLAP做业务监控",
      "url": "http://www.wenzhihuai.com/interesting/%E5%9F%BA%E4%BA%8EOLAP%E5%81%9A%E4%B8%9A%E5%8A%A1%E7%9B%91%E6%8E%A7.html",
      "id": "http://www.wenzhihuai.com/interesting/%E5%9F%BA%E4%BA%8EOLAP%E5%81%9A%E4%B8%9A%E5%8A%A1%E7%9B%91%E6%8E%A7.html",
      "summary": "基于OLAP做业务监控 在监控领域，Prometheus 与 Grafana 常被认为是无敌组合。然而，随着成本的增加，不少人开始审慎考虑其他替代方案。本文将深入探讨 Prometheus 的特点，并讨论 Grafana 中关键参数 interval 和 for 的意义及其影响。此外，还将分析 OLAP 数据库作为监控数据持久性存储的优势。 一、两者的...",
      "content_html": "\n<p>在监控领域，Prometheus 与 Grafana 常被认为是无敌组合。然而，随着成本的增加，不少人开始审慎考虑其他替代方案。本文将深入探讨 Prometheus 的特点，并讨论 Grafana 中关键参数 <code>interval</code> 和 <code>for</code> 的意义及其影响。此外，还将分析 OLAP 数据库作为监控数据持久性存储的优势。</p>\n<h2>一、两者的比较</h2>\n<p><strong>Prometheus 的特点</strong><br>\nPrometheus 是一种开源的监控和警报工具包，最初由 SoundCloud 开发并开源。它具有以下特点：<br>\n（1）多维度数据模型<br>\nPrometheus 采用标签（label）系统，允许用户通过灵活的标签组合来区分和查询监控数据。<br>\n（2）Pull 模式采集<br>\nPrometheus 使用 Pull 模式从各种目标（如应用程序、数据库、操作系统等）拉取数据，这与其他使用 Push 模式的监控系统有所不同。<br>\n（3）警报和告警管理<br>\nPrometheus 内置了一个强大的警报管理系统，可以根据预定条件触发警报，并集成到多种通知平台（如邮件、Slack 等）。<br>\n（4）生态系统和可扩展性<br>\nPrometheus 拥有活跃的社区和广泛的插件支持，可以轻松与其他系统集成，并根据需要进行扩展。</p>\n<p><strong>OLAP 数据库</strong></p>\n<p>OLAP（Online Analytical Processing）数据库在监控数据存储和分析中具有独特的优势，尤其在数据持久性和实时查询方面。</p>\n<p>（1）数据持久性和长期存储<br>\nOLAP 数据库通常具有可靠的数据持久性和长期存储能力，能存储大量历史数据，并支持快速的时间范围查询和数据回溯分析。<br>\n（2）实时数据加载和查询<br>\n现代 OLAP 数据库尽管通常不支持实时数据加载，但一些具有较低的延迟和高吞吐量，可以支持实时查询和分析需求。</p>\n<h2>二、为什么要用OLAP数据库来做监控</h2>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/企业微信截图_486b6ebb-0d04-45d2-84b5-e7f157e50ae1.png\" alt=\"1\" tabindex=\"0\" loading=\"lazy\"><figcaption>1</figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/企业微信截图_5a47dce2-ec41-4c07-8a5b-141487b8d9ff.png\" alt=\"2\" tabindex=\"0\" loading=\"lazy\"><figcaption>2</figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/企业微信截图_bd50d61d-bf61-45f0-93f7-68f6816db01b.png\" alt=\"3\" tabindex=\"0\" loading=\"lazy\"><figcaption>3</figcaption></figure>\n",
      "image": "https://github-images.wenzhihuai.com/images/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_486b6ebb-0d04-45d2-84b5-e7f157e50ae1.png",
      "date_published": "2024-05-13T16:26:06.000Z",
      "date_modified": "2024-11-10T15:55:36.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Jetbrains Idea设置",
      "url": "http://www.wenzhihuai.com/interesting/idea%E8%AE%BE%E7%BD%AE.html",
      "id": "http://www.wenzhihuai.com/interesting/idea%E8%AE%BE%E7%BD%AE.html",
      "summary": "Jetbrains Idea设置 一、类注释 想要在生成类的时候，自动带上author和时间，效果如下： 放到File Header里统一下即可，当然，也可以去Files里定义Class File或者其他： image-20240512002500812image-20240512002500812 二、方法注释 想让自动给方法生成注释，以及参数的默认...",
      "content_html": "\n<h2>一、类注释</h2>\n<p>想要在生成类的时候，自动带上author和时间，效果如下：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@author</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> zhihuaiwen</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@since</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> 2024/5/12 00:22</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> EFE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>放到File Header里统一下即可，当然，也可以去Files里定义Class File或者其他：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240512002500812.png\" alt=\"image-20240512002500812\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240512002500812</figcaption></figure>\n<h2>二、方法注释</h2>\n<p>想让自动给方法生成注释，以及参数的默认注释：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  /**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   * 获取首页商品列表</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   *</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   * </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@param</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> type</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">             类型 【1 精品推荐 2 热门榜单 3首发新品 4促销单品】</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   * </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@param</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> pageParamRequest</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> 分页参数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   * </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@return</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> List</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CommonPage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">IndexProductResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> findIndexProductList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> PageParamRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> pageParamRequest) {</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>去settings里面找到Live Templates，新建一个Template Group叫做user，然后再新建一个Live Template。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240512001636936.png\" alt=\"image-20240512001636936\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240512001636936</figcaption></figure>\n<p>Abbreviation填*，Description随便填，然后再Template text填下：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">$</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">VAR1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">$</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> $returns$</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> */</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>编辑变量，Edit Variables：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240512001711420.png\" alt=\"image-20240512001711420.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240512001711420.png</figcaption></figure>\n<p>VAR1：</p>\n<div class=\"language-groovy line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"groovy\" data-title=\"groovy\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">groovyScript</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"def result=''; def params=</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\">_1</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.replaceAll('[</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\\\\\\</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[|</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\\\\\\</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">]|</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\\\\\\</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">s]', '').split(',').toList(); for(i = 0; i &lt; params.size(); i++) {result+=' * @param ' + params[i] + ' ' + params[i] + ((i &lt; params.size() - 1) ? '</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\\</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">n' : '')}; return result\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">methodParameters</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">())</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>returns：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">methodReturnType</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>三、关闭Annotate With Git Blame</h2>\n<p>Idea这个太烦了，总是不小心误点，想把右侧的两个都给去掉，网上查了有些比较旧，无法解决，下面特别声明下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240512001050312.png\" alt=\"image-20240512001050312\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240512001050312</figcaption></figure>\n<p>位置：settings直接搜Inlay Hints，把右侧的Usages、Code author给取消勾选即可</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240512001010797.png\" alt=\"image-20240512001010797\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240512001010797</figcaption></figure>\n<p><strong>上面的设置放到百度网盘里了，可以下载后导入到Idea</strong></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1-3uhY1jssyMWyRbvBLQ2FQ?pwd=epw2\" target=\"_blank\" rel=\"noopener noreferrer\">https://pan.baidu.com/s/1-3uhY1jssyMWyRbvBLQ2FQ?pwd=epw2</a> 提取码: epw2 复制这段内容后打开百度网盘手机App，操作更方便哦</p>\n<img src=\"https://github-images.wenzhihuai.com/images/image-20240512115716124.png\" alt=\"image-20240512115716124\" style=\"zoom:50%;\">\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20240512002500812.png",
      "date_published": "2024-05-11T16:37:27.000Z",
      "date_modified": "2024-05-12T03:58:39.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "小程序反编译",
      "url": "http://www.wenzhihuai.com/interesting/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91.html",
      "id": "http://www.wenzhihuai.com/interesting/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91.html",
      "summary": "小程序反编译 第一步:电脑端提取 先找到小程序保存的地址，一般先找到微信的文件管理下 image-20240310171919281 然后到该目录的C:\\Users\\w1570\\Documents\\WeChat Files\\Applet即可看到相关小程序了。 image-20240310173802224image-20240310173802224 ...",
      "content_html": "\n<h3>第一步:电脑端提取</h3>\n<p>先找到小程序保存的地址，一般先找到微信的文件管理下</p>\n<img src=\"https://github-images.wenzhihuai.com/images/image-20240310171919281.png\" alt=\"image-20240310171919281\" style=\"zoom:50%;\">\n<p>然后到该目录的C:\\Users\\w1570\\Documents\\WeChat Files\\Applet即可看到相关小程序了。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240310173802224.png\" alt=\"image-20240310173802224\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240310173802224</figcaption></figure>\n<p>找到需要解压的包<code>__APP__.wxapkg</code>，拷贝到和pc_wxapkg_decrypt.exe的统一路径下。</p>\n<h3>第二步:解密wxapkg包</h3>\n<ul>\n<li>工具下载地址\n<ul>\n<li><a href=\"https://github.com/Zephery/wechatMiniAppReverse\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/wechatMiniAppReverse</a></li>\n</ul>\n</li>\n<li>工具的使用</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pc_wxapkg_decrypt.exe</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -wxid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 微信小程序id</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 要解密的wxapkg路径</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -out</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 解密后的路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">//示例如下</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pc_wxapkg_decrypt.exe</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -wxid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wx7444167f2a6427b3</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> __APP__.wxapkg</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>第三步:解包</h3>\n<ul>\n<li>工具下载地址\n<ul>\n<li><a href=\"https://github.com/Zephery/wechatMiniAppReverse\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/wechatMiniAppReverse</a></li>\n</ul>\n</li>\n<li>工具的使用</li>\n</ul>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>切换到./nodejs目录下,解压`node_modules.zip`后，使用cmd命令打开</span></span>\n<span class=\"line\"><span>输入下面命令</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>node wuWxapkg.js ..\\decrypt\\dec.wxapkg</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>第二个参数为操作的项目,这里操作的是666.wxapkg 记得改为自己的</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>发现偶尔还是有些html没有正常解析，有点奇怪</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20240310173802224.png",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "开发工具整理",
      "url": "http://www.wenzhihuai.com/interesting/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86.html",
      "id": "http://www.wenzhihuai.com/interesting/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86.html",
      "summary": "开发工具整理 ShadowsocksX mac端：https://github.com/shadowsocks/ShadowsocksX-NG win端：https://github.com/shadowsocks/shadowsocks-windows 安卓：https://github.com/shadowsocks/shadowsocks-and...",
      "content_html": "\n<h2>ShadowsocksX</h2>\n<p>mac端：<a href=\"https://github.com/shadowsocks/ShadowsocksX-NG\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/shadowsocks/ShadowsocksX-NG</a><br>\nwin端：<a href=\"https://github.com/shadowsocks/shadowsocks-windows\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/shadowsocks/shadowsocks-windows</a><br>\n安卓：<a href=\"https://github.com/shadowsocks/shadowsocks-android\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/shadowsocks/shadowsocks-android</a></p>\n<h2>IDEA激活</h2>\n<p>许可证激活(License server)<br>\n<a href=\"http://vip.52shizhan.cn\" target=\"_blank\" rel=\"noopener noreferrer\">http://vip.52shizhan.cn</a><br>\n<a href=\"http://fls.itxe.net\" target=\"_blank\" rel=\"noopener noreferrer\">http://fls.itxe.net</a></p>\n<h2></h2>\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "高可用",
      "url": "http://www.wenzhihuai.com/java/%E9%AB%98%E5%8F%AF%E7%94%A8.html",
      "id": "http://www.wenzhihuai.com/java/%E9%AB%98%E5%8F%AF%E7%94%A8.html",
      "summary": "高可用 4个9（99.99） 流量控制 流量控制在网络传输中是一个常用的概念，它用于调整网络包的发送数据。然而，从系统稳定性角度考虑，在处理请求的速度上，也有非常多的讲究。任意时间到来的请求往往是随机不可控的，而系统的处理能力是有限的。我们需要根据系统的处理能力对流量进行控制。Sentinel 作为一个调配器，可以根据需要把随机的请求调整成合适的形状，...",
      "content_html": "\n<p>4个9（99.99）</p>\n<p>|                  | Sentinel                                                   | Hystrix(维护状态)     | Resilience4j（Spring推荐）       |<br>\n|</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/sentinel-flow-overview-20240218114454907.jpg",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "高并发",
      "url": "http://www.wenzhihuai.com/java/%E9%AB%98%E5%B9%B6%E5%8F%91.html",
      "id": "http://www.wenzhihuai.com/java/%E9%AB%98%E5%B9%B6%E5%8F%91.html",
      "summary": "高并发 QPS 高并发（High Concurrency）是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理很多请求。 高并发相关常用的一些指标有响应时间（Response Time），吞吐量（Throughput），每秒查询率QPS（Query Per Second），并发用户数等。 响应时间：系统对请求做出...",
      "content_html": "\n<p>QPS</p>\n<p>高并发（High Concurrency）是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证<strong>系统能够同时并行处理很多请求</strong>。 高并发相关常用的一些指标有<strong>响应时间</strong>（Response Time），<strong>吞吐量</strong>（Throughput），<strong>每秒查询率</strong>QPS（Query Per Second），<strong>并发用户数</strong>等。</p>\n<ul>\n<li><strong>响应时间</strong>：系统对请求做出响应的时间。例如系统处理一个HTTP请求需要200ms，这个200ms就是系统的响应时间。</li>\n<li><strong>吞吐量</strong>：单位时间内处理的请求数量。</li>\n<li><strong>QPS</strong>：每秒响应请求数。在互联网领域，这个指标和吞吐量区分的没有这么明显。</li>\n<li><strong>并发用户数</strong>：同时承载正常使用系统功能的用户数量。例如一个即时通讯系统，同时在线量一定程度上代表了系统的并发用户数。</li>\n</ul>\n<h2>负载均衡</h2>\n<p>正所谓双拳难敌四手，高并发撑场面的首选方案就是集群化部署，一台服务器承载的QPS有限，多台服务器叠加效果就不一样了。</p>\n<p>如何将流量转发到服务器集群，这里面就要用到负载均衡，比如：LVS 和 Nginx。</p>\n<p>常用的负载算法有轮询法、随机法、源地址哈希法、加权轮询法、加权随机法、最小连接数法等</p>\n<p>业务实战：对于千万级流量的秒杀业务，一台LVS扛不住流量洪峰，通常需要 10 台左右，其上面用DDNS（Dynamic DNS）做域名解析负载均衡。搭配高性能网卡，单台LVS能够提供百万以上并发能力。</p>\n<p>注意， LVS 负责网络四层协议转发，无法按 HTTP 协议中的请求路径做负载均衡，所以还需要 Nginx</p>\n<h2>池化技术</h2>\n<p>复用单个连接无法承载高并发，如果每次请求都新建连接、关闭连接，考虑到TCP的三次握手、四次挥手，有时间开销浪费。池化技术的核心是资源的“预分配”和“循环使用”，常用的池化技术有线程池、进程池、对象池、内存池、连接池、协程池。</p>\n<p>连接池的几个重要参数：最小连接数、空闲连接数、最大连接数</p>\n<p>Linux 内核中是以进程为单元来调度资源的，线程也是轻量级进程。所以说，进程、线程都是由内核来创建并调度。协程是由应用程序创建出来的任务执行单元，比如 Go 语言中的协程“goroutine”。协程本身是运行在线程上，由应用程序自己调度，它是比线程更轻量的执行单元。</p>\n<p>在 Go 语言中，一个协程初始内存空间是 2KB（Linux 下线程栈大小默认是 8MB），相比线程和进程来说要小很多。协程的创建和销毁完全是在用户态执行的，不涉及用户态和内核态的切换。另外，协程完全由应用程序在用户态下调用，不涉及内核态的上下文切换。协程切换时由于不需要处理线程状态，需要保存的上下文也很少，速度很快。</p>\n<p>Go语言中协程池的实现方法有两种：抢占式和调度式。</p>\n<p>抢占式协程池，所有任务存放到一个共享的 channel 中，多个协程同时去消费 channel 中的任务，存在锁竞争。<br>\n调度式协程池，每个协程都有自己的 channel，每个协程只消费自己的 channel。下发任务的时候，采用负载均衡算法选择合适的协程来执行任务。比如选择排队中任务最少的协程，或者简单轮询。</p>\n<h2>流量漏斗</h2>\n<p>上面讲的是正向方式提升系统QPS，我们也可以逆向思维，做减法，拦截非法请求，将核心能力留给正常业务！</p>\n<p>互联网高并发流量并不都是纯净的，也有很多恶意流量（比如黑客攻击、恶意爬虫、黄牛、秒杀器等），我们需要设计流量拦截器，将那些非法的、无资格的、优先级低的流量过滤掉，减轻系统的并发压力。</p>\n<p>拦截器分层：</p>\n<p>网关和 WAF（Web Application Firewall，Web 应用防火墙）<br>\n采用封禁攻击者来源 IP、拒绝带有非法参数的请求、按来源 IP 限流、按用户 ID 限流等方法</p>\n<p>风控分析。借助大数据能力分析订单等历史业务数据，对同ip多个账号下单、或者下单后支付时间过快等行为有效识别，并给账号打标记，提供给业务团队使用。<br>\n下游的每个tomcat实例应用本地内存缓存化，将一些库存存储在本地一份，做前置校验。当然，为了尽量保持数据的一致性，有定时任务，从 Redis 中定时拉取最新的库存数据，并更新到本地内存缓存中。</p>\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "高性能",
      "url": "http://www.wenzhihuai.com/java/%E9%AB%98%E6%80%A7%E8%83%BD.html",
      "id": "http://www.wenzhihuai.com/java/%E9%AB%98%E6%80%A7%E8%83%BD.html",
      "summary": "高性能 响应时间 性能直接影响用户的感官体验，访问一个系统，如果超过5秒没有响应，绝大数用户会选择离开。 那么有哪些因素会影响系统的性能呢？ 用户网络环境 请求/响应的数据包大小 业务系统 CPU、内存、磁盘等性能 业务链路的长度 下游系统的性能 算法实现是否高效 当然，随着并发数的提升，系统压力增大，平均请求延迟也会增大。 1、高性能缓存 对一些热点...",
      "content_html": "\n<p>响应时间</p>\n<p>性能直接影响用户的感官体验，访问一个系统，如果超过5秒没有响应，绝大数用户会选择离开。</p>\n<p>那么有哪些因素会影响系统的性能呢？</p>\n<p>用户网络环境<br>\n请求/响应的数据包大小<br>\n业务系统 CPU、内存、磁盘等性能<br>\n业务链路的长度<br>\n下游系统的性能<br>\n算法实现是否高效<br>\n当然，随着并发数的提升，系统压力增大，平均请求延迟也会增大。</p>\n<p>1、高性能缓存</p>\n<p>对一些热点数据每次都从 DB 中读取，会给 DB 带来较大的压力，导致性能大幅下降。所以，我们需要用缓存来提升热点数据的访问性能，比如将活动信息数据在浏览器的缓存中保存一段时间。</p>\n<p>缓存根据性能由高到低分为：寄存器、L1缓存、L2缓存、L3缓存、本地内存、分布式缓存</p>\n<p>上层的寄存器、L1 缓存、L2 缓存是位于 CPU 核内的高速缓存，访问延迟通常在 10 纳秒以下。L3 缓存是位于 CPU 核外部但在芯片内部的共享高速缓存，访问延迟通常在十纳秒左右。高速缓存具有成本高、容量小的特点，容量最大的 L3 缓存通常也只有几十MB。</p>\n<p>本地内存是计算机内的主存储器，相比 CPU 芯片内部的高速缓存，内存的成本要低很多，容量通常是 GB 级别，访问延迟通常在几十到几百纳秒。</p>\n<p>内存和高速缓存都属于掉电易失的存储器，如果机器断电了，这类存储器中的数据就丢失了。</p>\n<p>特别说明：在使用缓存时，要注意缓存穿透、缓存雪崩、缓存热点问题、缓存数据一致性问题。当然为了提升整体性能通常会采用多级缓存组合方案（浏览器缓存+服务端本地内存缓存+服务端网络内存缓存）</p>\n<p>2、日志优化，避免IO瓶颈</p>\n<p>当系统处理大量磁盘 IO 操作的时候，由于 CPU 和内存的速度远高于磁盘，可能导致 CPU 耗费太多时间等待磁盘返回处理的结果。对于这部分 CPU 在 IO 上的开销，我们称为 “iowait”。</p>\n<p>在IO中断过程中，如果此时有其他任务线程可调度，系统会直接调度其他线程，这样 CPU 就相应显示为 Usr 或 Sys；但是如果此时系统较空闲，无其他任务可以调度，CPU 就会显示为 iowait（实际上与 idle 无本质区别）。</p>\n<p>磁盘有个性能指标：IOPS，即每秒读写次数，性能较好的固态硬盘，IOPS 大概在 3 万左右。对于秒杀系统，如果单节点QPS在10万，每次请求产生3条日志，那么日志的写入QPS在 30W/s，磁盘根本扛不住。</p>\n<p>Linux 有一种特殊的文件系统：tmpfs（临时文件系统），它是一种基于内存的文件系统，由操作系统管理。当我们写磁盘的时候实际是写到内存中，当日志文件达到我们的设置阈值，操作系统会将日志写到磁盘中，并将tmpfs中的日志文件删除。</p>\n<p>这种批量化、顺序写，大大提升了磁盘的吞吐性能！</p>\n<h2>缓存</h2>\n<h2>异步</h2>\n<h2>I/O（网络、数据、文件）</h2>\n<h2>分库分表</h2>\n<h2>参考</h2>\n<p>1.<a href=\"https://www.zhihu.com/question/583334689\" target=\"_blank\" rel=\"noopener noreferrer\">怎么优化java项目性能</a></p>\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Feed系统设计",
      "url": "http://www.wenzhihuai.com/system-design/feed.html",
      "id": "http://www.wenzhihuai.com/system-design/feed.html",
      "summary": "Feed系统设计 https://blog.csdn.net/weixin_45583158/article/details/128195940",
      "content_html": "\n<p><a href=\"https://blog.csdn.net/weixin_45583158/article/details/128195940\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/weixin_45583158/article/details/128195940</a></p>\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "行锁，表锁，意向锁",
      "url": "http://www.wenzhihuai.com/database/mysql/%E8%A1%8C%E9%94%81%EF%BC%8C%E8%A1%A8%E9%94%81%EF%BC%8C%E6%84%8F%E5%90%91%E9%94%81.html",
      "id": "http://www.wenzhihuai.com/database/mysql/%E8%A1%8C%E9%94%81%EF%BC%8C%E8%A1%A8%E9%94%81%EF%BC%8C%E6%84%8F%E5%90%91%E9%94%81.html",
      "summary": "行锁，表锁，意向锁",
      "content_html": "\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "一致性hash算法和哈希槽",
      "url": "http://www.wenzhihuai.com/database/redis/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%93%88%E5%B8%8C%E6%A7%BD.html",
      "id": "http://www.wenzhihuai.com/database/redis/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%93%88%E5%B8%8C%E6%A7%BD.html",
      "summary": "一致性hash算法和哈希槽",
      "content_html": "\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "JVM(java虚拟机)",
      "url": "http://www.wenzhihuai.com/java/JVM/jvm(java%E8%99%9A%E6%8B%9F%E6%9C%BA).html",
      "id": "http://www.wenzhihuai.com/java/JVM/jvm(java%E8%99%9A%E6%8B%9F%E6%9C%BA).html",
      "summary": "一、了解JVM 1、什么是JVM JVM是Java Virtual Machine（Java虚拟机）的缩写，是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟计算机功能来实现的，JVM屏蔽了与具体操作系统平台相关的信息，Java程序只需生成在Java虚拟机上运行的字节码，就可以在多种平台上不加修改的运行。JVM在执行字节码时，实际上最终还是把字节码...",
      "content_html": "<h2>一、了解JVM</h2>\n<h4>1、什么是JVM</h4>\n<p>JVM是Java Virtual Machine（Java虚拟机）的缩写，是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟计算机功能来实现的，JVM屏蔽了与具体操作系统平台相关的信息，Java程序只需生成在Java虚拟机上运行的字节码，就可以在多种平台上不加修改的运行。JVM在执行字节码时，实际上最终还是把字节码解释成具体平台上的机器指令执行。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/31584f04c69f4fdaa922c5bd1517cc97.png\" alt=\"微信图片_20220522232432.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>微信图片_20220522232432.png</figcaption></figure>\n<h4>2、JRE/JDK/JVM是什么关系</h4>\n<p>JRE（Java Runtime Environment）：是Java运行环境，所有的Java程序都要在JRE下才能运行。<br>\nJDK（Java Development Kit）：是Java开发工具包，它是程序开发者用来编译、调试Java程序，它也是Java程序，也需要JRE才能运行。<br>\nJVM（Java Virual Machine）：是Java虚拟机，它是JRE的一部分，一个虚构出来的计算机，它支持跨平台。</p>\n<h4>3、JVM体系结构：</h4>\n<p>类加载器：加载class文件；<br>\n运行时数据区：包括方法区、堆、Java栈、程序计数器、本地方法栈<br>\n执行引擎：执行字节码或者执行本地方法</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1a14ee042cfa45999fa30c5f14f930e0.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h2>二、运行时数据区</h2>\n<p><strong>方法区</strong>：属于共享内存区域，存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。从 JDK 8 开始，HotSpot 虚拟机移除了方法区，取而代之的是元空间（Metaspace）。元空间并不在 Java 虚拟机内存中，而是使用了本地（即操作系统）的内存。这个改变主要是为了解决方法区可能出现的内存溢出问题。<br>\n<strong>堆</strong>：Java虚拟机所管理的内存中最大的一块，唯一的目的是存放对象实例。由于是垃圾收集器管理的主要区域，因此有时候也被称作GC堆。<br>\n<strong>栈</strong>：用于描述Java方法执行的模型。每个方法在执行的同时都会创建一个栈帧，用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每一个方法从调用至执行完成，对应于一个栈帧在虚拟机栈中从入栈到出栈。<br>\n<strong>程序计数器</strong>：当前线程所执行字节码的行号指示器。每一个线程都有一个独立的程序计数器，线程的阻塞、恢复、挂起等一系列操作都需要程序计数器的参与，因此必须是线程私有的。<br>\n<strong>本地方法栈</strong>：与虚拟机栈作用相似，只不过虚拟机栈为执行Java方法服务，而本地方法栈为执行Native方法服务，比如在Java中调用C/C++。</p>\n<p><strong>元空间</strong>：</p>\n<h2>三、类加载机制</h2>\n<p>类加载器通过一个类的全限定名来获取描述此类的二进制文件流的代码模块。</p>\n<h3>1、类的生命周期(7个)</h3>\n<p>加载、验证、准备、解析、初始化、使用、卸载</p>\n<h3>2、类加载的五个过程</h3>\n<p>虚拟机把描述类的数据从 Class 文件加载到内存，并对数据进行校验、装换解析和初始化，最终形成可以被虚拟机直接使用的 Java 类型。</p>\n<p>加载：类加载器获取二进制字节流，将静态存储结构转化为方法区的运行时数据结构，并生成此类的Class对象。<br>\n验证：验证文件格式、元数据、字节码、符号引用，确保Class的字节流中包含的信息符合当前虚拟机的要求。<br>\n准备：为类变量分配内存并设置其初始值，这些变量使用的内存都将在方法区中进行分配。<br>\n解析：将常量池内的符号引用替换为直接引用，包括类或接口的解析、字段解析、类方法解析、接口方法解析。<br>\n初始化：前面过程都是以虚拟机主导，而初始化阶段开始执行类中的 Java 代码。</p>\n<h3>3、类加载器</h3>\n<p>启动类加载器(BootStrap ClassLoader)：主要负责加载jre/lib/rt.jar相关的字节码文件的。<br>\n扩展类加载器(Extension Class Loader)：主要负载加载 jre/lib/ext/*.jar 这些jar包的。<br>\n应用程序类加载器(Application Class Loader)：主要负责加载用户自定义的类以及classpath环境变量所配置的jar包的。<br>\n自定义类加载器(User Class Loader)：负责加载程序员指定的特殊目录下的字节码文件的。大多数情况下，自定义类加载器只需要继承ClassLoader这个抽象类，重写findClass()和loadClass()两个方法即可。</p>\n<h3>4、类加载机制（双亲委派）</h3>\n<p>类的加载是通过双亲委派模型来完成的，双亲委派模型即为下图所示的类加载器之间的层次关系。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/3fa489e7f78042da8d9aa8a4bd1fd2a4.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>工作过程：如果一个类加载器接收到类加载的请求，它会先把这个请求委派给父加载器去完成，只有当父加载器反馈自己无法完成加载请求时，子加载器才会尝试自己去加载。可以得知，所有的加载请求最终都会传送到启动类加载器中。</p>\n<h2>四、垃圾回收</h2>\n<p>程序计数器、虚拟机栈、本地方法栈是线程私有的，所以会随着线程结束而消亡。 Java 堆和方法区是线程共享的，在程序处于运行期才知道哪些对象会创建，这部分内存的分配和回收都是动态的，垃圾回收所关注的就是这部分内存。</p>\n<h3>1、判断对象已死</h3>\n<p>在进行内存回收之前要做的事情就是判断那些对象是‘死’的，哪些是‘活’的。</p>\n<p><strong>引用计数法</strong>：给对象中添加一个引用计数器，当一个地方引用了对象，计数加1；当引用失效，计数器减1；当计数器为0表示该对象已死、可回收；</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/c30fea6ea6e048289ea3e754919cb2a8.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<pre><code>    注意：如果不下小心直接把 Obj1-reference 和 Obj2-reference 置 null。则在 Java 堆当中的            两块内存依然保持着互相引用无法回收。引用计数法很难解决循环引用问题； \n</code></pre>\n<p><strong>可达性分析</strong>：通过一系列的 ‘GC Roots’ 的对象作为起始点，从这些节点出发所走过的路径称为引用链。当一个对象到 GC Roots 没有任何引用链相连的时候说明对象不可用。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/cb3d4fadc552626ae0aaabc46d59b357.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<pre><code>    可作为 GC Roots 的对象：\n    1）虚拟机栈中引用的对象\n    2）方法区中类静态属性引用的对象\n    3）方法区中常量引用的对象\n    4）本地方法栈中native方法引用的对象 \n</code></pre>\n<p><strong>引用</strong>：下面四种引用强度依次减弱<br>\n<strong>强引用</strong>：默认情况下，对象采用的均为强引用；<br>\n<strong>软引用</strong>：SoftReference 类实现软引用。在系统要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行二次回收。<br>\n<strong>弱引用</strong>：WeakReference 类实现弱引用。对象只能生存到下一次垃圾收集之前。在垃圾收集器工作时，无论内存是否足够都会回收掉只被弱引用关联的对象。<br>\n<strong>虚引用</strong>：PhantomReference 类实现虚引用。无法通过虚引用获取一个对象的实例，为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。</p>\n<h3>2、垃圾收集算法</h3>\n<p><strong>标记清除算法</strong>：先标记出所有需要回收的对象，标记完成后统一回收所有被标记的对象。<br>\n<strong>复制算法</strong>：将可用内存分为大小相等的两块，每次只使用其中一块，当这一块内存用完了，就将存活的对象复制到另一块，最后将此块内存一次性清理掉。<br>\n<strong>标记整理算法</strong>：先标记所有需要回收的对象，然后让所有存活的对象向一端移动，最后直接清理掉边界以外的另一端内存。<br>\n<strong>分代收集算法</strong>：把Java堆分为新生代和老年代。新生代中只有少量对象会存活，就选用复制算法；老年代中对象存活率较高，选用标记清除算法。</p>\n<h3>3、垃圾收集器</h3>\n<p><strong>Serial收集器</strong>：单线程收集器。收集垃圾时必须暂停其他所有工作线程，直到它收集结束。<br>\n<strong>Parnew收集器</strong>：Serial收集器多线程版本。<br>\n<strong>Parallel Scavenge收集器</strong>：使用复制算法的新生代收集器。<br>\n<strong>Serial Old收集器</strong>：使用标记-整理算法的老年代单线程收集器。<br>\n<strong>Parallel Old收集器</strong>：使用标记-整理算法的老年代多线程收集器。<br>\n<strong>CMS收集器</strong>：基于标记-清除算法的低停顿并发收集器。运作步骤为①初始标记②并发标记③重新标记④并发清除。<br>\n<strong>G1收集器</strong>：最前沿的面向服务端应用的垃圾收集器。运作步骤为①初始标记②并发标记③最终标记④筛选回收。<br>\nG1收集器有以下特点<br>\n1）并行与并发：无需停顿Java线程来执行GC动作。<br>\n2）分代收集：可独立管理整个GC堆。<br>\n3）空间整合：运行期间不会产生内存空间碎片。<br>\n4）可预测的停顿：除了低停顿，还能建立可预测的停顿时间模型。</p>\n<h3>4、JVM内存分代机制</h3>\n<p>方法区即被称为永久代，而堆中存放的是对象实例，为了回收的时候对不同的对象采用不同的方法，又将堆分为新生代和老年代，默认情况下新生代占堆的1/3，老年代占堆的2/3。</p>\n<p><strong>新生代（Young）</strong>：HotSpot将新生代划分为三块，一块较大的Eden空间和两块较小的Survivor空间，默认比例为8：1：1。<br>\n<strong>老年代（Old）</strong>：在新生代中经历了多次GC后仍然存活下来的对象会进入老年代中。老年代中的对象生命周期较长，存活率比较高，在老年代中进行GC的频率相对而言较低，而且回收的速度也比较慢。<br>\n<strong>永久代（Permanent）</strong>：永久代存储类信息、常量、静态变量、即时编译器编译后的代码等数据，对这一区域而言，一般而言不会进行垃圾回收。<br>\n<strong>元空间（metaspace）</strong>：从JDK 8开始，Java开始使用元空间取代永久代，元空间并不在虚拟机中，而是直接使用本地内存。那么，默认情况下，元空间的大小仅受本地内存限制。当然，也可以对元空间的大小手动的配置。<br>\nGC 过程：新生成的对象在Eden区分配（大对象除外，大对象直接进入老年代），当Eden区          没有足够的空间进行分配时，虚拟机将发起一次Minor GC。GC开始时，对象只会存在于                Eden区和Survivor From区，Survivor To区是空的（作为保留区域）。GC进行时，Eden区中          所有存活的对象都会被复制到Survivor To区，而在Survivor From区中，仍存活的对象会根据          它们的年龄值决定去向，年龄值达到年龄阀值（默认为15，新生代中的对象每熬过一轮垃圾          回收，年龄值就加1，GC分代年龄存储在对象的Header中）的对象会被移到老年代中，没有          达到阀值的对象会被复制到Survivor To区。接着清空Eden区和Survivor From区，新生代中存          活的对象都在Survivor To区。接着，Survivor From区和Survivor To区会交换它们的角色，也          就是新的Survivor To区就是上次GC清空的Survivor From区，新的Survivor From区就是上次            GC的Survivor To区，总之，不管怎样都会保证Survivor To区在一轮GC后是空的。GC时当              Survivor To区没有足够的空间存放上一次新生代收集下来的存活对象时，需要依赖老年代进            行分配担保，将这些对象存放在老年代中。</p>\n<h3>5、Minor GC、Major GC、Full GC之间的区别</h3>\n<p><strong>Minor GC</strong>：Minor GC指新生代GC，即发生在新生代（包括Eden区和Survivor区）的垃圾回收操作，当新生代无法为新生对象分配内存空间的时候，会触发Minor GC。因为新生代中大多数对象的生命周期都很短，所以发生Minor GC的频率很高，虽然它会触发stop-the-world，但是它的回收速度很快。<br>\n<strong>Major GC</strong>：指发生在老年代的垃圾收集动作，出现了 Major GC，经常会伴随至少一次 Minor GC（非绝对），MajorGC 的速度一般会比 Minor GC 慢10倍以上。<br>\n<strong>Full GC</strong>：Full GC是针对整个新生代、老生代、元空间（metaspace，java8以上版本取代perm gen）的全局范围的GC。Full GC不等于Major GC，也不等于Minor GC+Major GC，发生Full GC需要看使用了什么垃圾收集器组合，才能解释是什么样的垃圾回收。</p>\n<h3>6、Minor GC、Major GC、Full GC触发条件</h3>\n<p><strong>Minor GC触发条件</strong>：<br>\n虚拟机在进行minorGC之前会判断老年代最大的可用连续空间是否大于新生代的所有对象总           空间<br>\n1）如果大于的话，直接执行minorGC<br>\n2）如果小于，判断是否开启HandlerPromotionFailure，没有开启直接FullGC<br>\n3）如果开启了HanlerPromotionFailure, JVM会判断老年代的最大连续内存空间是否大于历            次晋升（晋级老年代对象的平均大小）平均值的大小，如果小于直接执行FullGC<br>\n4）如果大于的话，执行minorGC</p>\n<p><strong>Full GC触发条件</strong>：<br>\n1）老年代空间不足：如果创建一个大对象，Eden区域当中放不下这个大对象，会直接保存            在老年代当中，如果老年代空间也不足，就会触发Full GC。为了避免这种情况，最好就是              不要创建太大的对象。<br>\n2）方法区空间不足：系统当中需要加载的类，调用的方法很多，同时方法区当中没有足够的          空间，就出触发一次Full GC<br>\n3）老年代最大可用连续空间小于Minor GC历次晋升到老年代对象的平均大小<br>\n4）调用System.gc()时（系统建议执行Full GC，但是不必然执行）</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/31584f04c69f4fdaa922c5bd1517cc97.png",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "JAVA NIO",
      "url": "http://www.wenzhihuai.com/java/io/nio.html",
      "id": "http://www.wenzhihuai.com/java/io/nio.html",
      "summary": "JAVA NIO 一、简介 1）Java BIO ： 同步并阻塞(传统阻塞型)，服务器实现模式为一个连接一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，如果这个连接不做任何事情会造成不必要的线程开销。 2）Java NIO ： 同步非阻塞，服务器实现模式为一个线程处理多个请求(连接)，即客户端发送的连接请求都会注册到多路复用器上，多路...",
      "content_html": "\n<h2>一、简介</h2>\n<p>1）Java BIO ： 同步并阻塞(传统阻塞型)，服务器实现模式为一个连接一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，如果这个连接不做任何事情会造成不必要的线程开销。</p>\n<p>2）Java NIO ： 同步非阻塞，服务器实现模式为一个线程处理多个请求(连接)，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I/O请求就进行处理。</p>\n<p>3）Java AIO：异步非阻塞，在AIO模型中，当我们发起一个I/O操作（如读或写）时，我们不需要等待它完成，我们的代码会立即返回，可以继续执行其他任务。当I/O操作完成时，我们之前注册的回调函数会被自动调用，我们可以在这个回调函数中处理I/O操作的结果。</p>\n<h3>1.1典型的多路复用IO实现</h3>\n<p>目前流程的多路复用IO实现主要包括四种: <code>select</code>、<code>poll</code>、<code>epoll</code>、<code>kqueue</code>。下表是他们的一些重要特性的比较:</p>\n<p>| IO模型 | 相对性能 | 数据结构     | 关键思路         | 操作系统      | JAVA支持情况                                                 |<br>\n|</p>\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Spring Cloud Sentinel",
      "url": "http://www.wenzhihuai.com/middleware/sentinel/springcloud_sentinel.html",
      "id": "http://www.wenzhihuai.com/middleware/sentinel/springcloud_sentinel.html",
      "summary": "Spring Cloud Sentinel 参考 1.超详细springcloud sentinel教程~",
      "content_html": "\n<h2>参考</h2>\n<p>1.<a href=\"https://zhuanlan.zhihu.com/p/656493665\" target=\"_blank\" rel=\"noopener noreferrer\">超详细springcloud sentinel教程~</a></p>\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "入门使用",
      "url": "http://www.wenzhihuai.com/middleware/sentinel/%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html",
      "id": "http://www.wenzhihuai.com/middleware/sentinel/%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html",
      "summary": "入门使用 参考 1.Sentinel入门（干货版）",
      "content_html": "\n<h2>参考</h2>\n<p>1.<a href=\"https://blog.csdn.net/weixin_41835916/article/details/125922301\" target=\"_blank\" rel=\"noopener noreferrer\">Sentinel入门（干货版）</a></p>\n",
      "date_published": "2024-03-10T14:39:30.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "基础",
      "url": "http://www.wenzhihuai.com/database/elasticsearch/%E5%9F%BA%E7%A1%80.html",
      "id": "http://www.wenzhihuai.com/database/elasticsearch/%E5%9F%BA%E7%A1%80.html",
      "summary": "基础 一、ElasticSearch基础 1、什么是Elasticsearch： Elasticsearch 是基于 Lucene 的 Restful 的分布式实时全文搜索引擎，每个字段都被索引并可被搜索，可以快速存储、搜索、分析海量的数据。 全文检索是指对每一个词建立一个索引，指明该词在文章中出现的次数和位置。当查询时，根据事先建立的索引进行查找，并...",
      "content_html": "\n<h2>一、ElasticSearch基础</h2>\n<p>1、什么是Elasticsearch：<br>\nElasticsearch 是基于 Lucene 的 Restful 的分布式实时全文搜索引擎，每个字段都被索引并可被搜索，可以快速存储、搜索、分析海量的数据。<br>\n全文检索是指对每一个词建立一个索引，指明该词在文章中出现的次数和位置。当查询时，根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。这个过程类似于通过字典中的检索字表查字的过程。</p>\n<p>2、Elasticsearch 的基本概念：</p>\n<p>（1）index 索引：索引类似于mysql 中的数据库，Elasticesearch 中的索引是存在数据的地方，包含了一堆有相似结构的文档数据。</p>\n<p>（2）type 类型：类型是用来定义数据结构，可以认为是 mysql 中的一张表，type 是 index 中的一个逻辑数据分类</p>\n<p>（3）document 文档：类似于 MySQL 中的一行，不同之处在于 ES 中的每个文档可以有不同的字段，但是对于通用字段应该具有相同的数据类型，文档是es中的最小数据单元，可以认为一个文档就是一条记录。</p>\n<p>（4）Field 字段：Field是Elasticsearch的最小单位，一个document里面有多个field</p>\n<p>（5）shard 分片：单台机器无法存储大量数据，es可以将一个索引中的数据切分为多个shard，分布在多台服务器上存储。有了shard就可以横向扩展，存储更多数据，让搜索和分析等操作分布到多台服务器上去执行，提升吞吐量和性能。</p>\n<p>（6）replica 副本：任何服务器随时可能故障或宕机，此时 shard 可能会丢失，通过创建 replica 副本，可以在 shard 故障时提供备用服务，保证数据不丢失，另外 replica 还可以提升搜索操作的吞吐量。</p>\n<p>shard 分片数量在建立索引时设置，设置后不能修改，默认5个；replica 副本数量默认1个，可随时修改数量；</p>\n<p>（7）segment：每个shard分片是一个lucene实例，每个分片由多个segment组成！！每个segment占用内存，文件句柄等。segment 合并的过程，需要先读取小的 segment，归并计算，再写一遍 segment，最后还要保证刷到磁盘。可以说，合并大的 segment 需要消耗大量的 I/O 和 CPU 资源，同时也会对搜索性能造成影响。所以 Elasticsearch 在默认情况下会对合并线程进行资源限制，确保它不会对搜索性能造成太大影响。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240224213112456.png\" alt=\"image-20240224213112456\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240224213112456</figcaption></figure>\n<p>3、什么是倒排索引：<br>\n在搜索引擎中，每个文档都有对应的文档 ID，文档内容可以表示为一系列关键词的集合，例如，某个文档经过分词，提取了 20 个关键词，而通过倒排索引，可以记录每个关键词在文档中出现的次数和出现位置。也就是说，倒排索引是 关键词到文档 ID 的映射，每个关键词都对应着一系列的文件，这些文件中都出现了该关键词。</p>\n<p>要注意倒排索引的两个细节：</p>\n<p>倒排索引中的所有词项对应一个或多个文档<br>\n倒排索引中的词项 根据字典顺序升序排列</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-e4599b618e270df9b64a75eb77bfb326_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>4、doc_values 的作用：<br>\n倒排索引虽然可以提高搜索性能，但也存在缺陷，比如我们需要对数据做排序或聚合等操作时，lucene 会提取所有出现在文档集合的排序字段，然后构建一个排好序的文档集合，而这个步骤是基于内存的，如果排序数据量巨大的话，容易造成内存溢出和性能缓慢。<br>\ndoc_values 就是 es 在构建倒排索引的同时，会对开启 doc_values 的字段构建一个有序的 “document文档 ==&gt; field value” 的列式存储映射，可以看作是以文档维度，实现了根据指定字段进行排序和聚合的功能，降低对内存的依赖。另外 doc_values 保存在操作系统的磁盘中，当 doc_values 大于节点的可用内存，ES可以从操作系统页缓存中加载或弹出，从而避免发生内存溢出的异常，但如果 docValues 远小于节点的可用内存，操作系统就自然将所有 doc_values 存于内存中（堆外内存），有助于快速访问。</p>\n<p>5、text 和 keyword类型的区别：<br>\n两个类型的区别主要是分词：keyword 类型是不会分词的，直接根据字符串内容建立倒排索引，所以keyword类型的字段只能通过精确值搜索到；Text 类型在存入 Elasticsearch 的时候，会先分词，然后根据分词后的内容建立倒排索引</p>\n<p>6、query 和 filter 的区别？</p>\n<p>（1）query：查询操作不仅仅会进行查询，还会计算分值，用于确定相关度；</p>\n<p>（2）filter：查询操作仅判断是否满足查询条件，不会计算任何分值，也不会关心返回的排序问题，同时，filter 查询的结果可以被缓存，提高性能。</p>\n<h2>二、ES的写入流程</h2>\n<p>1、ES写数据的整体流程：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240223165512655.png\" alt=\"image-20240223165512655\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240223165512655</figcaption></figure>\n<p>（1）客户端选择 ES 的某个 node 发送请求过去，这个 node 就是协调节点 coordinating node<br>\n（2）coordinating node 对 document 进行路由，将请求转发给对应的 node（有 primary shard）<br>\n（3）实际的 node 上的 primary shard 处理请求，然后将数据同步到 replica node<br>\n（4）coordinating node 等到 primary node 和所有 replica node 都执行成功之后，最后返回响应结果给客户端。<br>\n2、ES主分片写数据的详细流程：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/format,png.png\" alt=\"Elasticsearch索引文档的过程\" tabindex=\"0\" loading=\"lazy\"><figcaption>Elasticsearch索引文档的过程</figcaption></figure>\n<p>（1）主分片先将数据写入ES的 memory buffer，然后定时（默认1s）将 memory buffer 中的数据写入一个新的 segment 文件中，并进入操作系统缓存 Filesystem cache（同时清空 memory buffer），这个过程就叫做 refresh；每个 segment 文件实际上是一些倒排索引的集合， 只有经历了 refresh 操作之后，这些数据才能变成可检索的。</p>\n<p>ES 的近实时性：数据存在 memory buffer 时是搜索不到的，只有数据被 refresh 到  Filesystem cache 之后才能被搜索到，而 refresh 是每秒一次， 所以称 es 是近实时的；可以手动调用 es 的 api 触发一次 refresh 操作，让数据马上可以被搜索到；</p>\n<p>（2）由于 memory Buffer 和 Filesystem Cache 都是基于内存，假设服务器宕机，那么数据就会丢失，所以 ES 通过 translog 日志文件来保证数据的可靠性，在数据写入 memory buffer 的同时，将数据也写入 translog 日志文件中，当机器宕机重启时，es 会自动读取 translog 日志文件中的数据，恢复到 memory buffer 和 Filesystem cache 中去。</p>\n<p>ES 数据丢失的问题：translog 也是先写入 Filesystem cache，然后默认每隔 5 秒刷一次到磁盘中，所以默认情况下，可能有 5 秒的数据会仅仅停留在 memory buffer 或者 translog 文件的 Filesystem cache中，而不在磁盘上，如果此时机器宕机，会丢失 5 秒钟的数据。也可以将 translog 设置成每次写操作必须是直接 fsync 到磁盘，但是性能会差很多。</p>\n<p>（3）flush 操作：不断重复上面的步骤，translog 会变得越来越大，不过 translog 文件默认每30分钟或者 阈值超过 512M 时，就会触发 commit 操作，即 flush操作，将 memory buffer 中所有的数据写入新的 segment 文件中， 并将内存中所有的 segment 文件全部落盘，最后清空 translog 事务日志。</p>\n<p>① 将 memory buffer 中的数据 refresh 到 Filesystem Cache 中去，清空 buffer；<br>\n② 创建一个新的 commit point（提交点），同时强行将 Filesystem Cache 中目前所有的数据都 fsync 到磁盘文件中；<br>\n③ 删除旧的 translog 日志文件并创建一个新的 translog 日志文件，此时 commit 操作完成<br>\n更多 ES 的数据写入流程的说明欢迎阅读这篇文章：ElasticSearch搜索引擎：数据的写入流程</p>\n<h2>三、ES的更新和删除流程</h2>\n<p>​        删除和更新都是写操作，但是由于 Elasticsearch 中的文档是不可变的，因此不能被删除或者改动以展示其变更；所以 ES 利用 .del 文件 标记文档是否被删除，磁盘上的每个段都有一个相应的.del 文件</p>\n<p>（1）如果是删除操作，文档其实并没有真的被删除，而是在 .del 文件中被标记为 deleted 状态。该文档依然能匹配查询，但是会在结果中被过滤掉。</p>\n<p>（2）如果是更新操作，就是将旧的 doc 标识为 deleted 状态，然后创建一个新的 doc。</p>\n<p>memory buffer 每 refresh 一次，就会产生一个 segment 文件 ，所以默认情况下是 1s 生成一个 segment 文件，这样下来 segment 文件会越来越多，此时会定期执行 merge。每次 merge 的时候，会将多个 segment 文件合并成一个，同时这里会将标识为 deleted 的 doc 给物理删除掉，不写入到新的 segment 中，然后将新的 segment 文件写入磁盘，这里会写一个 commit point ，标识所有新的 segment 文件，然后打开 segment 文件供搜索使用，同时删除旧的 segment 文件</p>\n<p>有关segment段合并过程，欢迎阅读这篇文章：Elasticsearch搜索引擎：ES的segment段合并原理</p>\n<h2>四、ES的搜索流程</h2>\n<p>搜索被执行成一个两阶段过程，即 Query Then Fetch：</p>\n<p>1、Query阶段：</p>\n<p>客户端发送请求到 coordinate node，协调节点将搜索请求广播到所有的 primary shard 或 replica，每个分片在本地执行搜索并构建一个匹配文档的大小为 from + size 的优先队列。接着每个分片返回各自优先队列中 所有 docId 和 打分值 给协调节点，由协调节点进行数据的合并、排序、分页等操作，产出最终结果。</p>\n<p>2、Fetch阶段：<br>\n协调节点根据 Query阶段产生的结果，去各个节点上查询 docId 实际的 document 内容，最后由协调节点返回结果给客户端。</p>\n<p>coordinate node 对 doc id 进行哈希路由，将请求转发到对应的 node，此时会使用 round-robin 随机轮询算法，在 primary shard 以及其所有 replica 中随机选择一个，让读请求负载均衡。<br>\n接收请求的 node 返回 document 给 coordinate node 。<br>\ncoordinate node 返回 document 给客户端。<br>\nQuery Then Fetch 的搜索类型在文档相关性打分的时候参考的是本分片的数据，这样在文档数量较少的时候可能不够准确，DFS Query Then Fetch 增加了一个预查询的处理，询问 Term 和 Document frequency，这个评分更准确，但是性能会变差。</p>\n<h2>五、ES在高并发下如何保证读写一致性？</h2>\n<p>（1）对于更新操作：可以通过版本号使用乐观并发控制，以确保新版本不会被旧版本覆盖</p>\n<p>每个文档都有一个_version 版本号，这个版本号在文档被改变时加一。Elasticsearch使用这个 _version 保证所有修改都被正确排序，当一个旧版本出现在新版本之后，它会被简单的忽略。</p>\n<p>利用_version的这一优点确保数据不会因为修改冲突而丢失，比如指定文档的version来做更改，如果那个版本号不是现在的，我们的请求就失败了。</p>\n<p>（2）对于写操作，一致性级别支持 quorum/one/all，默认为 quorum，即只有当大多数分片可用时才允许写操作。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故障，副本将会在一个不同的节点上重建。</p>\n<p>one：写操作只要有一个primary shard是active活跃可用的，就可以执行<br>\nall：写操作必须所有的primary shard和replica shard都是活跃可用的，才可以执行<br>\nquorum：默认值，要求ES中大部分的shard是活跃可用的，才可以执行写操作<br>\n（3）对于读操作，可以设置 replication 为 sync(默认)，这使得操作在主分片和副本分片都完成后才会返回；如果设置replication 为 async 时，也可以通过设置搜索请求参数 _preference 为 primary 来查询主分片，确保文档是最新版本。</p>\n<h2>六、ES集群如何选举Master节点</h2>\n<p>1、Elasticsearch 的分布式原理：</p>\n<p>Elasticsearch 会对存储的数据进行切分，划分到不同的分片上，同时每一个分片会生成多个副本，从而保证分布式环境的高可用。ES集群中的节点是对等的，节点间会选出集群的 Master，由 Master 会负责维护集群状态信息，并同步给其他节点。</p>\n<p>Elasticsearch 的性能会不会很低：不会，ES只有建立 index 和 type 时需要经过 Master，而数据的写入有一个简单的 Routing 规则，可以路由到集群中的任意节点，所以数据写入压力是分散在整个集群的。</p>\n<p>2、ES集群 如何 选举 Master：</p>\n<p>Elasticsearch 的选主是 ZenDiscovery 模块负责的，主要包含Ping（节点之间通过这个RPC来发现彼此）和 Unicast（单播模块包含一个主机列表以控制哪些节点需要ping通）这两部分；</p>\n<p>（1）确认候选主节点的最少投票通过数量（elasticsearch.yml 设置的值 discovery.zen.minimum_master_nodes）<br>\n（2）选举时，集群中每个节点对所有 master候选节点（node.master: true）根据 nodeId 进行字典排序，然后选出第一个节点（第0位），暂且认为它是master节点。<br>\n（3）如果对某个节点的投票数达到阈值，并且该节点自己也选举自己，那这个节点就是master；否则重新选举一直到满足上述条件。<br>\n补充：master节点的职责主要包括集群、节点和索引的管理，不负责文档级别的管理；data节点可以关闭http功能。</p>\n<p>3、Elasticsearch是如何避免脑裂现象：</p>\n<p>（1）当集群中 master 候选节点数量不小于3个时（node.master: true），可以通过设置最少投票通过数量（discovery.zen.minimum_master_nodes），设置超过所有候选节点一半以上来解决脑裂问题，即设置为 (N/2)+1；</p>\n<p>（2）当集群 master 候选节点 只有两个时，这种情况是不合理的，最好把另外一个node.master改成false。如果我们不改节点设置，还是套上面的(N/2)+1公式，此时discovery.zen.minimum_master_nodes应该设置为2。这就出现一个问题，两个master备选节点，只要有一个挂，就选不出master了</p>\n<h2>七、建立索引阶段性能提升方法</h2>\n<p>（1）如果是大批量导入，可以设置 index.number_of_replicas: 0 关闭副本，等数据导入完成之后再开启副本<br>\n（2）使用批量请求并调整其大小：每次批量数据 5–15 MB 大是个不错的起始点。<br>\n（3）如果搜索结果不需要近实时性，可以把每个索引的 index.refresh_interval 改到30s<br>\n（4）增加 index.translog.flush_threshold_size 设置，从默认的 512 MB 到更大一些的值，比如 1 GB<br>\n（5）使用 SSD 存储介质<br>\n（6）段和合并：Elasticsearch 默认值是 20 MB/s。但如果用的是 SSD，可以考虑提高到 100–200 MB/s。如果你在做批量导入，完全不在意搜索，你可以彻底关掉合并限流。</p>\n<h2>八、ES的深度分页与滚动搜索scroll</h2>\n<p>（1）深度分页：</p>\n<p>深度分页其实就是搜索的深浅度，比如第1页，第2页，第10页，第20页，是比较浅的；第10000页，第20000页就是很深了。搜索得太深，就会造成性能问题，会耗费内存和占用cpu。而且es为了性能，他不支持超过一万条数据以上的分页查询。那么如何解决深度分页带来的问题，我们应该避免深度分页操作（限制分页页数），比如最多只能提供100页的展示，从第101页开始就没了，毕竟用户也不会搜的那么深。</p>\n<p>（2）滚动搜索：<br>\n一次性查询1万+数据，往往会造成性能影响，因为数据量太多了。这个时候可以使用滚动搜索，也就是 scroll。 滚动搜索可以先查询出一些数据，然后再紧接着依次往下查询。在第一次查询的时候会有一个滚动id，相当于一个锚标记 ，随后再次滚动搜索会需要上一次搜索滚动id，根据这个进行下一次的搜索请求。每次搜索都是基于一个历史的数据快照，查询数据的期间，如果有数据变更，那么和搜索是没有关系的。</p>\n<h2>参考</h2>\n<p>1.<a href=\"https://blog.csdn.net/a745233700/article/details/115585342\" target=\"_blank\" rel=\"noopener noreferrer\">ElasticSearch搜索引擎</a><br>\n2.<a href=\"https://blog.csdn.net/Y_hanxiong/article/details/131632139\" target=\"_blank\" rel=\"noopener noreferrer\">2023最新整理的 Elasticsearch 21道面试题</a><br>\n3.<a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html\" target=\"_blank\" rel=\"noopener noreferrer\">elasticsearch中文官网</a><br>\n4.<a href=\"https://zhuanlan.zhihu.com/p/33671444\" target=\"_blank\" rel=\"noopener noreferrer\">elasticsearch 倒排索引原理</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20240224213112456.png",
      "date_published": "2024-02-24T15:02:58.000Z",
      "date_modified": "2024-02-24T15:02:58.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "一些不常用但很实用的命令",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%B8%B8%E7%94%A8%E4%BD%86%E5%BE%88%E5%AE%9E%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%B8%B8%E7%94%A8%E4%BD%86%E5%BE%88%E5%AE%9E%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4.html",
      "summary": "一些不常用但很实用的命令 https连接耗时检测 iptables拒绝请求",
      "content_html": "\n<h4>https连接耗时检测</h4>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -w</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"TCP handshake: %{time_connect}, SSL handshake: %{time_appconnect}\\n\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -so</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /dev/null</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> https://zhls.qq.com/test-nginx</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h4>iptables拒绝请求</h4>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">iptables</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -A</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  OUTPUT</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 11.145.18.159</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -j</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> REJECT</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>",
      "date_published": "2024-02-24T05:31:47.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Jenkins的一些笔记",
      "url": "http://www.wenzhihuai.com/kubernetes/Jenkins%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0.html",
      "id": "http://www.wenzhihuai.com/kubernetes/Jenkins%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0.html",
      "summary": "Jenkins的一些笔记 公司主要要开发自己的paas平台，集成了Jenkins，真的是遇到了很多很多困难，特别是在api调用的权限这一块，这里，把自己遇到的一些坑的解决方法做一下笔记吧。当然，首先要讲的，就是如何在开启安全的情况下进行API调用。 一、在全局安全配置中 1.1 启用安全 如果勾选不对，那么Jenkins有可能崩溃掉，亲身经历，之前一直...",
      "content_html": "\n<p>公司主要要开发自己的paas平台，集成了Jenkins，真的是遇到了很多很多困难，特别是在api调用的权限这一块，这里，把自己遇到的一些坑的解决方法做一下笔记吧。当然，首先要讲的，就是如何在开启安全的情况下进行API调用。</p>\n<h2>一、在全局安全配置中</h2>\n<h4>1.1 启用安全</h4>\n<p>如果勾选不对，那么Jenkins有可能崩溃掉，亲身经历，之前一直没有勾选安全域，然后授权策略为登录用户可以做任何事，之后权限这一块就彻底崩溃了，重装了又重装，才知道，需要勾选安全域。</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20181027023132911846860.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<h4>1.2 跨域</h4>\n<p>同时开启跨站请求伪造保护，Jenkins的一些API需要用到的。</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/201810270231471528136147.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<h2>二、获取TOKEN</h2>\n<h4>2.1 TOKEN</h4>\n<p>Jenkins的用户token可以在用户的设置下面获得，但是这种方式如果需要重装Jenkins的话，就得重新修改一次配置文件</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20181027023526539361439.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<p>经过对<a href=\"https://github.com/jenkinsci/java-client-api\" target=\"_blank\" rel=\"noopener noreferrer\">Jenkins-client</a>的抓包分析，token可以由username+\":\"+password，然后进行base64加密组成，之后在token前面加上\"Basic \"即可，代码如下：</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20181027024305570167743.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<h2>三、获取Jenkins-Crumb</h2>\n<p>在远程API调用的时候，Jenkins对于某些接口的要求不仅限于Authorization，还必须要有Jenkins-Crumb，这个东西之前在进行获取的时候，有时候会变来变去，比如用curl命令和f12查看的时候发现不一致，实在受不了，感觉毫无规律可言，之后才发现上面的Authorization来直接调用接口获取的才是正确的，再然后想想，可能是之前调用api的时候，没有开启启用安全，再或者是有没有勾选上使用碎片算法。</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/201810270251031329488332.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<p>另，附上curl查询Jenkins-Crumb的命令：</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'http://admin:yourtoken@jenkins-url/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>替换掉yourtoken和jenkins-url即可。</p>\n<h2>四、值得注意的事</h2>\n<h4>4.1 API设计</h4>\n<p>Jenkins的API设计可谓是独领风骚，能把一个提交设计成这样真实佩服测试之后才发现只要提交个表单，key为json，value为值即可，其他的都不需要，这个设计我也不知道怎么来的，感觉超级坑。</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20181027030059348201424.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<h4>4.2 生成构建job</h4>\n<p>由于我们是将Jenkins集成在我们自己的平台里面，并不暴露Jenkins给用户，所以，创建一个job的时候，必须由我们平台的参数往Jenkins里面提交，这一提交，发现的问题不少。<br>\n一是Jenkins的整个job的提交是由两步组成的，先是创建job，再提交配置。即：/createItem?name=xxx接口。<br>\n二是提交的配置参数，提交的是整个xml，而不是由一个一个参数组成的。对于java来说，就得使用xstream或者其他来转化，甚是折腾，如图这种转化。</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20181029112422597829257.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<h4>4.3 构建的队列</h4>\n<p>在点击立即构建的时候，Jenkins是没有返回任何信息，但是在Jenkins的内部，它是通过放到队列里等待的，如果有空闲，就开始构建，否则等待，这个队列是可以获取得到的，我们从里面可以获取上一次构建的信息，是成功还是失败。这种情况下，假设我们多个人同时点击，这下子就有点慌了，如何获取到具体某个人的构建结果，有点虐心。想了半天，最终得出的事：代码相同，意味着每次构建的结果相同，为什么要允许多个人同时点击？就这么解决了：从一个job的构建队列中获取最后一次构建的信息，如果是正在构建，那么不允许构建了，直到构建结果出来。</p>\n<h4>4.4 构建进度的查看</h4>\n<p>需要将Jenkins中的构建进度移植到我们自有的平台，Jenkins的构建进度时通过ajax轮询实现的，获取文本的规则主要从response header里面的两个字段获取<br>\n（1）X-More-Data：是否有更多的数据<br>\n（2）X-Text-Size：从开始到该次调用的文本大小<br>\n我们是通过websocket来将文本内容推送到前端，使用的stomp协议，部分代码如下：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> string </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">string</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> header </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">header</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"X-More-Data\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Strings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isNullOrEmpty</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(header)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> start </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">convertAndSend</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/topic/\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> uuid, string);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">                String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> textSize </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">header</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"X-Text-Size\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Strings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isNullOrEmpty</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(textSize)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                    start </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parseInt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(textSize);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">SECONDS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">convertAndSend</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/topic/\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> uuid, string);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>参考：<br>\n1.<a href=\"https://www.cnblogs.com/jwentest/p/8204421.html\" target=\"_blank\" rel=\"noopener noreferrer\">通过jenkins API去build一个job</a><br>\n2.<a href=\"https://wiki.jenkins.io/display/JENKINS/Remote+access+API\" target=\"_blank\" rel=\"noopener noreferrer\">Jenkins Remote API</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20181027023132911846860.png",
      "date_published": "2024-02-24T05:12:56.000Z",
      "date_modified": "2024-02-24T05:12:56.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Kubernetes容器日志收集",
      "url": "http://www.wenzhihuai.com/kubernetes/Kubernetes%E5%AE%B9%E5%99%A8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86.html",
      "id": "http://www.wenzhihuai.com/kubernetes/Kubernetes%E5%AE%B9%E5%99%A8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86.html",
      "summary": "Kubernetes容器日志收集 日志采集方式 日志从传统方式演进到容器方式的过程就不详细讲了，可以参考一下这篇文章Docker日志收集最佳实践，由于容器的漂移、自动伸缩等特性，日志收集也就必须使用新的方式来实现，Kubernetes官方给出的方式基本是这三种：原生方式、DaemonSet方式和Sidecar方式。 1.原生方式 使用 kubectl ...",
      "content_html": "\n<h2>日志采集方式</h2>\n<p>日志从传统方式演进到容器方式的过程就不详细讲了，可以参考一下这篇文章<a href=\"https://www.cnblogs.com/jingjulianyi/p/6637801.html\" target=\"_blank\" rel=\"noopener noreferrer\">Docker日志收集最佳实践</a>，由于容器的漂移、自动伸缩等特性，日志收集也就必须使用新的方式来实现，Kubernetes官方给出的方式基本是这三种：原生方式、DaemonSet方式和Sidecar方式。</p>\n<p><strong>1.原生方式</strong> 使用 kubectl logs 直接在查看本地保留的日志，或者通过docker engine的 log driver 把日志重定向到文件、syslog、fluentd等系统中。<br>\n<strong>2.DaemonSet方式</strong> 在K8S的每个node上部署日志agent，由agent采集所有容器的日志到服务端。<br>\n<strong>3.Sidecar方式</strong> 一个POD中运行一个sidecar的日志agent容器，用于采集该POD主容器产生的日志。<br>\n三种方式都有利有弊，没有哪种方式能够完美的解决100%问题的，所以要根据场景来贴合。</p>\n<h2>一、原生方式</h2>\n<p><img src=\"https://upyuncdn.wenzhihuai.com/201906020557591917511053.png\" alt=\"\" loading=\"lazy\"><br>\n简单的说，原生方式就是直接使用kubectl logs来查看日志，或者将docker的日志通过日志驱动来打到syslog、journal等去，然后再通过命令来排查，这种方式最好的优势就是简单、资源占用率低等，但是，在多容器、弹性伸缩情况下，日志的排查会十分困难，仅仅适用于刚开始研究Kubernetes的公司吧。不过，原生方式确实其他两种方式的基础，因为它的两种最基础的理念，daemonset和sidecar模式都是基于这两种方式而来的。</p>\n<h3>1.1 控制台stdout方式</h3>\n<p>这种方式是daemonset方式的基础。将日志全部输出到控制台，然后docker开启journal，然后就能在/var/log/journal下面看到二进制的journal日志，如果要查看二进制的日志的话，可以使用journalctl来查看日志：journalctl -u docker.service -n 1 --no-pager -o json -o json-pretty</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"__CURSOR\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"s=113d7df2f5ff4d0985b08222b365c27a;i=1a5744e3;b=05e0fdf6d1814557939e52c0ac7ea76c;m=5cffae4cd4;t=58a452ca82da8;x=29bef852bcd70ae2\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"__REALTIME_TIMESTAMP\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1559404590149032\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"__MONOTONIC_TIMESTAMP\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"399426604244\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_BOOT_ID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"05e0fdf6d1814557939e52c0ac7ea76c\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"PRIORITY\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"6\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"CONTAINER_ID_FULL\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"f2108df841b1f72684713998c976db72665f353a3b4ea17cd06b5fc5f0b8ae27\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"CONTAINER_NAME\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"k8s_controllers_master-controllers-dev4.gcloud.set_kube-system_dcab37be702c9ab6c2b17122c867c74a_1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"CONTAINER_TAG\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"f2108df841b1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"CONTAINER_ID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"f2108df841b1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_TRANSPORT\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"journal\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_PID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"6418\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_UID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_GID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_COMM\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dockerd-current\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_EXE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/usr/bin/dockerd-current\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_CMDLINE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/usr/bin/dockerd-current --add-runtime docker-runc=/usr/libexec/docker/docker-runc-current --default-runtime=docker-runc --exec-opt native.cgroupdriver=systemd --userland-proxy-path=/usr/libexec/docker/docker-proxy-current --init-path=/usr/libexec/docker/docker-init-current --seccomp-profile=/etc/docker/seccomp.json --selinux-enabled=false --log-driver=journald --insecure-registry hub.paas.kjtyun.com --insecure-registry hub.gcloud.lab --insecure-registry 172.30.0.0/16 --log-level=warn --signature-verification=false --max-concurrent-downloads=20 --max-concurrent-uploads=20 --storage-driver devicemapper --storage-opt dm.fs=xfs --storage-opt dm.thinpooldev=/dev/mapper/docker--vg-docker--pool --storage-opt dm.use_deferred_removal=true --storage-opt dm.use_deferred_deletion=true --mtu=1450\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_CAP_EFFECTIVE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1fffffffff\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_SYSTEMD_CGROUP\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/system.slice/docker.service\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_SYSTEMD_UNIT\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"docker.service\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_SYSTEMD_SLICE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"system.slice\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_MACHINE_ID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"225adcce13bd233a56ab481df7413e0b\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_HOSTNAME\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dev4.gcloud.set\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"MESSAGE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"I0601 23:56:30.148153       1 event.go:221] Event(v1.ObjectReference{Kind:</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">DaemonSet</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">, Namespace:</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">openshift-monitoring</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">, Name:</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">node-exporter</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">, UID:</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">f6d2bdc1-6658-11e9-aca2-fa163e938959</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">, APIVersion:</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">apps/v1</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">, ResourceVersion:</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">15378688</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">, FieldPath:</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: node-exporter-hvrpf\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_SOURCE_REALTIME_TIMESTAMP\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1559404590148488\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在上面的json中，_CMDLINE以及其他字段占用量比较大，而且这些没有什么意义，会导致一条简短的日志却被封装成多了几十倍的量，所以的在日志量特别大的情况下，最好进行一下字段的定制，能够减少就减少。<br>\n我们一般需要的字段是CONTAINER_NAME以及MESSAGE，通过CONTAINER_NAME可以获取到Kubernetes的namespace和podName，比如CONTAINER_NAME为k8s_controllers_master-controllers-dev4.gcloud.set_kube-system_dcab37be702c9ab6c2b17122c867c74a_1的时候<br>\n<strong>container name in pod:</strong> controllers<br>\n**pod name: **master-controllers-dev4.gcloud.set<br>\n<strong>namespace:</strong> kube-system<br>\n**pod uid: **dcab37be702c9ab6c2b17122c867c74a_1</p>\n<h3>1.2 新版本的subPathExpr</h3>\n<p>journal方式算是比较标准的方式，如果采用hostPath方式，能够直接将日志输出这里。这种方式唯一的缺点就是在旧Kubernetes中无法获取到podName，但是最新版的Kubernetes1.14的一些特性subPathExpr，就是可以将目录挂载的时候同时将podName写进目录里，但是这个特性仍旧是alpha版本，谨慎使用。<br>\n简单说下实现原理：容器中填写的日志目录，挂载到宿主机的/data/logs/namespace/service_name/$(PodName)/xxx.log里面，如果是sidecar模式，则将改目录挂载到sidecar的收集目录里面进行推送。如果是宿主机安装fluentd模式，则需要匹配编写代码实现识别namespace、service_name、PodName等，然后发送到日志系统。</p>\n<p>可参考：<a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-storage/20181029-volume-subpath-env-expansion.md\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/kubernetes/enhancements/blob/master/keps/sig-storage/20181029-volume-subpath-env-expansion.md</a><br>\n日志落盘参考细节：</p>\n<div class=\"language-yaml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yaml\" data-title=\"yaml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    env</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    - </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">POD_NAME</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      valueFrom</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        fieldRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          apiVersion</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">v1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          fieldPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">metadata.name</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">   ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    volumeMounts</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    - </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">workdir1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      mountPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/logs</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      subPathExpr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">$(POD_NAME)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>我们主要使用了在Pod里的主容器挂载了一个fluent-agent的收集器，来将日志进行收集，其中我们修改了Kubernetes-Client的源码使之支持subPathExpr，然后发送到日志系统的kafka。这种方式能够处理多种日志的收集，比如业务方的日志打到控制台了，但是jvm的日志不能同时打到控制台，否则会发生错乱，所以，如果能够将业务日志挂载到宿主机上，同时将一些其他的日志比如jvm的日志挂载到容器上，就可以使用该种方式。</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_fileName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/data/work/logs/epaas_2019-05-22-0.log\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_sortedId\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"660c2ce8-aacc-42c4-80d1-d3f6d4c071ea\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_collectTime\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"2019-05-22 17:23:58\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_log\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"[33m2019-05-22 17:23:58[0;39m |[34mINFO [0;39m |[34mmain[0;39m |[34mSpringApplication.java:679[0;39m |[32mcom.hqyg.epaas.EpaasPortalApplication[0;39m | The following profiles are active: dev\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_domain\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"rongqiyun-dev\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_podName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"aofjweojo-5679849765-gncbf\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_hostName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dev4.gcloud.set\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>二、Daemonset方式</h2>\n<figure><img src=\"https://upyuncdn.wenzhihuai.com/201906020558431636899655.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>daemonset方式也是基于journal，日志使用journal的log-driver，变成二进制的日志，然后在每个node节点上部署一个日志收集的agent，挂载/var/log/journal的日志进行解析，然后发送到kafka或者es，如果节点或者日志量比较大的话，对es的压力实在太大，所以，我们选择将日志推送到kafka。容器日志收集普遍使用fluentd，资源要求较少，性能高，是目前最成熟的日志收集方案，可惜是使用了ruby来写的，普通人根本没时间去话时间学习这个然后进行定制，好在openshift中提供了<a href=\"https://github.com/openshift/origin-aggregated-logging\" target=\"_blank\" rel=\"noopener noreferrer\">origin-aggregated-logging</a>方案。<br>\n我们可以通过fluent.conf来看origin-aggregated-logging做了哪些工作，把注释，空白的一些东西去掉，然后我稍微根据自己的情况修改了下，结果如下：</p>\n<div class=\"language-tex line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"tex\" data-title=\"tex\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@include configs.d/openshift/system.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">设置fluent的日志级别</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@include configs.d/openshift/input-pre-*.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">最主要的地方，读取journal的日志</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@include configs.d/dynamic/input-syslog-*.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">读取syslog，即操作日志</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;label @INGRESS&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  @include configs.d/openshift/filter-retag-journal.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  进行匹配</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  @include configs.d/openshift/filter-k8s-meta.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  获取Kubernetes的相关信息  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  @include configs.d/openshift/filter-viaq-data-model.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  进行模型的定义</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  @include configs.d/openshift/filter-post-*.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  生成es的索引id</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  @include configs.d/openshift/filter-k8s-record-transform.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  修改日志记录，我们在这里进行了字段的定制，移除了不需要的字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  @include configs.d/openshift/output-applications.conf</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  输出，默认是es，如果想使用其他的比如kafka，需要自己定制</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/label&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>当然，细节上并没有那么好理解，换成一步步理解如下：</p>\n<p><strong>1. 解析journal日志</strong><br>\norigin-aggregated-logging会将二进制的journal日志中的CONTAINER_NAME进行解析，根据匹配规则将字段进行拆解</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"kubernetes\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"container_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fas-dataservice-dev-new\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"namespace_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fas-cost-dev\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"pod_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fas-dataservice-dev-new-5c48d7c967-kb79l\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"pod_id\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"4ad125bb7558f52e30dceb3c5e88dc7bc160980527356f791f78ffcaa6d1611c\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"namespace_id\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"f95238a6-3a67-11e9-a211-20040fe7b690\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>2. es封装</strong><br>\n主要用的是elasticsearch_genid_ext插件，写在了filter-post-genid.conf上。</p>\n<p><strong>3. 日志分类</strong><br>\n通过origin-aggregated-logging来收集journal的日志，然后推送至es，origin-aggregated-logging在推送过程中做了不少优化，即适应高ops的、带有等待队列的、推送重试等，详情可以具体查看一下。</p>\n<p>还有就是对日志进行了分类，分为三种：<br>\n<strong>（1）.操作日志</strong>(在es中以.operations<em>匹配的)，记录了对Kubernetes的操作<br>\n<strong>（2）.项目日志</strong>(在es中以project</em>匹配的)，业务日志，日志收集中最重要的<br>\n<strong>（3）.孤儿日志</strong>(在es中以.orphaned.*匹配的)，没有namespace的日志都会打到这里</p>\n<p><strong>4. 日志字段定制</strong><br>\n经过origin-aggregated-logging推送至后采集的一条日志如下：</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"CONTAINER_TAG\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"4ad125bb7558\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"docker\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"container_id\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"4ad125bb7558f52e30dceb3c5e88dc7bc160980527356f791f78ffcaa6d1611c\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"kubernetes\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"container_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fas-dataservice-dev-new\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"namespace_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fas-cost-dev\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"pod_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fas-dataservice-dev-new-5c48d7c967-kb79l\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"pod_id\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"4ad125bb7558f52e30dceb3c5e88dc7bc160980527356f791f78ffcaa6d1611c\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"namespace_id\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"f95238a6-3a67-11e9-a211-20040fe7b690\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"systemd\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"t\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"BOOT_ID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"6246327d7ea441339d6d14b44498b177\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"CAP_EFFECTIVE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1fffffffff\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"CMDLINE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/usr/bin/dockerd-current --add-runtime docker-runc=/usr/libexec/docker/docker-runc-current --default-runtime=docker-runc --exec-opt native.cgroupdriver=systemd --userland-proxy-path=/usr/libexec/docker/docker-proxy-current --init-path=/usr/libexec/docker/docker-init-current --seccomp-profile=/etc/docker/seccomp.json --selinux-enabled=false --log-driver=journald --insecure-registry hub.paas.kjtyun.com --insecure-registry 10.77.0.0/16 --log-level=warn --signature-verification=false --bridge=none --max-concurrent-downloads=20 --max-concurrent-uploads=20 --storage-driver devicemapper --storage-opt dm.fs=xfs --storage-opt dm.thinpooldev=/dev/mapper/docker--vg-docker--pool --storage-opt dm.use_deferred_removal=true --storage-opt dm.use_deferred_deletion=true --mtu=1450\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"COMM\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dockerd-current\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"EXE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/usr/bin/dockerd-current\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"GID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"MACHINE_ID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0096083eb4204215a24efd202176f3ec\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"PID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"17181\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"SYSTEMD_CGROUP\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/system.slice/docker.service\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"SYSTEMD_SLICE\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"system.slice\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"SYSTEMD_UNIT\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"docker.service\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"TRANSPORT\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"journal\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"UID\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"level\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"info\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"message\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\t</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">at com.sun.proxy.$Proxy242.execute(Unknown Source)\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"hostname\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"host11.rqy.kx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"pipeline_metadata\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"collector\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"ipaddr4\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"10.76.232.16\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"ipaddr6\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fe80::a813:abff:fe66:3b0c\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"inputname\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fluent-plugin-systemd\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fluentd\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"received_at\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"2019-05-15T09:22:39.297151+00:00\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"version\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0.12.43 1.6.0\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"@timestamp\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"2019-05-06T01:41:01.960000+00:00\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"viaq_msg_id\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"NjllNmI1ZWQtZGUyMi00NDdkLWEyNzEtMTY3MDQ0ZjEyZjZh\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看出，跟原生的journal日志类似，增加了几个字段为了写进es中而已，总体而言，其他字段并没有那么重要，所以我们对其中的字段进行了定制，以减少日志的大小，定制化字段之后，一段日志的输出变为（不是同一段，只是举个例子）：</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"hostname\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dev18.gcloud.set\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"@timestamp\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"2019-05-17T04:22:33.139608+00:00\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"pod_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"istio-pilot-8588fcb99f-rqtkd\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"appName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"discovery\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"container_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"epaas-discovery\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"domain\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"istio-system\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"sortedId\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"NjA3ODVhODMtZDMyYy00ZWMyLWE4NjktZjcwZDMwMjNkYjQ3\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"log\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"spiffluster.local/ns/istio-system/sa/istio-galley-service-account\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>5.部署</strong><br>\n最后，在node节点上添加logging-infra-fluentd: \"true\"的标签，就可以在namespace为openshift-logging中看到节点的收集器了。</p>\n<div class=\"language-tex line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"tex\" data-title=\"tex\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">logging-fluentd-29p8z              1/1       Running   0          6d</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">logging-fluentd-bpkjt              1/1       Running   0          6d</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">logging-fluentd-br9z5              1/1       Running   0          6d</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">logging-fluentd-dkb24              1/1       Running   1          5d</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">logging-fluentd-lbvbw              1/1       Running   0          6d</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">logging-fluentd-nxmk9              1/1       Running   1          5d</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>6.关于ip</strong><br>\n业务方不仅仅想要podName，同时还有对ip的需求，控制台方式正常上是没有记录ip的，所以这算是一个难点中的难点，我们在kubernetes_metadata_common.rb的kubernetes_metadata中添加了 'pod_ip'         =&gt; pod_object['status']['podIP']，最终是有些有ip，有些没有ip，这个问题我们继续排查。</p>\n<h2>三、Sidecar模式</h2>\n<p><img src=\"https://upyuncdn.wenzhihuai.com/201906020559061972119021.png\" alt=\"\" loading=\"lazy\"><br>\n这种方式的好处是能够获取日志的文件名、容器的ip地址等，并且配置性比较高，能够很好的进行一系列定制化的操作，比如使用log-pilot或者filebeat或者其他的收集器，还能定制一些特定的字段，比如文件名、ip地址等。<br>\nsidecar模式用来解决日志收集的问题的话，需要将日志目录挂载到宿主机的目录上，然后再mount到收集agent的目录里面，以达到文件共享的目的，默认情况下，使用emptydir来实现文件共享的目的，这里简单介绍下emptyDir的作用。<br>\nEmptyDir类型的volume创建于pod被调度到某个宿主机上的时候，而同一个pod内的容器都能读写EmptyDir中的同一个文件。一旦这个pod离开了这个宿主机，EmptyDir中的数据就会被永久删除。所以目前EmptyDir类型的volume主要用作临时空间，比如Web服务器写日志或者tmp文件需要的临时目录。<br>\n日志如果丢失的话，会对业务造成的影响不可估量，所以，我们使用了尚未成熟的subPathExpr来实现，即挂载到宿主的固定目录/data/logs下，然后是namespace，deploymentName，podName，再然后是日志文件，合成一块便是/data/logs/${namespace}/${deploymentName}/${podName}/xxx.log。<br>\n具体的做法就不在演示了，这里只贴一下yaml文件。</p>\n<div class=\"language-yaml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yaml\" data-title=\"yaml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">apiVersion</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">extensions/v1beta1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">kind</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Deployment</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">xxxx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  namespace</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">element-dev</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">spec</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    spec</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      volumes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        - </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">host-log-path-0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          hostPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/data/logs/element-dev/xxxx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">DirectoryOrCreate</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      containers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        - </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">xxxx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          image</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'xxxxxxx'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          volumeMounts</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            - </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">host-log-path-0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">              mountPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/data/work/logs/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">              subPathExpr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">$(POD_NAME)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        - </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">xxxx-elog-agent</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          image</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'agent'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          volumeMounts</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            - </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">host-log-path-0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">              mountPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/data/work/logs/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">              subPathExpr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">$(POD_NAME)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>fluent.conf的配置文件由于保密关系就不贴了，收集后的一条数据如下：</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_fileName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/data/work/logs/xxx_2019-05-22-0.log\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_sortedId\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"660c2ce8-aacc-42c4-80d1-d3f6d4c071ea\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_collectTime\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"2019-05-22 17:23:58\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_log\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"[33m2019-05-22 17:23:58[0;39m |[34mINFO [0;39m |[34mmain[0;39m |[34mSpringApplication.java:679[0;39m |[32mcom.hqyg.epaas.EpaasPortalApplication[0;39m | The following profiles are active: dev\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_domain\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"namespace\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_ip\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"10.128.93.31\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_podName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"xxxx-5679849765-gncbf\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"_hostName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dev4.gcloud.set\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>四、总结</h2>\n<p>总的来说，daemonset方式比较简单，而且适合更加适合微服务化，当然，不是完美的，比如业务方想把业务日志打到控制台上，但是同时也想知道jvm的日志，这种情况下或许sidecar模式更好。但是sidecar也有不完美的地方，每个pod里都要存在一个日志收集的agent实在是太消耗资源了，而且很多问题也难以解决，比如：主容器挂了，agent还没收集完，就把它给kill掉，这个时候日志怎么处理，业务会不会受到要杀掉才能启动新的这一短暂过程的影响等。所以，我们实际使用中首选daemonset方式，但是提供了sidecar模式让用户选择。</p>\n<p>参考：<br>\n1.<a href=\"https://kubernetes.io/docs/concepts/cluster-administration/logging/\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes日志官方文档</a><br>\n2.<a href=\"https://yq.aliyun.com/articles/650939\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes日志采集Sidecar模式介绍</a><br>\n3.<a href=\"https://www.cnblogs.com/jingjulianyi/p/6637801.html\" target=\"_blank\" rel=\"noopener noreferrer\">Docker日志收集最佳实践</a></p>\n",
      "image": "https://upyuncdn.wenzhihuai.com/201906020557591917511053.png",
      "date_published": "2024-02-24T05:12:56.000Z",
      "date_modified": "2024-02-24T05:35:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Kubernetes之request 和 limit详解",
      "url": "http://www.wenzhihuai.com/kubernetes/request_limit.html",
      "id": "http://www.wenzhihuai.com/kubernetes/request_limit.html",
      "summary": "Kubernetes之request 和 limit详解 我们都知道 Kubernetes 中最小的原子调度单位是Pod，那么就意味着资源管理和资源调度相关的属性都应该Pod对象的字段，其中我们最常见的就是 Pod 的 CPU 和内存配置，而为了实现 Kubernetes 集群中资源的有效调度和充分利用，Kubernetes采用 requests 和 ...",
      "content_html": "\n<p>我们都知道 Kubernetes 中最小的原子调度单位是Pod，那么就意味着资源管理和资源调度相关的属性都应该Pod对象的字段，其中我们最常见的就是 Pod 的 CPU 和内存配置，而为了实现 Kubernetes 集群中资源的有效调度和充分利用，Kubernetes采用 requests 和 limits 两种限制类型来对CPU和内存资源进行容器粒度的分配。</p>\n<div class=\"language-yaml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yaml\" data-title=\"yaml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">resources</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    limits</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        cpu</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        memory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"500Mi\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    requests</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        cpu</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"100m\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        memory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1000Mi\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面我们首先来了解一下上面这段 yaml 文件中字段的含义：requests 和 limits：</p>\n<p><strong>requests 定义了对应的容器所需要的最小资源量。</strong><br>\n<strong>limits 定义了对应容器最大可以消耗的资源上限。</strong><br>\ncpu 等于1一般等同于1CPU 核心，1个VCPU或者一个超线程，具体要看服务器的CPU。而 limits 这里设置的 100m 则叫做100毫核，100m就表示0.1个核,所以这里也可以用0.1代替。<br>\nmemory 等于500Mi，（备注：1Mi=10241024；1M=10001000）<br>\n接下来我们来初步理解 requests 和 limits 这两个资源限制类型，在 Kubernetes 对 CPU 和内存资源限额的设计，通常是指用户在提交 Pod 时，可以声明一个相对较小的 requests 值供调度器使用，而 Kubernetes 真正设置给容器 Cgroups 的，则是相对较大的 limits 值。所以一般来说，在调度的时候 requests 比较重要，在运行时 limits 比较重要。</p>\n<p>而对应实际的业务场景来说，以 java 应用为例，requests 对应的就是JVM虚拟机所需资源的最小值，而 limits 对应的就是 JVM 虚拟机所能够使用的资源最大值。以内存资源为例一般就是指：Xms 和 Xmx，如果 requests 值设置的小于JVM虚拟机 Xms 的值，那么就会导致 Pod 内存溢出，从而导致 Pod 被杀掉，而后重新创建一个Pod。</p>\n<p>那么如果 CPU 资源使用超过了 limits，Pod会不会被杀掉呢？答案是不会，但是被限制。如果没有设置 limits ，Pod 可以使用全部空闲的资源。另外如果设置了 limits而没有设置 requests 时，Kubernetes 默认会将 requests 等于 limits。</p>\n<p>这里通常还会将 requests 和 limits 描述的资源分为两类：可压缩资源（compressible resources） 和不可压缩资源（incompressible resources）。这里不难看出CPU这类型资源为可压缩资源，而内存这类型资源为不可压缩资源。所以合理设置不可压缩资源的limits值就相当重要了。</p>\n",
      "date_published": "2024-02-16T11:46:28.000Z",
      "date_modified": "2024-02-16T11:46:28.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "JVM调优思路",
      "url": "http://www.wenzhihuai.com/java/JVM/%E8%B0%83%E4%BC%98%E6%80%9D%E8%B7%AF.html",
      "id": "http://www.wenzhihuai.com/java/JVM/%E8%B0%83%E4%BC%98%E6%80%9D%E8%B7%AF.html",
      "summary": "JVM调优思路 在项目开发过程中、生产环境中，任何问题的解决、性能的调优总结下来都是三个步骤，即发现问题、定位问题、解决问题，本文将从这个步骤入手，详细阐述内存溢出（OOM、OutOfMemeory）、CPU飙高、GC频繁等JVM问题的排查、定位，以及调优。 1.监控发现问题 2.工具分析问题 3.性能调优 下面开始一步步讲解 一、监控发现问题 通过监...",
      "content_html": "\n<p>在项目开发过程中、生产环境中，任何问题的解决、性能的调优总结下来都是三个步骤，即发现问题、定位问题、解决问题，本文将从这个步骤入手，详细阐述内存溢出（OOM、OutOfMemeory）、CPU飙高、GC频繁等JVM问题的排查、定位，以及调优。</p>\n<p>1.监控发现问题<br>\n2.工具分析问题<br>\n3.性能调优<br>\n下面开始一步步讲解</p>\n<h2>一、监控发现问题</h2>\n<p>通过监控工具例如Prometheus+Grafana，监控服务器有没有以下情况，有的话需要调优：</p>\n<p>GC频繁<br>\nCPU负载过高<br>\nOOM<br>\n内存泄露<br>\n死锁<br>\n程序响应时间较长</p>\n<h2>二、工具分析问题</h2>\n<h2>参考</h2>\n<p>1.<a href=\"https://blog.csdn.net/qq_40991313/article/details/132382094\" target=\"_blank\" rel=\"noopener noreferrer\">【JVM调优】如何进行JVM调优？一篇文章就够了！</a></p>\n",
      "date_published": "2024-02-16T11:46:28.000Z",
      "date_modified": "2024-02-16T11:46:28.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "主流GC收集器采用的算法",
      "url": "http://www.wenzhihuai.com/java/JVM/%E5%B8%B8%E7%94%A8GC%E5%9B%9E%E6%94%B6%E5%99%A8.html",
      "id": "http://www.wenzhihuai.com/java/JVM/%E5%B8%B8%E7%94%A8GC%E5%9B%9E%E6%94%B6%E5%99%A8.html",
      "summary": "主流GC收集器采用的算法 上述表格展示了一些主流垃圾回收器所采用的GC算法。值得注意的是，一些回收器可能会组合使用不同的算法，或者在特定阶段采用特定的算法，以优化性能和内存利用。这种选择通常取决于应用程序的特性和性能需求。 是否可以使用两种或多种垃圾回收器 在Java中，你不能同时使用两种不同的垃圾回收器。Serial和G1是两种不同的垃圾回收器，它们...",
      "content_html": "\n<p>| 垃圾回收器                  | 采用的GC算法                    | 代次   |<br>\n|</p>\n",
      "date_published": "2024-02-16T09:55:09.000Z",
      "date_modified": "2024-02-16T11:46:28.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Java内存模型(JMM)",
      "url": "http://www.wenzhihuai.com/java/JVM/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html",
      "id": "http://www.wenzhihuai.com/java/JVM/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html",
      "summary": "Java内存模型(JMM) 本文转载自深入理解JVM-内存模型（jmm）和GC 1 CPU和内存的交互 了解jvm内存模型前，了解下cpu和计算机内存的交互情况。【因为Java虚拟机内存模型定义的访问操作与计算机十分相似】 有篇很棒的文章，从cpu讲到内存模型:什么是java内存模型 在计算机中，cpu和内存的交互最为频繁，相比内存，磁盘读写太慢，内存...",
      "content_html": "\n<p><em>本文转载自<a href=\"https://www.jianshu.com/p/76959115d486\" target=\"_blank\" rel=\"noopener noreferrer\">深入理解JVM-内存模型（jmm）和GC</a></em></p>\n<h2>1 CPU和内存的交互</h2>\n<p>了解jvm内存模型前，了解下cpu和计算机内存的交互情况。【因为Java虚拟机内存模型定义的访问操作与计算机十分相似】</p>\n<p>有篇很棒的文章，从cpu讲到内存模型:<a href=\"https://www.jianshu.com/p/bf158fbb2432\" target=\"_blank\" rel=\"noopener noreferrer\">什么是java内存模型</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/10006199-d3fc8462f127a2c7-20240216171550523.jpg",
      "date_published": "2024-02-16T09:22:35.000Z",
      "date_modified": "2024-02-16T09:55:09.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "引用计数和根可达算法",
      "url": "http://www.wenzhihuai.com/java/JVM/%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E5%92%8C%E6%A0%B9%E5%8F%AF%E8%BE%BE%E7%AE%97%E6%B3%95.html",
      "id": "http://www.wenzhihuai.com/java/JVM/%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E5%92%8C%E6%A0%B9%E5%8F%AF%E8%BE%BE%E7%AE%97%E6%B3%95.html",
      "summary": "引用计数和根可达算法 本文从JVM是如何寻找垃圾的？——引用计数和根可达算法转载 硬件角度来看什么叫做垃圾？ 计算机的内存也叫做**DRAM(Dynamic Random Access Memory, 动态随机访问内存)**，底层是由一个电容和一个晶体管组成，电容充电表示该bit位数据为1，电容放电表示该bit位数据为0，整个内存就是无数个这样的bit...",
      "content_html": "\n<p><em>本文从<a href=\"https://zhuanlan.zhihu.com/p/669582286\" target=\"_blank\" rel=\"noopener noreferrer\">JVM是如何寻找垃圾的？——引用计数和根可达算法</a>转载</em></p>\n<h3><strong>硬件角度来看什么叫做垃圾？</strong></h3>\n<p>计算机的内存也叫做**<a href=\"https://zhuanlan.zhihu.com/p/539717599\" target=\"_blank\" rel=\"noopener noreferrer\">DRAM(Dynamic Random Access Memory, 动态随机访问内存)</a>**，底层是由一个电容和一个晶体管组成，电容充电表示该bit位数据为1，电容放电表示该bit位数据为0，整个内存就是无数个这样的bit位构成的。同时，内存需要在通电状态保持按周期频率的刷新，才能够维持数据的状态。</p>\n<p>在内存中，某些内存区域（bit位）被使用过了（用来存储对象或者数据）会被打上标记表示已经被使用过了，分配新内存空间的时候就计算机硬件就不会使用这些被标记过的内存区域。通常，这些给内存区域打上标记的活儿一般由操作系统的系统调用来完成，例如C语言中的 allocate()函数调用的系统函数。</p>\n<p>在面向对象的语言中，如果程序员新建了一个对象，那么操作系统会为其分配相应的内存区域，且该部分的内存区域会被打上标记说明已经被使用过了，这样操作系统就不会向该区域写入新的数据。</p>\n<p>然而，如果这个标记没有被程序员释放（C语言中调用free()来释放内存区域），那么该内存区域会一直被标记成已使用，如果整个内存都被标记成为了已使用，那么当操作系统想要再分配内存的时候就会失败，这个时候只有重启电脑来解决问题了。</p>\n<p>所以说，对于内存区域中不再使用的对象，我们需要释放掉其对应的内存区域，方便新的对象创建时有空间为其分配。而这些程序中不再被使用的对象就被称为“垃圾”，“垃圾”往往对应着内存中一块儿需要被释放的区域。</p>\n<h3><strong>Java中的垃圾</strong></h3>\n<p>Java中\"垃圾\"通常指的是不再被程序使用和引用的对象，具体表现在没有被栈、JNI指针和永久代对象所引用的对象。Java作为一种面向对象的编程语言，它使用自动内存管理机制，其中垃圾收集器负责检测和回收不再被程序引用的对象，以释放它们占用的内存空间。以下是一些导致对象成为垃圾的常见情况：</p>\n<ul>\n<li><strong>无引用对象：</strong> 当一个对象没有任何引用指向它时，它就变得不可达，成为垃圾，Java的垃圾收集器会识别这样的对象，并将它们回收。</li>\n<li><strong>引用循环：</strong> 如果一组对象彼此引用形成一个循环，而这个循环与程序的其他部分没有引用相连，那么这个循环中的对象就会成为垃圾。Java的垃圾收集器通过识别引用循环并处理它们来防止内存泄漏。</li>\n<li><strong>显式置空引用：</strong> 如果程序员显式地将一个引用置空（null），而没有其他引用指向相同的对象，那么该对象就变成了垃圾。</li>\n</ul>\n<p>垃圾收集器周期性地运行，并识别和回收这些垃圾对象，释放其内存中对应的区域以确保内存能够得到有效利用，这种自动的内存管理机制就叫做垃圾回收。</p>\n<h2><strong>如何寻找垃圾？</strong></h2>\n<h3><strong>引用计数（Reference Count）</strong></h3>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-39ba8e013eb4757d88c0582e1a4d8db0_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>引用计数算法是一种垃圾标记，其核心思想是通过维护对象的引用计数来判断对象是否可以被回收。每个对象都有一个关联的引用计数，表示当前有多少个指针引用它。当引用计数为零时，意味着没有指针再引用该对象，因此可以安全地回收该对象的内存。</p>\n<p>其实引用计数算法的核心思想就是，只要有对象引用我，那么就说明我是有用的，我还不需要被回收，反正，我就是没有用的对象，那么我和我的子对象都应该被回收掉。这里我们说的对象都是堆上的对象，一般是堆上的内存空间需要程序员手动回收，而栈上的内存空间则由操作系统自行回收。由于栈上的对象是操作系统自行管理和回收的，因此栈上的对象以及一些静态对象始终都是出于存活的状态，因此，堆中存活的对象至少会有一个引用（指针）指向它。</p>\n<p>但是这样会存在着一个问题，就是对象中的引用关系形成了环状——<strong>循环引用</strong>，这种情况下环内所有对象的引用都是&gt;1的，这样一来环内的所有都无法被回收从而造成“内存泄漏”。这是引用算法最主要的局限性，也是为什么JVM不采用循环计数的方法来标记垃圾的原因。</p>\n<h3><strong>根可达算法（Root Search）</strong></h3>\n<p>由于引用计数算法无法解决“循环引用”的问题，无可避免的会造成内存泄露，因此，Java没有采用引用计数算法来寻找垃圾。而是采用了一种从GC Roots开始搜索存活对象的垃圾标记算法——根可达算法。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-47d8f7958e840ee3d16c15d53cd633c8_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h3><strong>哪些是GC Root？</strong></h3>\n<p>| GC Roots Source             | Description                                                  |<br>\n|</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/v2-39ba8e013eb4757d88c0582e1a4d8db0_1440w.webp",
      "date_published": "2024-02-16T09:22:35.000Z",
      "date_modified": "2024-02-16T09:22:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "synchronized",
      "url": "http://www.wenzhihuai.com/java/%E7%BA%BF%E7%A8%8B/synchronized.html",
      "id": "http://www.wenzhihuai.com/java/%E7%BA%BF%E7%A8%8B/synchronized.html",
      "summary": "synchronized 偏向锁在JDK 15后已经废弃 一、什么是synchronized 关键字提供了一种简单而有效的方式来控制并发访问共享资源。但是，它也有一些限制，例如性能问题和潜在的死锁风险，在更复杂的并发场景中，可以考虑使用java.util.concurrent包中提供的更灵活的同步机制。 imgimg 学习Java的小伙伴都知道sync...",
      "content_html": "\n<p><em>偏向锁在JDK 15后已经废弃</em></p>\n<h2>一、什么是synchronized</h2>\n<p>关键字提供了一种简单而有效的方式来控制并发访问共享资源。但是，它也有一些限制，例如性能问题和潜在的死锁风险，在更复杂的并发场景中，可以考虑使用<code>java.util.concurrent</code>包中提供的更灵活的同步机制。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-47781295251ded0e8ff32cf6a73fbfd0_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>学习Java的小伙伴都知道synchronized关键字是解决并发问题常用解决方案，常用的有以下三种使用方式：</p>\n<ul>\n<li>修饰代码块，即同步语句块，其作用的范围是大括号{}括起来的代码，作用的对象是调用这个代码块的对象。</li>\n<li>修饰普通方法，即同步方法，其作用的范围是整个方法，作用的对象是调用这个方法的对象。</li>\n<li>修饰静态方法，其作用的范围是整个静态方法，作用的对象是这个类的所有对象。</li>\n</ul>\n<p>关于synchronized的使用方式以及三种锁的区别在<a href=\"https://blog.csdn.net/carson_ho/article/details/82992269\" target=\"_blank\" rel=\"noopener noreferrer\">学习指南</a>中讲解的十分清楚。</p>\n<p>具体使用规则如下：<br>\n<img src=\"https://github-images.wenzhihuai.com/images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNjc1OTQwNQ==,size_16,color_FFFFFF,t_70.png\" alt=\"在这里插入图片描述\" loading=\"lazy\"></p>\n<h2>二、Synchronized 原理</h2>\n<p>实现原理： JVM 是通过进入、退出 <strong>对象监视器(Monitor)</strong> 来实现对方法、同步块的同步的，而对象监视器的本质依赖于底层操作系统的 <strong>互斥锁(Mutex Lock)</strong> 实现。</p>\n<p>具体实现是在编译之后在同步方法调用前加入一个<code>monitor.enter</code>指令，在退出方法和异常处插入<code>monitor.exit</code>的指令。</p>\n<p>对于没有获取到锁的线程将会阻塞到方法入口处，直到获取锁的线程<code>monitor.exit</code>之后才能尝试继续获取锁。</p>\n<p>流程图如下：<br>\n<img src=\"https://github-images.wenzhihuai.com/images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNjc1OTQwNQ==,size_16,color_FFFFFF,t_70.jpeg\" alt=\"在这里插入图片描述\" loading=\"lazy\"></p>\n<p>通过一段代码来演示:</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] args) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    synchronized</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Synchronize</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Synchronize\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12345</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用<code>javap -c Synchronize</code>可以查看编译之后的具体信息。<br>\n<img src=\"https://github-images.wenzhihuai.com/images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNjc1OTQwNQ==,size_16,color_FFFFFF,t_70-20240217012902416.png\" alt=\"在这里插入图片描述\" loading=\"lazy\"><br>\n可以看到在同步块的入口和出口分别有<code>monitorenter</code>和<code>monitorexit</code>指令。当执行<code>monitorenter</code>指令时，线程试图获取锁也就是获取monitor（monitor对象存在于每个Java对象的对象头中，synchronized锁便是通过这种方式获取锁的，也是为什么Java中任意对象可以作为锁的原因）的持有权。当计数器为0则可以成功获取，获取后将锁计数器设为1也就是加1。相应的在执行<code>monitorexit</code>指令后，将锁计数器设为0，表明锁被释放。如果获取对象锁失败，那当前线程就要阻塞等待，直到锁被另外一个线程释放为止。</p>\n<p>在synchronized修饰方法时是添加<code>ACC_SYNCHRONIZED</code>标识，该标识指明了该方法是一个同步方法，JVM通过该<code>ACC_SYNCHRONIZED</code>访问标志来辨别一个方法是否声明为同步方法，从而执行相应的同步调用。<br>\n<img src=\"https://github-images.wenzhihuai.com/images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNjc1OTQwNQ==,size_16,color_FFFFFF,t_70-20240217012902463.png\" alt=\"在这里插入图片描述\" loading=\"lazy\"><br>\nsynchronized的特点：<br>\n<img src=\"https://github-images.wenzhihuai.com/images/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNjc1OTQwNQ==,size_16,color_FFFFFF,t_70-20240217012902480.png\" alt=\"在这里插入图片描述\" loading=\"lazy\"></p>\n<h2>三、Synchronized 优化</h2>\n<p>从synchronized的特点中可以看到它是一种重量级锁，会涉及到操作系统状态的切换影响效率，所以JDK1.6中对synchronized进行了各种优化，为了能减少获取和释放锁带来的消耗引入了偏向锁和轻量锁。</p>\n<h3>3.1 偏向锁</h3>\n<p>引入偏向锁是为了在无多线程竞争的情况下尽量减少不必要的轻量级锁执行路径，因为轻量级锁的获取及释放依赖多次CAS原子指令，而偏向锁只需要在置换ThreadID的时候依赖一次CAS原子指令（由于一旦出现多线程竞争的情况就必须撤销偏向锁，所以偏向锁的撤销操作的性能损耗必须小于节省下来的CAS原子指令的性能消耗）。</p>\n<p><strong>3.1.1 偏向锁的获取过程</strong></p>\n<p>（1）访问Mark Word中偏向锁的标识是否设置成“1”，锁标志位是否为“01”——确认为可偏向状态。<br>\n（2）如果为可偏向状态，判断线程ID是否指向当前线程，如果是进入步骤（5），否则进入步骤（3）。<br>\n（3）如果线程ID并未指向当前线程，则通过CAS操作竞争锁。如果竞争成功，则将Mark Word中线程ID设置为当前线程ID，然后执行（5）；如果竞争失败，执行（4）。</p>\n<p>（4）如果CAS获取偏向锁失败，则表示有竞争。当到达全局安全点（safepoint）时获得偏向锁的线程被挂起，偏向锁升级为轻量级锁，然后被阻塞在安全点的线程继续往下执行同步代码。<br>\n（5）执行同步代码。</p>\n<p><strong>3.1.2 偏向锁的释放</strong></p>\n<p>偏向锁只有遇到其他线程尝试竞争偏向锁时，持有偏向锁的线程才会释放锁，线程不会主动去释放偏向锁。偏向锁的撤销，需要等待全局安全点（在这个时间点上没有字节码正在执行），它会首先暂停拥有偏向锁的线程，判断锁对象是否处于被锁定状态，撤销偏向锁后恢复到未锁定（标志位为“01”）或轻量级锁（标志位为“00”）的状态。</p>\n<h3>3.2 轻量锁</h3>\n<p>轻量级锁并不是用来代替重量级锁的，它的本意是在没有多线程竞争的前提下，减少传统的重量级锁使用产生的性能消耗。</p>\n<p><strong>3.2.1 轻量级锁的加锁过程</strong></p>\n<p>（1）在代码进入同步块时，如果同步对象锁状态为无锁状态（锁标志位为“01”状态，是否为偏向锁为“0”），虚拟机首先将在当前线程的栈帧中建立一个名为锁记录（Lock Record）的空间，用于存储锁对象目前的Mark Word的拷贝。<br>\n（2）拷贝对象头中的Mark Word复制到锁记录中。<br>\n（3）拷贝成功后，虚拟机将使用CAS操作尝试将对象的Mark Word更新为指向Lock Record的指针，并将Lock Record里的owner指针指向object mark word。如果更新成功，则执行步骤（3），否则执行步骤（4）。<br>\n（4）如果这个更新动作成功，那么这个线程就拥有了该对象的锁，并且对象Mark Word的锁标志位设置为“00”，即表示此对象处于轻量级锁定状态。<br>\n（5）如果这个更新操作失败，虚拟机首先会检查对象的Mark Word是否指向当前线程的栈帧，如果是就说明当前线程已经拥有了这个对象的锁，那就可以直接进入同步块继续执行。否则说明多个线程竞争锁，轻量级锁就要膨胀为重量级锁，锁标志的状态值变为“10”，Mark Word中存储的就是指向重量级锁（互斥量）的指针，后面等待锁的线程也要进入阻塞状态。 而当前线程便尝试使用自旋来获取锁，自旋就是为了不让线程阻塞，而采用循环去获取锁的过程。</p>\n<p><strong>3.2.2 轻量级锁的解锁过程</strong></p>\n<p>（1）通过CAS操作尝试把线程中复制的Displaced Mark Word对象替换当前的Mark Word。<br>\n（2）如果替换成功，整个同步过程完成。<br>\n（3）如果替换失败，说明有其他线程尝试过获取该锁（此时锁已膨胀），那就要在释放锁的同时，唤醒被挂起的线程。</p>\n<h3>3.3 其他优化</h3>\n<p>适应性自旋：在使用CAS时，如果操作失败，CAS会自旋再次尝试。由于自旋是需要消耗CPU资源的，所以如果长期自旋就白白浪费了CPU。JDK1.6 加入了适应性自旋，即如果某个锁自旋很少成功获得，那么下一次就会减少自旋。</p>\n<p>通过<code>--XX:+UseSpinning</code>参数来开启自旋（JDK1.6之前默认关闭自旋）。<br>\n通过<code>--XX:PreBlockSpin</code>修改自旋次数，默认值是10次。</p>\n<p>锁消除：锁消除指的就是虚拟机即使编译器在运行时，如果检测到那些共享数据不可能存在竞争，那么就执行锁消除。锁消除可以节省毫无意义的请求锁的时间。</p>\n<p>锁粗化：我们在写代码时推荐将同步块的作用范围限制得尽量小——只在共享数据的实际作用域才进行同步，这样是为了使得需要同步的操作数量尽可能变小，如果存在锁竞争，那等待线程也能尽快拿到锁。</p>\n<p>注意：在大部分情况下，上面的原则都是没有问题的，但是如果一系列的连续操作都对同一个对象反复加锁和解锁，那么会带来很多不必要的性能消耗。</p>\n<h2>四、扩展</h2>\n<p>其他控制并发/线程同步方式还有 Lock/ReentrantLock。</p>\n<h3>4.1 Synchronized 和 ReenTrantLock 的对比</h3>\n<p>① 两者都是可重入锁</p>\n<p>两者都是可重入锁。“可重入锁”概念是：自己可以再次获取自己的内部锁。比如一个线程获得了某个对象的锁，此时这个对象锁还没有释放，当其再次想要获取这个对象的锁的时候还是可以获取的，如果不可锁重入的话，就会造成死锁。同一个线程每次获取锁，锁的计数器都自增1，所以要等到锁的计数器下降为0时才能释放锁。</p>\n<p>② synchronized依赖于JVM而ReenTrantLock依赖于API</p>\n<p>synchronized是依赖于JVM实现的，前面我们也讲到了 虚拟机团队在JDK1.6为synchronized关键字进行了很多优化，但是这些优化都是在虚拟机层面实现的，并没有直接暴露给我们。ReenTrantLock是JDK层面实现的（也就是API层面，需要lock()和unlock()方法配合try/finally语句块来完成），所以我们可以通过查看它的源代码，来看它是如何实现的。</p>\n<p>③ ReenTrantLock比synchronized增加了一些高级功能</p>\n<p>相比synchronized，ReenTrantLock增加了一些高级功能。主要来说主要有三点：①<strong>等待可中断</strong>；②<strong>可实现公平锁</strong>；③<strong>可实现选择性通知</strong>（锁可以绑定多个条件）</p>\n<ul>\n<li>ReenTrantLock提供了一种能够中断等待锁的线程的机制，通过lock.lockInterruptibly()来实现这个机制。也就是说正在等待的线程可以选择放弃等待，改为处理其他事情。</li>\n<li>ReenTrantLock可以指定是公平锁还是非公平锁。而synchronized只能是非公平锁。所谓的公平锁就是先等待的线程先获得锁。ReenTrantLock默认情况是非公平的，可以通过ReenTrantLoc类的ReentrantLock(boolean fair)构造方法来制定是否是公平的。</li>\n<li>synchronized关键字与wait()和notify()/notifyAll()方法相结合可以实现等待/通知机制，ReentrantLock类当然也可以实现，但是需要借助于Condition接口与newCondition()方法。Condition是JDK1.5之后才有的，它具有很好的灵活性，比如可以实现多路通知功能也就是在一个Lock对象中可以创建多个Condition实例（即对象监视器），线程对象可以注册在指定的Condition中，从而可以有选择性的进行线程通知，在调度线程上更加灵活。 在使用notify/notifyAll()方法进行通知时，被通知的线程是由JVM选择的，用ReentrantLock类结合Condition实例可以实现“选择性通知” ，这个功能非常重要，而且是Condition接口默认提供的。而synchronized关键字就相当于整个Lock对象中只有一个Condition实例，所有的线程都注册在它一个身上。如果执行notifyAll()方法的话就会通知所有处于等待状态的线程这样会造成很大的效率问题，而Condition实例的signalAll()方法只会唤醒注册在该Condition实例中的所有等待线程。</li>\n</ul>\n<p>如果你想使用上述功能，那么选择ReenTrantLock是一个不错的选择。</p>\n<p>④ 性能已不是选择标准</p>\n<p>在JDK1.6之前，synchronized的性能是比ReenTrantLock差很多。具体表示为：synchronized关键字吞吐量随线程数的增加，下降得非常严重。而ReenTrantLock 基本保持一个比较稳定的水平。在JDK1.6之后JVM团队对synchronized关键字做了很多优化，性能基本能与ReenTrantLock持平。所以JDK1.6之后，性能已经不是选择 synchronized 和ReenTrantLock的影响因素，而且虚拟机在未来的性能改进中会更偏向于原生的synchronized，所以还是提倡在synchronized能满足你的需求的情况下，优先考虑使用synchronized关键字来进行同步！优化后的synchronized和ReenTrantLock一样，在很多地方都是用到了CAS操作。</p>\n<p>CAS的原理是通过不断的比较内存中的值与旧值是否相同，如果相同则将内存中的值修改为新值，相比于synchronized省去了挂起线程、恢复线程的开销。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// CAS的操作参数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 内存位置（A）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 预期原值（B）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 预期新值（C）</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 使用CAS解决并发的原理：</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 1. 首先比较A、B，若相等，则更新A中的值为C、返回True；若不相等，则返回false；</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 2. 通过死循环，以不断尝试尝试更新的方式实现并发</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 伪代码如下</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> compareAndSwap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> memoryA</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> oldB</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> newC){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">memoryA</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> oldB){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        memoryA</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(newC);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1234567891011121314151617</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>具体使用当中CAS有个先检查后执行的操作，而这种操作在 Java 中是典型的不安全的操作，所以CAS在实际中是由C++通过调用CPU指令实现的。<br>\n具体过程：</p>\n<ol>\n<li>CAS在Java中的体现为Unsafe类。</li>\n<li>Unsafe类会通过C++直接获取到属性的内存地址。</li>\n<li>接下来CAS由C++的Atomic::cmpxchg系列方法实现。</li>\n</ol>\n<p>AtomicInteger的 i++ 与 i-- 是典型的CAS应用，通过compareAndSet &amp; 一个死循环实现。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> volatile</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/** </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* Gets the current value. </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@return</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> the current value </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">*/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">} </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/** </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* Atomically increments by one the current value. </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@return</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> the previous value </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">*/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getAndIncrement</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">       int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> current </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">       int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> next </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> current </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">       if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">compareAndSet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> next)) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">           return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">   } </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">} </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/** </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* Atomically decrements by one the current value. </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">* </span><span style=\"--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic\">@return</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> the previous value </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">*/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getAndDecrement</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">       int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> current </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">       int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> next </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> current </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">       if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">compareAndSet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> next)) </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">           return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> current</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">   } </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">123456789101112131415161718192021222324252627282930313233343536</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>以上内容引用自<a href=\"https://blog.csdn.net/carson_ho/article/details/82992269\" target=\"_blank\" rel=\"noopener noreferrer\">学习指南</a>。<br>\n总的来说：<br>\n1、synchronized是java关键字，而Lock是java中的一个接口<br>\n2、synchronized会自动释放锁，而Lock必须手动释放锁<br>\n3、synchronized是不可中断的，Lock可以中断也可以不中断<br>\n4、通过Lock可以知道线程有没有拿到锁，而synchronized不能<br>\n5、synchronized能锁住方法和代码块，而Lock只能锁住代码块<br>\n6、Lock可以使用读锁提高多线程读效率<br>\n7、synchronized是非公平锁，ReentranLock可以控制是否公平锁</p>\n<h3>4.2 Synchronized 与 ThreadLocal 的对比</h3>\n<p>Synchronized 与 ThreadLocal（有关ThreadLocal的知识会在之后的博客中介绍）的比较：</p>\n<ol>\n<li>Synchronized关键字主要解决多线程共享数据同步问题；ThreadLocal主要解决多线程中数据因并发产生不一致问题。</li>\n<li>Synchronized是利用锁的机制，使变量或代码块只能被一个线程访问。而ThreadLocal为每一个线程都提供变量的副本，使得每个线程访问到的并不是同一个对象，这样就隔离了多个线程对数据的数据共享。</li>\n</ol>\n<h3>4.3 synchronized与volatile区别</h3>\n<p>| volatile                   | synchronized                     |<br>\n|</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/v2-47781295251ded0e8ff32cf6a73fbfd0_1440w.webp",
      "date_published": "2024-02-16T09:22:35.000Z",
      "date_modified": "2024-02-17T16:08:07.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "mini主机",
      "url": "http://www.wenzhihuai.com/interesting/mini%E4%B8%BB%E6%9C%BA/",
      "id": "http://www.wenzhihuai.com/interesting/mini%E4%B8%BB%E6%9C%BA/",
      "content_html": "",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-11-29T18:45:10.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "个人网站",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/",
      "summary": "jofjweoiaejof",
      "content_html": "<p>jofjweoiaejof</p>\n",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "JVM",
      "url": "http://www.wenzhihuai.com/java/JVM/",
      "id": "http://www.wenzhihuai.com/java/JVM/",
      "content_html": "",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T04:00:26.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "CMS",
      "url": "http://www.wenzhihuai.com/java/JVM/cms.html",
      "id": "http://www.wenzhihuai.com/java/JVM/cms.html",
      "summary": "CMS JDK14已经将CMS回收器完全移除，这里只需要记住它的缺点即可。 CPU资源消耗：CMS垃圾回收器在运行过程中会与应用线程并发执行，这可能会导致较高的CPU资源消耗。 内存碎片问题：CMS垃圾回收器在进行垃圾回收时，不会对对象进行压缩和整理，这可能会导致内存碎片问题。当内存碎片过多时，可能会导致无法找到足够大的连续内存空间来分配大对象，从而提...",
      "content_html": "\n<p>JDK14已经将CMS回收器完全移除，这里只需要记住它的缺点即可。</p>\n<p><strong>CPU资源消耗</strong>：CMS垃圾回收器在运行过程中会与应用线程并发执行，这可能会导致较高的CPU资源消耗。</p>\n<p><strong>内存碎片问题</strong>：CMS垃圾回收器在进行垃圾回收时，不会对对象进行压缩和整理，这可能会导致内存碎片问题。当内存碎片过多时，可能会导致无法找到足够大的连续内存空间来分配大对象，从而提前触发Full GC。</p>\n<p><strong>预测性差</strong>：CMS垃圾回收器的暂停时间和CPU资源消耗都很难预测，这可能会对系统的性能造成影响。</p>\n<p><strong>维护复杂</strong>：CMS垃圾回收器的代码相对复杂，需要更多的维护工作。</p>\n",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T09:22:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "G1",
      "url": "http://www.wenzhihuai.com/java/JVM/g1.html",
      "id": "http://www.wenzhihuai.com/java/JVM/g1.html",
      "summary": "G1 本文转载自增量式垃圾回收器——带你深入理解G1垃圾回收器 G1垃圾回收器是在Java 7之后引入的一种垃圾回收器。它被设计为一种分代、增量、并行和并发的标记-复制垃圾回收器，旨在适应不断扩大的内存和增加的处理器数量，以显著降低垃圾回收造成的暂停时间，同时保持良好的吞吐量，主要有以下特点： 并行与并发： G1回收器在垃圾回收的不同阶段使用了并行和并...",
      "content_html": "\n<p><em>本文转载自<a href=\"https://zhuanlan.zhihu.com/p/669830180\" target=\"_blank\" rel=\"noopener noreferrer\">增量式垃圾回收器——带你深入理解G1垃圾回收器</a></em></p>\n<p>G1垃圾回收器是在Java 7之后引入的一种垃圾回收器。它被设计为一种分代、增量、并行和并发的标记-复制垃圾回收器，旨在适应不断扩大的内存和增加的处理器数量，以显著降低垃圾回收造成的暂停时间，同时保持良好的吞吐量，主要有以下特点：</p>\n<ul>\n<li><strong>并行与并发：</strong> G1回收器在垃圾回收的不同阶段使用了并行和并发的方式，充分利用多核处理器的优势，提高了垃圾回收的效率。</li>\n<li><strong>分代回收：</strong> G1垃圾回收器依旧采用分代回收的思想，但是和CMS等分代回收算法不同，G1不是将整个堆内存划分为年轻代、老年代和元空间。而是将堆内存划分为一个个固定大小的region，每个region可以属于年轻代或老年代。垃圾回收的基本单位是region，而不是整个堆，这使得垃圾回收更加灵活。</li>\n<li><strong>增量回收：</strong> G1采用增量回收的方式，将整个垃圾回收过程分解为多个阶段进行，这样更有利于分散垃圾回收的压力，减小每次暂停的时间，提高系统的响应性。</li>\n<li><strong>Compacting回收：</strong> 与CMS回收器不同，G1是一种compacting回收器，其回收的内存空间是连续的。这样就可以避免CMS收集器由于不连续内存空间造成的所需堆空间更大和浮动垃圾的问题。连续空间意味着G1垃圾回收器可以不必采用空闲链表的内存分配方式，而可以直接采用bump-the-pointer的方式；</li>\n<li><strong>软实时：</strong> G1回收器具有软实时（soft real-time）的特性，用户可以指定垃圾回收时间的限时。虽然G1会努力在限定时间内完成垃圾回收，但并不保证每次都能在时限内完成。通过设定合理的目标，可以使大部分垃圾回收时间都在规定的时限内完成。</li>\n</ul>\n<p>G1垃圾回收器以其创新性的设计和优越的性能特点，逐渐成为Java应用程序中首选的垃圾回收器之一。通过分代、增量、并行、并发等多种技术手段的结合，G1回收器在处理大内存和多核处理器的环境下表现出色，为Java应用程序提供了更好的性能和响应能力。</p>\n<h2><strong>G1的内存模型和分代策略</strong></h2>\n<h3><strong>G1收集器相关参数</strong></h3>\n<p>| 参数                    | 默认值   | 描述                                           |<br>\n|</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/v2-ddd707766e13fb354940a1a2e8ab5055_1440w.webp",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T09:55:09.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "ZGC",
      "url": "http://www.wenzhihuai.com/java/JVM/zgc.html",
      "id": "http://www.wenzhihuai.com/java/JVM/zgc.html",
      "summary": "ZGC 本文转载自12 张图带你彻底理解 ZGC ZGC（Z Garbage Collector） 是一款性能比 G1 更加优秀的垃圾收集器。ZGC 第一次出现是在 JDK 11 中以实验性的特性引入，这也是 JDK 11 中最大的亮点。在 JDK 15 中 ZGC 不再是实验功能，可以正式投入生产使用了，使用 –XX:+UseZGC 可以启用 ZGC...",
      "content_html": "\n<p><em>本文转载自<a href=\"https://zhuanlan.zhihu.com/p/474527679\" target=\"_blank\" rel=\"noopener noreferrer\">12 张图带你彻底理解 ZGC</a></em></p>\n<p>ZGC（Z Garbage Collector） 是一款性能比 G1 更加优秀的垃圾收集器。ZGC 第一次出现是在 JDK 11 中以实验性的特性引入，这也是 JDK 11 中最大的亮点。在 JDK 15 中 ZGC 不再是实验功能，可以正式投入生产使用了，使用 –XX:+UseZGC 可以启用 ZGC。</p>\n<p>ZGC 有 3 个重要特性：</p>\n<ul>\n<li>暂停时间不会超过 10 ms。</li>\n</ul>\n<blockquote>\n<p>JDK 16 发布后，GC 暂停时间已经缩小到 1 ms 以内，并且时间复杂度是 o(1)，这也就是说 GC 停顿时间是一个固定值了，并不会受堆内存大小影响。<br>\n下面图片来自:<a href=\"https://link.zhihu.com/?target=https%3A//malloc.se/blog/zgc-jdk16\" target=\"_blank\" rel=\"noopener noreferrer\">https://malloc.se/blog/zgc-jdk16</a></p>\n</blockquote>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-62257a68cd5fa063d16cb4c30bd75ac0_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<ul>\n<li>最大支持 16TB 的大堆，最小支持 8MB 的小堆。</li>\n<li>跟 G1 相比，对应用程序吞吐量的影响小于 15 %。</li>\n</ul>\n<h2><strong>1 内存多重映射</strong></h2>\n<p>内存多重映射，就是使用 mmap 把不同的虚拟内存地址映射到同一个物理内存地址上。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-febbe42423b1c45c891919800e7a9dce_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>ZGC 为了更灵活高效地管理内存，使用了内存多重映射，把同一块儿物理内存映射为 Marked0、Marked1 和 Remapped 三个虚拟内存。</p>\n<p>当应用程序创建对象时，会在堆上申请一个虚拟地址，这时 ZGC 会为这个对象在 Marked0、Marked1 和 Remapped 这三个视图空间分别申请一个虚拟地址，这三个虚拟地址映射到同一个物理地址。</p>\n<p>Marked0、Marked1 和 Remapped 这三个虚拟内存作为 ZGC 的三个视图空间，在同一个时间点内只能有一个有效。ZGC 就是通过这三个视图空间的切换，来完成并发的垃圾回收。</p>\n<h2><strong>2 染色指针</strong></h2>\n<h3><strong>2.1 三色标记回顾</strong></h3>\n<p>我们知道 G1 垃圾收集器使用了三色标记，这里先做一个回顾。下面是一个三色标记过程中的对象引用示例图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-fe3f4a72fa6d62f53ed30a54ce6f318e_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>总共有三种颜色，说明如下：</p>\n<ul>\n<li>白色：本对象还没有被标记线程访问过。</li>\n<li>灰色：本对象已经被访问过，但是本对象引用的其他对象还没有被全部访问。</li>\n<li>黑色：本对象已经被访问过，并且本对象引用的其他对象也都被访问过了。</li>\n</ul>\n<p>三色标记的过程如下：</p>\n<ol>\n<li>初始阶段，所有对象都是白色。</li>\n<li>将 GC Roots 直接引用的对象标记为灰色。</li>\n<li>处理灰色对象，把当前灰色对象引用的所有对象都变成灰色，之后将当前灰色对象变成黑色。</li>\n<li>重复步骤 3，直到不存在灰色对象为止。</li>\n</ol>\n<p>三色标记结束后，白色对象就是没有被引用的对象（比如上图中的 H 和 G），可以被回收了。</p>\n<h3><strong>2.2 染色指针</strong></h3>\n<p>ZGC 出现之前， GC 信息保存在对象头的 Mark Word 中。比如 64 位的 JVM，对象头的 Mark Word 中保存的信息如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-5b89e4cbd40143e1b66c4928ab737692_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>前 62位保存了 GC 信息，最后两位保存了锁标志。</p>\n<p>ZGC 的一大创举是将 GC 信息保存在了染色指针上。<strong>染色指针是一种将少量信息直接存储在指针上的技术</strong>。在 64 位 JVM 中，对象指针是 64 位，如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-358e6823e714f2c0661414d429cf6bed_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>在这个 64 位的指针上，高 16 位都是 0，暂时不用来寻址。剩下的 48 位支持的内存可以达到 256 TB（2 ^48）,这可以满足多数大型服务器的需要了。不过 ZGC 并没有把 48 位都用来保存对象信息，而是用高 4 位保存了四个标志位，这样 ZGC 可以管理的最大内存可以达到 16 TB（2 ^ 44）。</p>\n<p>通过这四个标志位，JVM 可以从指针上直接看到对象的三色标记状态（Marked0、Marked1）、是否进入了重分配集（Remapped）、是否需要通过 finalize 方法来访问到（Finalizable）。</p>\n<p>无需进行对象访问就可以获得 GC 信息，这大大提高了 GC 效率。</p>\n<h2><strong>3 内存布局</strong></h2>\n<p>首先我们回顾一下 G1 垃圾收集器的内存布局。G1把整个堆分成了大小相同的 region，每个堆大约可以有 2048 个region，每个 region 大小为 1~32 MB （必须是 2 的次方）。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-9bd5069ce01db2607ea2db6751f1cb37_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>跟 G1 类似，ZGC 的堆内存也是基于 Region 来分布，不过 ZGC 是不区分新生代老年代的。不同的是，ZGC 的 Region 支持动态地创建和销毁，并且 Region 的大小不是固定的，包括三种类型的 Region ：</p>\n<ul>\n<li>Small Region：2MB，主要用于放置小于 256 KB 的小对象。</li>\n<li>Medium Region：32MB，主要用于放置大于等于 256 KB 小于 4 MB 的对象。</li>\n<li>Large Region：N * 2MB。这个类型的 Region 是可以动态变化的，不过必须是 2MB 的整数倍，最小支持 4 MB。每个 Large Region 只放置一个大对象，并且是不会被重分配的。</li>\n</ul>\n<h2><strong>4 读屏障</strong></h2>\n<p>读屏障类似于 Spring AOP 的前置增强，是 JVM 向应用代码中插入一小段代码，当应用线程从堆中读取对象的引用时，会先执行这段代码。<strong>注意：只有从堆内存中读取对象的引用时，才会执行这个代码</strong>。下面代码只有第一行需要加入读屏障。</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>Object o = obj.FieldA</span></span>\n<span class=\"line\"><span>Object p = o //不是从堆中读取引用</span></span>\n<span class=\"line\"><span>o.dosomething() //不是从堆中读取引用</span></span>\n<span class=\"line\"><span>int i =  obj.FieldB //不是引用类型</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>读屏障在解释执行时通过 load 相关的字节码指令加载数据。作用是在对象标记和转移过程中，判断对象的引用地址是否满足条件，并作出相应动作。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-1ca4d50695135c37a833b0d25d295a08_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>标记、转移和重定位这些过程请看下一节。</p>\n<blockquote>\n<p>读屏障会对应用程序的性能有一定影响，据测试，对性能的最高影响达到 4%，但提高了 GC 并发能力，降低了 STW。</p>\n</blockquote>\n<h2><strong>5 GC 过程</strong></h2>\n<p>前面已经讲过，ZGC 使用内存多重映射技术，把物理内存映射为 Marked0、Marked1 和 Remapped 三个地址视图，利用地址视图的切换，ZGC 实现了高效的并发收集。</p>\n<p>ZGC 的垃圾收集过程包括标记、转移和重定位三个阶段。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-a0c8cf1fffc8dd487139841e371ce327_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>ZGC 初始化后，整个内存空间的地址视图被设置为 Remapped。</p>\n<h3><strong>5.1 初始标记</strong></h3>\n<p>从 GC Roots 出发，找出 GC Roots 直接引用的对象，放入活跃对象集合，这个过程需要 STW，不过 <strong>STW 的时间跟 GC Roots 数量成正比</strong>，耗时比较短。</p>\n<h3><strong>5.2 并发标记</strong></h3>\n<p>并发标记过程中，GC 线程和 Java 应用线程会并行运行。这个过程需要注意下面几点：</p>\n<ul>\n<li>GC 标记线程访问对象时，如果对象地址视图是 Remapped，就把对象地址视图切换到 Marked0，如果对象地址视图已经是 Marked0，说明已经被其他标记线程访问过了，跳过不处理。</li>\n<li>标记过程中Java 应用线程新创建的对象会直接进入 Marked0 视图。</li>\n<li>标记过程中Java 应用线程访问对象时，如果对象的地址视图是 Remapped，就把对象地址视图切换到 Marked0，可以参考前面讲的读屏障。</li>\n<li>标记结束后，如果对象地址视图是 Marked0，那就是活跃的，如果对象地址视图是 Remapped，那就是不活跃的。</li>\n</ul>\n<p><strong>标记阶段的活跃视图也可能是 Marked1，为什么会采用两个视图呢？</strong></p>\n<p>这里采用两个视图是为了区分前一次标记和这一次标记。如果这次标记的视图是 Marked0，那下一次并发标记就会把视图切换到 Marked1。这样做可以配合 ZGC 按照页回收垃圾的做法。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-064d101e87e45dde0f6d25668c2820e4_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>第二次标记的时候，如果还是切换到 Marked0，那么 2 这个对象区分不出是活跃的还是上次标记过的。如果第二次标记切换到 Marked1，就可以区分出了。</p>\n<p>这时 Marked0 这个视图的对象就是上次标记过程被标记过活跃，转移的时候没有被转移，但这次标记没有被标记为活跃的对象。Marked1 视图的对象是这次标记被标记为活跃的对象。Remapped 视图的对象是上次垃圾回收发生转移或者是被 Java 应用线程访问过，本次垃圾回收中被标记为不活跃的对象。</p>\n<h3><strong>5.3 再标记</strong></h3>\n<p>并发标记阶段 GC 线程和 Java 应用线程并发执行，标记过程中可能会有引用关系发生变化而导致的漏标记问题。再标记阶段重新标记<strong>并发标记阶段</strong>发生变化的对象，还会对非强引用（软应用，虚引用等）进行并行标记。</p>\n<p>这个阶段需要 STW，但是需要标记的对象少，耗时很短。</p>\n<h3><strong>5.4 初始转移</strong></h3>\n<p><strong>转移就是把活跃对象复制到新的内存，之前的内存空间可以被回收。</strong></p>\n<p>初始转移需要扫描 GC Roots 直接引用的对象并进行转移，这个过程需要 STW，STW 时间跟 GC Roots 成正比。</p>\n<h3><strong>5.5 并发转移</strong></h3>\n<p>并发转移过程 GC 线程和 Java 线程是并发进行的。上面已经讲过，转移过程中对象视图会被切回 Remapped 。转移过程需要注意以下几点：</p>\n<ul>\n<li>如果 GC 线程访问对象的视图是 Marked0，则转移对象，并把对象视图设置成 Remapped。</li>\n<li>如果 GC 线程访问对象的视图是 Remapped，说明被其他 GC 线程处理过，跳过不再处理。</li>\n<li>并发转移过程中 Java 应用线程创建的新对象地址视图是 Remapped。</li>\n<li>如果 Java 应用线程访问的对象被标记为活跃并且对象视图是 Marked0，则转移对象，并把对象视图设置成 Remapped。</li>\n</ul>\n<h3><strong>5.6 重定位</strong></h3>\n<p>转移过程对象的地址发生了变化，在这个阶段，把所有指向对象旧地址的指针调整到对象的新地址上。</p>\n<h2><strong>6 垃圾收集算法</strong></h2>\n<p>ZGC 采用标记 - 整理算法，算法的思想是把所有存活对象移动到堆的一侧，移动完成后回收掉边界以外的对象。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-59c87f0385d1c53919152250f73770d8_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<h3><strong>6.1 JDK 16 之前</strong></h3>\n<p>在 JDK 16 之前，ZGC 会预留（Reserve）一块儿堆内存，这个预留内存不能用于 Java 线程的内存分配。即使从 Java 线程的角度看堆内存已经满了也不能使用 Reserve，只有 GC 过程中搬移存活对象的时候才可以使用。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-ed0c5178c1a4429f0794f024211e687c_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>这样做的好处是算法简单，非常适合并行收集。但这样做有几个问题：</p>\n<ul>\n<li>因为有预留内存，能给 Java 线程分配的堆内存小于 JVM 声明的堆内存。</li>\n<li>Reserve 仅仅用于存放 GC 过程中搬移的对象，有点内存浪费。</li>\n<li>因为 Reserve 不能给 GC 过程中搬移对象的 Java 线程使用，搬移线程可能会因为申请不到足够内存而不能完成对象搬移，这返回过来又会导致应用程序的 OOM。</li>\n</ul>\n<h3><strong>6.2 JDK 16 改进</strong></h3>\n<p>JDK 16 发布后，ZGC 支持就地搬移对象（G1 在 Full GC 的时候也是就地搬移）。这样做的好处是不用预留空闲内存了。如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/v2-af685613a34e774a88b112fe43b2b2a0_1440w.webp\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<p>不过就地搬移也有一定的挑战。比如：必须考虑搬移对象的顺序，否则可能会覆盖尚未移动的对象。这就需要 GC 线程之间更好的进行协作，不利于并发收集，同时也会导致搬移对象的 Java 线程需要考虑什么可以做什么不可以做。</p>\n<p>为了获得更好的 GC 表现，<strong>JDK 16 在支持就地搬移的同时，也支持预留（Reserve）堆内存的方式</strong>，并且 ZGC 不需要真的预留空闲的堆内存。默认情况下，只要有空闲的 region，ZGC 就会使用预留堆内存的方式，如果没有空闲的 region，否则 ZGC 就会启用就地搬移。如果有了空闲的 region， ZGC 又会切换到预留堆内存的搬移方式。</p>\n<h2><strong>7 总结</strong></h2>\n<p>内存多重映射和染色指针的引入，使 ZGC 的并发性能大幅度提升。</p>\n<p><strong>ZGC 只有 3 个需要 STW 的阶段</strong>，其中初始标记和初始转移只需要扫描所有 GC Roots，STW 时间 GC Roots 的数量成正比，不会耗费太多时间。再标记过程主要处理并发标记引用地址发生变化的对象，这些对象数量比较少，耗时非常短。可见整个 ZGC 的 STW 时间几乎只跟 GC Roots 数量有关系，不会随着堆大小和对象数量的变化而变化。</p>\n<p>ZGC 也有一个缺点，就是浮动垃圾。因为 ZGC 没有分代概念，虽然 ZGC 的 STW 时间在 1ms 以内，但是 ZGC 的整个执行过程耗时还是挺长的。在这个过程中 Java 线程可能会创建大量的新对象，这些对象会成为浮动垃圾，只能等下次 GC 的时候进行回收。</p>\n<p>参考：</p>\n<p>1.<a href=\"https://link.zhihu.com/?target=https%3A//wiki.openjdk.java.net/display/zgc\" target=\"_blank\" rel=\"noopener noreferrer\">https://wiki.openjdk.java.net/display/zgc</a></p>\n<p>2.<a href=\"https://link.zhihu.com/?target=https%3A//openjdk.java.net/jeps/304\" target=\"_blank\" rel=\"noopener noreferrer\">https://openjdk.java.net/jeps/304</a></p>\n<p>3.<a href=\"https://link.zhihu.com/?target=https%3A//openjdk.java.net/jeps/376\" target=\"_blank\" rel=\"noopener noreferrer\">https://openjdk.java.net/jeps/376</a></p>\n<p>4.<a href=\"https://link.zhihu.com/?target=https%3A//malloc.se/blog/zgc-jdk16\" target=\"_blank\" rel=\"noopener noreferrer\">https://malloc.se/blog/zgc-jdk16</a></p>\n<p>5.<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/ag5u2EPObx7bZr7hkcrOTg\" target=\"_blank\" rel=\"noopener noreferrer\">https://mp.weixin.qq.com/s/ag5u2EPObx7bZr7hkcrOTg</a></p>\n<p>6.<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/FIr6r2dcrm1pqZj5Bubbmw\" target=\"_blank\" rel=\"noopener noreferrer\">https://mp.weixin.qq.com/s/FIr6r2dcrm1pqZj5Bubbmw</a></p>\n<p>7.<a href=\"https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/664e4da05b2c\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jianshu.com/p/664e4da05b2c</a></p>\n<p>8.<a href=\"https://link.zhihu.com/?target=https%3A//www.cnblogs.com/jimoer/p/13170249.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/jimoer/p/13170249.html</a></p>\n<p>9.<a href=\"https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/12544c0ad5c1\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jianshu.com/p/12544c0ad</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/v2-62257a68cd5fa063d16cb4c30bd75ac0_1440w.webp",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T11:46:28.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "SpringBoot",
      "url": "http://www.wenzhihuai.com/java/SpringBoot/",
      "id": "http://www.wenzhihuai.com/java/SpringBoot/",
      "content_html": "",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T04:00:26.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "I/O",
      "url": "http://www.wenzhihuai.com/java/io/",
      "id": "http://www.wenzhihuai.com/java/io/",
      "content_html": "",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "线程",
      "url": "http://www.wenzhihuai.com/java/%E7%BA%BF%E7%A8%8B/",
      "id": "http://www.wenzhihuai.com/java/%E7%BA%BF%E7%A8%8B/",
      "content_html": "",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T04:00:26.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "volatile",
      "url": "http://www.wenzhihuai.com/java/%E7%BA%BF%E7%A8%8B/volatile.html",
      "id": "http://www.wenzhihuai.com/java/%E7%BA%BF%E7%A8%8B/volatile.html",
      "summary": "volatile Volatile是Java中的一种轻量级同步机制，用于保证变量的可见性和禁止指令重排。当一个变量被声明为Volatile类型时，任何修改该变量的操作都会立即被所有线程看到。也就是说，Volatile修饰的变量在每次修改时都会强制将修改刷新到主内存中，具有很好的可见性和线程安全性。 image-20240217004404932imag...",
      "content_html": "\n<p>Volatile是Java中的一种<a href=\"https://www.zhihu.com/search?q=%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2978976437%7D\" target=\"_blank\" rel=\"noopener noreferrer\">轻量级同步机制</a>，用于保证变量的可见性和禁止<a href=\"https://www.zhihu.com/search?q=%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2978976437%7D\" target=\"_blank\" rel=\"noopener noreferrer\">指令重排</a>。当一个变量被声明为Volatile类型时，任何修改该变量的操作都会立即被所有线程看到。也就是说，Volatile修饰的变量在每次修改时都会强制将修改刷新到主内存中，具有很好的可见性和线程安全性。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240217004404932.png\" alt=\"image-20240217004404932\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240217004404932</figcaption></figure>\n<h2>可见性</h2>\n<h2>有序性</h2>\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20240217004404932.png",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T17:21:55.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "网络",
      "url": "http://www.wenzhihuai.com/java/%E7%BD%91%E7%BB%9C/",
      "id": "http://www.wenzhihuai.com/java/%E7%BD%91%E7%BB%9C/",
      "content_html": "",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T04:00:26.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "DevOps",
      "url": "http://www.wenzhihuai.com/kubernetes/devops/",
      "id": "http://www.wenzhihuai.com/kubernetes/devops/",
      "summary": "jofjweoiaejof",
      "content_html": "<p>jofjweoiaejof</p>\n",
      "date_published": "2024-02-16T04:00:26.000Z",
      "date_modified": "2024-02-16T09:22:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "RedissonLock分布式锁源码分析",
      "url": "http://www.wenzhihuai.com/database/redis/RedissonLock%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",
      "id": "http://www.wenzhihuai.com/database/redis/RedissonLock%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",
      "summary": "RedissonLock分布式锁源码分析 最近碰到的一个问题，Java代码中写了一个定时器，分布式部署的时候，多台同时执行的话就会出现重复的数据，为了避免这种情况，之前是通过在配置文件里写上可以执行这段代码的IP，代码中判断如果跟这个IP相等，则执行，否则不执行，想想也是一种比较简单的方式吧，但是感觉很low很low，所以改用分布式锁。 目前分布式锁常...",
      "content_html": "\n<p>最近碰到的一个问题，Java代码中写了一个定时器，分布式部署的时候，多台同时执行的话就会出现重复的数据，为了避免这种情况，之前是通过在配置文件里写上可以执行这段代码的IP，代码中判断如果跟这个IP相等，则执行，否则不执行，想想也是一种比较简单的方式吧，但是感觉很low很low，所以改用分布式锁。<br>\n目前分布式锁常用的三种方式：1.数据库的锁；2.基于Redis的分布式锁；3.基于ZooKeeper的分布式锁。其中数据库中的锁有共享锁和排他锁，这两种都无法直接解决数据库的单点和可重入的问题，所以，本章还是来讲讲基于Redis的分布式锁，也可以用其他缓存（Memcache、Tair等）来实现。</p>\n<h2>一、实现分布式锁的要求</h2>\n<ol>\n<li>互斥性。在任何时候，当且仅有一个客户端能够持有锁。</li>\n<li>不能有死锁。持有锁的客户端崩溃后，后续客户端能够加锁。</li>\n<li>容错性。大部分Redis或者ZooKeeper节点能够正常运行。</li>\n<li>加锁解锁相同。加锁的客户端和解锁的客户端必须为同一个客户端，不能让其他的解锁了。</li>\n</ol>\n<h2>二、Redis实现分布式锁的常用命令</h2>\n<p><strong>1.SETNX key val</strong><br>\n当且仅当key不存在时，set一个key为val的字符串，返回1；若key存在，则什么都不做，返回0。<br>\n<strong>2.expire key timeout</strong><br>\n为key设置一个超时时间，单位为second，超过这个时间锁会自动释放，避免死锁。<br>\n<strong>3.delete key</strong><br>\n删除key，此处用来解锁使用。<br>\n<strong>4.HEXISTS key field</strong><br>\n当key 中存储着field的时候返回1，如果key或者field至少有一个不存在返回0。<br>\n<strong>5.HINCRBY key field increment</strong><br>\n将存储在 key 中的哈希（Hash）对象中的指定字段 field 的值加上增量 increment。如果键 key 不存在，一个保存了哈希对象的新建将被创建。如果字段 field 不存在，在进行当前操作前，其将被创建，且对应的值被置为 0。返回值是增量之后的值。</p>\n<h2>三、常见写法</h2>\n<p>由上面三个命令，我们可以很快的写一个分布式锁出来：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">conn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setnx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"lock\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">equals</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1L</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //do something</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">} </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>但是这样也会存在问题，如果获取该锁的客户端挂掉了怎么办？一般而言，我们可以通过设置expire的过期时间来防止客户端挂掉所带来的影响，可以降低应用挂掉所带来的影响，不过当时间失效的时候，要保证其他客户端只有一台能够获取。</p>\n<h2>四、Redisson</h2>\n<p>Redisson在基于NIO的Netty框架上，充分的利用了Redis键值数据库提供的一系列优势，在Java实用工具包中常用接口的基础上，为使用者提供了一系列具有分布式特性的常用工具类。使得原本作为协调单机多线程并发程序的工具包获得了协调分布式多机多线程并发系统的能力，大大降低了设计和研发大规模分布式系统的难度。同时结合各富特色的分布式服务，更进一步简化了分布式环境中程序相互之间的协作。——摘自百度百科</p>\n<h3>4.1 测试例子</h3>\n<p>先在pom引入Redssion</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.redisson&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;redisson&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;3.6.1&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>起100个线程，同时对count进行操作，每次操作减1，加锁的时候能够保持顺序输出，不加的话为随机。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RedissonTest</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> implements</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Runnable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RedissonClient</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> redisson</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> count </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Config</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        config</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">useSingleServer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setAddress</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"redis://119.23.46.71:6340\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setPassword</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"root\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setDatabase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        redisson </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Redisson</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(config);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        RLock</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> lock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> redisson</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"anyLock\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        lock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">lock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        count--;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(count);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        lock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">unlock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 100</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> RedissonTest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">start</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>输出结果（部分结果）：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9930</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9929</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9928</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9927</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9926</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9925</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9924</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9923</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9922</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9921</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>去掉lock.lock()和lock.unlock()之后（部分结果）：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9930</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9931</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9933</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9935</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9938</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9937</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9940</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9941</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9942</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9944</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9947</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9946</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">9914</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>五、RedissonLock源码分析</h2>\n<p>最新版的Redisson要求redis能够支持eval的命令，否则无法实现，即Redis要求2.6版本以上。在lua脚本中可以调用大部分的Redis命令，使用脚本的好处如下：<br>\n<strong>(1)减少网络开销</strong>:在Redis操作需求需要向Redis发送5次请求，而使用脚本功能完成同样的操作只需要发送一个请求即可，减少了网络往返时延。<br>\n<strong>(2)原子操作</strong>:Redis会将整个脚本作为一个整体执行，中间不会被其他命令插入。换句话说在编写脚本的过程中无需担心会出现竞态条件，也就无需使用事务。事务可以完成的所有功能都可以用脚本来实现。<br>\n<strong>(3)复用</strong>:客户端发送的脚本会永久存储在Redis中，这就意味着其他客户端(可以是其他语言开发的项目)可以复用这一脚本而不需要使用代码完成同样的逻辑。</p>\n<h3>5.1 使用到的全局变量</h3>\n<p>全局变量：<br>\n<strong>expirationRenewalMap</strong>：存储entryName和其过期时间，底层用的netty的PlatformDependent.newConcurrentHashMap()<br>\n<strong>internalLockLeaseTime</strong>：锁默认释放的时间：30 * 1000，即30秒<br>\n<strong>id</strong>：UUID，用作客户端的唯一标识<br>\n<strong>PUBSUB</strong>：订阅者模式，当释放锁的时候，其他客户端能够知道锁已经被释放的消息，并让队列中的第一个消费者获取锁。使用PUB/SUB消息机制的优点：减少申请锁时的等待时间、安全、 锁带有超时时间、锁的标识唯一，防止死锁 锁设计为可重入，避免死锁。<br>\n<strong>commandExecutor</strong>：命令执行器，异步执行器</p>\n<h3>5.2 加锁</h3>\n<p>以lock.lock()为例，调用lock之后，底层使用的是lockInterruptibly，之后调用lockInterruptibly(-1, null);</p>\n<div align=\"center\">\n<figure><img src=\"https://upyuncdn.wenzhihuai.com/20180316081203383746214.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<p>（1）我们来看一下lockInterruptibly的源码，如果别的客户端没有加锁，则当前客户端进行加锁并且订阅，其他客户端尝试加锁，并且获取ttl，然后等待已经加了锁的客户端解锁。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//leaseTime默认为-1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> lockInterruptibly</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit) throws InterruptedException {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> threadId </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentThread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//获取当前线程ID</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> ttl </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> tryAcquire</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//尝试加锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 如果为空，当前线程获取锁成功，否则已经被其他客户端加锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (ttl </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //等待释放，并订阅锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    RFuture</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">RedissonLockEntry</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> future </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> subscribe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(threadId)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    commandExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">syncSubscription</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(future);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            // 重新尝试获取锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            ttl </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> tryAcquire</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            // 成功获取锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (ttl </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                break</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            // 等待锁释放</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (ttl </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                getEntry</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(threadId)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLatch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">tryAcquire</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(ttl, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MILLISECONDS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                getEntry</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(threadId)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLatch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">acquire</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">finally</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 取消订阅</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        unsubscribe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(future</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（2）下面是tryAcquire的实现，调用的是tryAcquireAsync</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Long</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> tryAcquire</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">tryAcquireAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId))</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（3）下面是tryAcquireAsync的实现，异步尝试进行加锁，尝试加锁的时候leaseTime为-1。通常如果客户端没有加锁成功，则会进行阻塞，leaseTime为锁释放的时间。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">T</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RFuture</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> tryAcquireAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (leaseTime </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {   </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//在lock.lock()的时候，已经声明了leaseTime为-1，尝试加锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> tryLockInnerAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> RedisCommands</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">EVAL_LONG</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    RFuture</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> ttlRemainingFuture </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> tryLockInnerAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">commandExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getConnectionManager</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getCfg</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLockWatchdogTimeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(),</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MILLISECONDS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> RedisCommands</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">EVAL_LONG</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //监听事件，订阅消息</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    ttlRemainingFuture</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">addListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> FutureListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> operationComplete</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Future</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">future</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Exception</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">future</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isSuccess</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            Long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> ttlRemaining</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> future</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getNow</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            // lock acquired</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (ttlRemaining </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                //获取新的超时时间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                scheduleExpirationRenewal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(threadId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ttlRemainingFuture</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  //返回ttl时间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（4）下面是tryLockInnerAsyncy异步加锁，使用lua能够保证操作是原子性的</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">T</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RFuture</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">T</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> tryLockInnerAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> leaseTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RedisStrictCommand</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">T</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> command) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    internalLockLeaseTime </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> unit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toMillis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(leaseTime);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> commandExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">evalWriteAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">LongCodec</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">INSTANCE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, command,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">              \"if (redis.call('exists', KEYS[1]) == 0) then \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                  \"redis.call('hset', KEYS[1], ARGV[2], 1); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                  \"redis.call('pexpire', KEYS[1], ARGV[1]); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                  \"return nil; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">              \"end; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">              \"if (redis.call('hexists', KEYS[1], ARGV[2]) == 1) then \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                  \"redis.call('hincrby', KEYS[1], ARGV[2], 1); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                  \"redis.call('pexpire', KEYS[1], ARGV[1]); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                  \"return nil; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">              \"end; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">              \"return redis.call('pttl', KEYS[1]);\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                Collections.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Object</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">singletonList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()), internalLockLeaseTime, </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLockName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(threadId));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>参数<br>\n<strong>KEYS[1]</strong>(getName()) ：需要加锁的key，这里需要是字符串类型。<br>\n<strong>ARGV[1]</strong>(internalLockLeaseTime) ：锁的超时时间，防止死锁<br>\n<strong>ARGV[2]</strong>(getLockName(threadId)) ：锁的唯一标识，也就是刚才介绍的 id（UUID.randomUUID()） + “:” + threadId<br>\nlua脚本解释</p>\n<div class=\"language-lua line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"lua\" data-title=\"lua\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">--检查key是否被占用了，如果没有则设置超时时间和唯一标识，初始化value=1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'exists'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]) == </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hset'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'pexpire'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> nil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">end</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">--如果锁重入,需要判断锁的key field 都一致情况下 value 加一 </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hexists'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]) == </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hincrby'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  --锁重入重新设置超时时间  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'pexpire'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]); </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> nil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">end</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">--返回剩余的过期时间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'pttl'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（5）流程图</p>\n<div align=\"center\">\n<figure><img src=\"https://upyuncdn.wenzhihuai.com/20180320010140455516380.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<h3>5.3 解锁</h3>\n<p>解锁的代码很简单，大意是将该节点删除，并发布消息。<br>\n（1）unlock源码</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> unlock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Boolean</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> opStatus </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">unlockInnerAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentThread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">))</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (opStatus </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> IllegalMonitorStateException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"attempt to unlock lock, not locked by current thread by node id: \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">                    +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> id </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \" thread-id: \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentThread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (opStatus) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            cancelExpirationRenewal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（2）异步解锁，并返回是否成功</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">protected</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RFuture</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Boolean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> unlockInnerAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> threadId) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> commandExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">evalWriteAsync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">LongCodec</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">INSTANCE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">RedisCommands</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">EVAL_BOOLEAN</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"if (redis.call('exists', KEYS[1]) == 0) then \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"redis.call('publish', KEYS[2], ARGV[1]); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"return 1; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"end;\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"if (redis.call('hexists', KEYS[1], ARGV[3]) == 0) then \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"return nil;\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"end; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"local counter = redis.call('hincrby', KEYS[1], ARGV[3], -1); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"if (counter &gt; 0) then \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"redis.call('pexpire', KEYS[1], ARGV[2]); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"return 0; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"else \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"redis.call('del', KEYS[1]); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"redis.call('publish', KEYS[2], ARGV[1]); \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">                \"return 1; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"end; \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"return nil;\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            Arrays.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Object</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">asList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getChannelName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">LockPubSub</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">unlockMessage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, internalLockLeaseTime, </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLockName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(threadId));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>输入的参数有：<br>\n参数：<br>\n<strong>KEYS[1]</strong>(getName())：需要加锁的key，这里需要是字符串类型。<br>\n<strong>KEYS[2]</strong>(getChannelName())：redis消息的ChannelName,一个分布式锁对应唯一的一个 channelName:“redisson_lock__channel__{” + getName() + “}”<br>\n<strong>ARGV[1]</strong>(LockPubSub.unlockMessage)：redis消息体，这里只需要一个字节的标记就可以，主要标记redis的key已经解锁，再结合redis的Subscribe，能唤醒其他订阅解锁消息的客户端线程申请锁。<br>\n<strong>ARGV[2]</strong>(internalLockLeaseTime)：锁的超时时间，防止死锁<br>\n<strong>ARGV[3]</strong>(getLockName(threadId)) ：锁的唯一标识，也就是刚才介绍的 id（UUID.randomUUID()） + “:” + threadId</p>\n<p>此处lua脚本的作用：</p>\n<div class=\"language-lua line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"lua\" data-title=\"lua\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">--如果keys[1]不存在，则发布消息，说明已经被解锁了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'exists'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]) == </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'publish'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">end</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">--key和field不匹配，说明当前客户端线程没有持有锁，不能主动解锁。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hexists'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]) == </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> nil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">end</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">--将value减1，这里主要用在重入锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">local</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> counter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> = </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hincrby'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">counter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'pexpire'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]); </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">--删除key并消息</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'del'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]); </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    redis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">call</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'publish'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">KEYS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">], </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARGV</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]); </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">end</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> nil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（3）删除过期信息</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> cancelExpirationRenewal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Timeout</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> task </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> expirationRenewalMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">remove</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getEntryName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (task </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        task</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cancel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>总结</h2>\n<p>Redis2.6版本之后引入了eval，能够支持lua脚本，更好的保证了redis的原子性，而且redisson采用了大量异步的写法来避免性能所带来的影响。本文只是讲解了下redisson的重入锁，其还有公平锁、联锁、红锁、读写锁等，有兴趣的可以看下。感觉这篇文章写得也不是很好，毕竟netty还没开始学，有些api也不太清楚，希望各位大佬能够建议建议~~</p>\n<p>参考：<br>\n1.<a href=\"https://github.com/redisson/redisson\" target=\"_blank\" rel=\"noopener noreferrer\">redisson</a><br>\n2.<a href=\"https://www.cnblogs.com/linjiqin/p/8003838.html\" target=\"_blank\" rel=\"noopener noreferrer\">Redis分布式锁的正确实现方式</a><br>\n3.<a href=\"https://www.cnblogs.com/yuyutianxia/p/7149363.html\" target=\"_blank\" rel=\"noopener noreferrer\">分布式锁的多种实现方式</a><br>\n4.<a href=\"http://ifeve.com/redis-lock/\" target=\"_blank\" rel=\"noopener noreferrer\">用Redis构建分布式锁</a><br>\n5.<a href=\"http://blog.csdn.net/u010612491/article/details/51427180\" target=\"_blank\" rel=\"noopener noreferrer\">基于Redis的分布式锁实现</a><br>\n6.<a href=\"http://blog.jobbole.com/99751/\" target=\"_blank\" rel=\"noopener noreferrer\">基于Redis实现分布式锁，Redisson使用及源码分析</a></p>\n",
      "image": "https://upyuncdn.wenzhihuai.com/20180316081203383746214.png",
      "date_published": "2024-02-06T07:22:35.000Z",
      "date_modified": "2024-02-06T07:22:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "canal小记",
      "url": "http://www.wenzhihuai.com/middleware/canal/%E4%B8%AD%E9%97%B4%E4%BB%B6%E2%80%94%E2%80%94canal%E5%B0%8F%E8%AE%B0.html",
      "id": "http://www.wenzhihuai.com/middleware/canal/%E4%B8%AD%E9%97%B4%E4%BB%B6%E2%80%94%E2%80%94canal%E5%B0%8F%E8%AE%B0.html",
      "summary": "canal小记 接到个小需求，将mysql的部分数据增量同步到es，但是不仅仅是使用canal而已，整体的流程是mysql>>canal>>flume>>kafka>>es，说难倒也不难，只是做起来碰到的坑实在太多，特别是中间套了那么多中间件，出了故障找起来真的特别麻烦。 先来了解一下MySQL的主从备份： 从上层来看，复制分成三步： master将改...",
      "content_html": "\n<p>接到个小需求，将mysql的部分数据增量同步到es，但是不仅仅是使用canal而已，整体的流程是mysql&gt;&gt;canal&gt;&gt;flume&gt;&gt;kafka&gt;&gt;es，说难倒也不难，只是做起来碰到的坑实在太多，特别是中间套了那么多中间件，出了故障找起来真的特别麻烦。</p>\n<p>先来了解一下MySQL的主从备份：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180421025107389573244.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>从上层来看，复制分成三步：<br>\nmaster将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events，可以通过show binlog events进行查看）；<br>\nslave将master的binary log events拷贝到它的中继日志(relay log)；<br>\nslave重做中继日志中的事件，将改变反映它自己的数据。</p>\n<h2>问题一：测试环境一切正常，但是正式环境中，这几个字段全为0，不知道为什么</h2>\n<p>最后发现是沟通问题。。。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/2018042101385616022393.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>排查过程：</p>\n<ol>\n<li>起初，怀疑是es的问题，会不会是string转为long中出现了问题，PUT了个，无异常，这种情况排除。</li>\n<li>再然后以为是代码有问题，可是想了下，rowData.getAfterColumnsList().forEach(column -&gt; data.put(column.getName(), column.getValue()))这句不可能有什么其他的问题啊，而且测试环境中一切都是好好的。</li>\n<li>canal安装出错，重新查看了一次canal.properties和instance.properties，并没有发现配置错了啥，如果错了，那为什么只有那几个字段出现异常，其他的都是好好的，郁闷。而且，用测试环境的canal配置生产中的数据库，然后本地调试，结果依旧一样。可能问题出在mysql。</li>\n</ol>\n<p>最后发现，居然是沟通问题。。。。测试环境中是从正式环境导入的，用的insert，可是在正式环境里，用的确实insert后update字段，之后发现居然还用delete，，，，晕。。。。之前明确问过了只更新insert的，人与人之间的信任在哪里。。。。</p>\n<h2>问题二：canal.properties中四种模式的差别</h2>\n<p>简单的说，canal维护一份增量订阅和消费关系是依靠解析位点和消费位点的，目前提供了一下四种配置，一开始我也是懵的。</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#canal.instance.global.spring.xml = classpath:spring/local-instance.xml</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#canal.instance.global.spring.xml = classpath:spring/memory-instance.xml</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">canal.instance.global.spring.xml = classpath:spring/file-instance.xml</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#canal.instance.global.spring.xml = classpath:spring/default-instance.xml</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>local-instance</strong><br>\n我也不知道啥。。</p>\n<p><strong>memory-instance</strong><br>\n所有的组件(parser , sink , store)都选择了内存版模式，记录位点的都选择了memory模式，重启后又会回到初始位点进行解析<br>\n特点：速度最快，依赖最少(不需要zookeeper)<br>\n场景：一般应用在quickstart，或者是出现问题后，进行数据分析的场景，不应该将其应用于生产环境。<br>\n个人建议是调试的时候使用该模式，即新增数据的时候，客户端能马上捕获到改日志，但是由于位点一直都是canal启动的时候最新的，不适用与生产环境。</p>\n<p><strong>file-instance</strong><br>\n所有的组件(parser , sink , store)都选择了基于file持久化模式，注意，不支持HA机制.<br>\n特点：支持单机持久化<br>\n场景：生产环境，无HA需求，简单可用.<br>\n采用该模式的时候，如果关闭了canal，会在destination中生成一个meta.dat，用来记录关键信息。如果想要启动canal之后马上订阅最新的位点，需要把该文件删掉。<br>\n<em>{\"clientDatas\":[{\"clientIdentity\":{\"clientId\":1001,\"destination\":\"example\",\"filter\":\".</em>\\..<em>\"},\"cursor\":{\"identity\":{\"slaveId\":-1,\"sourceAddress\":{\"address\":\"192.168.6.71\",\"port\":3306}},\"postion\":{\"included\":false,\"journalName\":\"binlog.008335\",\"position\":221691106,\"serverId\":88888,\"timestamp\":1524294834000}}}],\"destination\":\"example\"}</em></p>\n<p><strong>default-instance</strong><br>\n所有的组件(parser , sink , store)都选择了持久化模式，目前持久化的方式主要是写入zookeeper，保证数据集群共享。<br>\n特点：支持HA<br>\n场景：生产环境，集群化部署.<br>\n该模式会记录集群中所有运行的节点，主要用与HA主备模式，节点中的数据如下，可以关闭某一个canal服务来查看running的变化信息。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/201804210425561692361189.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>问题三：如果要订阅的是mysql的从库改怎么做？</h2>\n<p>生产环境中的主库是不能随便重启的，所以订阅的话必须订阅mysql主从的从库，而从库中是默认下只将主库的操作写进中继日志，并写到自己的二进制日志的，所以需要让其成为canal的主库，必须让其将日志也写到自己的二进制日志里面。处理方法：修改/etc/my.cnf，增加一行log_slave_updates=1，重启数据库后就可以了。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/201804210451321357023546.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>问题四：部分字段没有更新</h2>\n<p>最终版本是以mysql的id为es的主键，用canal同步到flume，再由flume到kafka，然后再由一个中间件写到es里面去，结果发现，一天之中，会有那么一段时间得出的结果少一丢丢，甚至是骤降，如图。不得不从头开始排查情况，canal到flume，加了canal的重试，以及发送到flume的重试机制，没有报错，所有数据正常发送。flume到kafka不敢怀疑，毕竟公司一直在用，怎么可能有问题。kafka到es的中间件？组长写的，而且一直在用，不可能==最后确认的是flume到kafka，kafka的parition处理速度不同，</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180428015132288764661.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>check一下flume的文档，可以知道</p>\n<p>| Property Name  |   Description|<br>\n|</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20180421025107389573244.png",
      "date_published": "2024-02-06T07:22:35.000Z",
      "date_modified": "2024-02-06T07:53:39.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "基于ZooKeeper的队列爬虫",
      "url": "http://www.wenzhihuai.com/middleware/zookeeper/%E5%9F%BA%E4%BA%8EZooKeeper%E7%9A%84%E9%98%9F%E5%88%97%E7%88%AC%E8%99%AB.html",
      "id": "http://www.wenzhihuai.com/middleware/zookeeper/%E5%9F%BA%E4%BA%8EZooKeeper%E7%9A%84%E9%98%9F%E5%88%97%E7%88%AC%E8%99%AB.html",
      "summary": "基于ZooKeeper的队列爬虫 一直琢磨着分布式的东西怎么搞，公司也没有相关的项目能够参与，所以还是回归自己的专长来吧——基于ZooKeeper的分布式队列爬虫，由于没什么人能够一起沟通分布式的相关知识，下面的小项目纯属“胡编乱造”。 简单介绍下ZooKeeper：ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的C...",
      "content_html": "\n<p>一直琢磨着分布式的东西怎么搞，公司也没有相关的项目能够参与，所以还是回归自己的专长来吧——基于ZooKeeper的分布式队列爬虫，由于没什么人能够一起沟通分布式的相关知识，下面的小项目纯属“胡编乱造”。<br>\n简单介绍下<a href=\"http://zookeeper.apache.org/\" target=\"_blank\" rel=\"noopener noreferrer\">ZooKeeper</a>：ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，它是集群的管理者，监视着集群中各个节点的状态根据节点提交的反馈进行下一步合理操作。最终，将简单易用的接口和性能高效、功能稳定的系统提供给用户。<br>\n基本的知识就不过多介绍了，可以参考参考下面这些人的：<br>\n<a href=\"http://zookeeper.apache.org/\" target=\"_blank\" rel=\"noopener noreferrer\">ZooKeeper官网</a><br>\n<a href=\"http://www.cnblogs.com/wuxl360/p/5817471.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.cnblogs.com/wuxl360/p/5817471.html</a></p>\n<h2>一、整体架构</h2>\n<p>这张图来自<a href=\"http://www.cnblogs.com/skyme/p/4362289.html\" target=\"_blank\" rel=\"noopener noreferrer\">skyme</a>，我也是看了这张图的启发写了这篇文章的。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171030102024.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>最基本的分布式队列即一个生产者不断抓取链接，然后将链接存储进ZooKeeper的队列节点里，每个节点的value都只是链接，然后消费者从中获取一条url进行抓取。本项目生产这主要是用来生产URL即可，这部分就不要要求太多。然后是消费者，消费者需要解决的问题有：<br>\n1.队列如何保证自己的分发正确；<br>\n2.消费这如何进行高效的抓取。</p>\n<h2>二、ZooKeeper队列原理</h2>\n<h3>2.1 介绍</h3>\n<p>分布式队列，目前此类产品大多类似于ActiveMQ、RabbitMQ等，本文主要介绍的是Zookeeper实现的分布式队列，它的实现方式也有两种，一种是FIFO（先进先出）的队列，另一种是等待队列元素聚集之后才统一安排的Barrier模型。同样，本文主要讲的是FIFO的队列模型。其大体设计思路也很简单，主要是在/SinaQueue下创建顺序节点，如/SinaQueue/qn-000000000，创建完节点之后，根据下面的4个步骤来决定执行的顺序。<br>\n1.通过调用getChildren()接口来获取某一节点下的所有节点，即获取队列中的所有元素。<br>\n2.确定自己的节点序号在所有子节点中的顺序。<br>\n3.如果自己不是序号最小的子节点，那么就需要进入等待，同时向比自己序号小的最后一个节点注册Watcher监听。<br>\n4.接收到Watcher通知后，重复步骤1。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171030102114.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>2.2 Watcher介绍</h3>\n<p>znode以某种方式发生变化时,“观察”(watch)机制可以让客户端得到通知.可以针对ZooKeeper服务的“操作”来设置观察,该服务的其他 操作可以触发观察。<br>\n1.Watch是一次性的，每次都需要重新注册，并且客户端在会话异常结束时不会收到任何通知，而快速重连接时仍不影响接收通知。<br>\n2.Watch的回调执行都是顺序执行的，并且客户端在没有收到关注数据的变化事件通知之前是不会看到最新的数据，另外需要注意不要在Watch回调逻辑中阻塞整个客户端的Watch回调<br>\n3.Watch是轻量级的，WatchEvent是最小的通信单元，结构上只包含通知状态、事件类型和节点路径。ZooKeeper服务端只会通知客户端发生了什么，并不会告诉具体内容。</p>\n<h3>2.3 源码</h3>\n<p>在csdn上找到了某个人写的这个过程，使用的是ZKClient，有兴趣可以看看<a href=\"http://blog.csdn.net/zuoanyinxiang/article/details/50946328\" target=\"_blank\" rel=\"noopener noreferrer\">杰布斯</a>的博客，但是没有实现上面过程的第三步（Watcher相关的），这里，我们使用的是Zookeeper的另一个客户端工具<a href=\"http://curator.apache.org/\" target=\"_blank\" rel=\"noopener noreferrer\">curator</a>，其中，curator实现了各种Zookeeper的特性，如：Election（选举），Lock（锁），Barrier（关卡），Atonmic（原子量），Cache（缓存），Queue（队列）等。我们来看看Curator实现的简单的分布式队列的源码。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SimpleDistributedQueue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CuratorFramework</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//连接Zookeeper的客户端</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> EnsureContainers</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> ensureContainers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//确保原子特性</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> PREFIX </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"qn-\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//顺序节点的同意前缀，使用qn-</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中PREFIX是用来生成顺序节点的，默认不可更改，将生成的路径赋予给path，然后向节点赋予数据。下面是赋予数据的代码</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> offer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">byte</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] data) throws Exception {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> thisPath </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ZKPaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">makePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"qn-\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//生成的路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        ((ACLBackgroundPathAndBytesable)</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">creatingParentContainersIfNeeded</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">withMode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">CreateMode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">PERSISTENT_SEQUENTIAL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(thisPath, data);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//如果没有路径将生成持久化的路径然后存储节点的数据。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>最关键的来了，队列如何保证自己的分发正确？SimpleDistributedQueue使用take()来取得队列的头部，然后将头部删掉，这一过程的一致性是通过CountDownLatch和Watcher来实现的。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\"> byte</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">take</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() throws Exception {</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//直接调用interPoll，并将超时的设置为0；</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">internalPoll</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0L</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, (TimeUnit)</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\"> byte</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">internalPoll</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">long</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> timeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> unit) throws Exception {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ...</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//忽略超时的设置代码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CountDownLatch</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> latch </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> CountDownLatch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//定义一个latch，设置为1，先加锁，然后执行完任务后再释放锁</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            Watcher</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> watcher </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Watcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> process</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">WatchedEvent</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> event</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                    latch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">countDown</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">            byte</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">[] bytes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                bytes </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">internalElement</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, watcher);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//调用internalElement函数来获取字节流</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">NoSuchElementException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> var17</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (hasTimeout) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> elapsedMs </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentTimeMillis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> startMs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> thisWaitMs </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> maxWaitMs </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> elapsedMs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (thisWaitMs </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0L</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {    </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//如果等待超时了则返回为空</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                latch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(thisWaitMs, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MILLISECONDS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                latch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\"> byte</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">internalElement</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">boolean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> removeIt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Watcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> watcher) throws Exception {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ensurePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            List</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> nodes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                nodes </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> watcher </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> ?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (List)((BackgroundPathable)</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getChildren</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">usingWatcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(watcher)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (List)</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getChildren</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//获取节点下的所有子节点注册监听（watcher默认都不是为空的，每一个都注册）</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">NoNodeException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> var8</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> NoSuchElementException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            Collections</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sort</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(nodes);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//对节点进行排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            Iterator</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> var4 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> nodes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">iterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//遍历</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">var4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hasNext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">                    String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> node </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (String)</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">var4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//取得当前头结点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">node</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">startsWith</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"qn-\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">                        String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> thisPath </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ZKPaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">makePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, node);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">                            byte</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">[] bytes </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">byte</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[])</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getData</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(thisPath);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (removeIt) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                                this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">delete</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(thisPath);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//删除该节点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                            return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> bytes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//返回节点的字节流</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>三、多线程并发</h2>\n<p>对于分布式爬虫来说，让每一个消费者高效的进行抓取是具有重要意义的，为了加快爬虫的速度，采用多线程爬虫的方法。Java多线程实现方式主要有三种：继承Thread类、实现Runnable接口、使用ExecutorService、Callable、Future实现有返回结果的多线程。其中前两种方式线程执行完后都没有返回值，只有最后一种是带返回值的。其中使用Executors提供了四种声明线程池的方法，分别是newCachedThreadPool、newFixedThreadPool、newSingleThreadExecutor和newScheduledThreadPool，为了监控实时监控队列的长度，我们使用数组型的阻塞队列ArrayBlockingQueue。声明方式如下：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> BlockingQueue</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Runnable</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> queuelength </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ArrayBlockingQueue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    ExecutorService</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> es </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ThreadPoolExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(CORE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> CORE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">            0L</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MILLISECONDS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            queuelength)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>四、使用</h2>\n<p>本次实验主要环境如下：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">zookeeper.version=3.5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">java.version=1.8.0_65</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">os.arch=amd64</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">i5 四核心CPU</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">网速为中国电信100M</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这里主要是对博客园中的前两千条博客进行爬取，本文主要是对分布式队列的理解，就不再进行什么难度的处理（比如元素的选取、数据的存储等），只输出每篇博客的title即可。<br>\n生产者代码：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Producer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //logger</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Logger</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> logger </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> LoggerFactory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLogger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Producer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CuratorFramework</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> client </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> CuratorFrameworkFactory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">builder</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">connectString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"119.23.46.71:2181\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sessionTimeoutMs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">connectionTimeoutMs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">canBeReadOnly</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">retryPolicy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ExponentialBackoffRetry</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MAX_VALUE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">defaultData</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SimpleDistributedQueue</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> queue </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SimpleDistributedQueue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"/Queue\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> j </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> begin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//对博客园的每一页进行爬取</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> HttpHelper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getInstance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(url);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            resolveweb</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(content);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Exception</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, e);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> resolveweb</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Exception</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Elements</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> elements</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Jsoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(content).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a.titlelink\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//对每篇博客的标题进行获取</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Element</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> element</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> elements) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">attr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"href\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">StringUtils</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isNotEmpty</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(url) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> !</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">contains</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"javascript\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&amp;&amp;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> !</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">contains</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jump\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)) {</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//去除a中调用href过程</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(url </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \" \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">valueOf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(j++));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                queue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">offer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getBytes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">start</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 100</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; i++) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            begin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://www.cnblogs.com/#p\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">valueOf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(i));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>消费者</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Consumer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //logger</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Logger</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> logger </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> LoggerFactory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLogger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Consumer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CuratorFramework</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> client </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> CuratorFrameworkFactory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">builder</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">connectString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"119.23.46.71:2181\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sessionTimeoutMs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">connectionTimeoutMs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">canBeReadOnly</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">retryPolicy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ExponentialBackoffRetry</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MAX_VALUE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">defaultData</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SimpleDistributedQueue</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> queue </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SimpleDistributedQueue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"/SinaQueue\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> CORE </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Runtime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getRuntime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">availableProcessors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //声明为一个数组型的阻塞队列，这里限制大小为</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> BlockingQueue</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Runnable</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> queuelength </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ArrayBlockingQueue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CBCrawler</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> implements</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Runnable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        public</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> CBCrawler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> url;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> HttpHelper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getInstance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(url);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(url </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \" \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Jsoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(content).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">title</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//打印网页的标题</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> begin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            ExecutorService</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> es</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ThreadPoolExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(CORE, CORE,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">                    0L</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MILLISECONDS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    queuelength);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getChildren</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/SinaQueue\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">                CBCrawler</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> crawler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> CBCrawler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">queue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">take</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                es</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">submit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(crawler);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//执行爬虫</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">valueOf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(i) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \" is finished</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \" queue size is\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> queuelength</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//监控当前队列的长度</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">es</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isShutdown</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//如果线程池没有关闭则关闭</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                es</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shutdown</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Exception</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, e);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> start</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentTimeMillis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">start</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        begin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"start time: \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> start);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        long</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> end</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentTimeMillis</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"end time: \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> end);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"take time: \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">valueOf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(end </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> start));</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//记录开始时间和结束时间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>由于在队列的take中使用了CountDownLatch和Collections.sort(nodes)进行排序，耗时过程变长了不少，2000个节点，单台服务器和多台服务器的耗时是一样的，都是9分钟，具体实验见下面。</p>\n<h3>实验结果</h3>\n<p>生产者生产URL：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171026083433.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>单机模式下的消费者，耗时：560825/(1000*60)=9分钟</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171026084324.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>分布式模式下的抓取：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171026075704.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>耗时：564374/(1000*60)=9分钟：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171030103523.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>由图可见，当每个消费者处理能力大于队列分配的能力时，耗时的过程反而是在队列，毕竟分布式队列在进行take动作的时候对节点进行了加锁，还要对队列进行排序，特别是在节点多达2000+的情况下，耗时是十分严重的。</p>\n<h3>实验二</h3>\n<p>实验二的主要解决的问题是将消费者处理的耗时延长，我们使用Thread.sleep(n)来模拟时长。由于博客园突然连不上，为了减少这种不可控的故障，抓取的网页改为新浪，并将抓取后的URL以文本形式保存下来。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> sleepUtil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> time) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(time </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">*</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Exception</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"线程sleep异常\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, e);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>此时再看程序的输出，可以看出，队列的分发能力已经大于消费者的处理能力，总算是正常了。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171030085127.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>分布式队列分发的时间是：341998/(1000*60)=5.6分钟</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">2017-10-30  08:55:48.458 [main] INFO  com.crawler.Consumer - start time: 1509324606460</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">2017-10-30  08:55:48.458 [main] INFO  com.crawler.Consumer - end time: 1509324948458</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">2017-10-30  08:55:48.458 [main] INFO  com.crawler.Consumer - take time: 341998</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>两台机子抓取完毕的耗时分别是:</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">A服务器:08:49:54.509——09:02:07  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">B服务器:08:49:54.509——09:05:05</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>单机的时候分发时间是：353198/(1000*60)=5.8分钟</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">2017-10-30  09:30:25.812 [main] INFO  com.crawler.Consumer - start time: 1509326672614</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">2017-10-30  09:30:25.812 [main] INFO  com.crawler.Consumer - end time: 1509327025812</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">2017-10-30  09:30:25.812 [main] INFO  com.crawler.Consumer - take time: 353198</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>耗时</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">09:24:33.391——09:51:44.733</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>分布式下平均耗时约为13分钟，单机模式下耗时约为27分钟，还是蛮符合估算的。</p>\n<h2>总结</h2>\n<p>源代码都放在<a href=\"https://github.com/Zephery/distributecrawler/tree/master/wzhqueue/src/main/java/com/crawler\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>了，有兴趣的可以star一下或者下载看一下，也欢迎大家提提意见，没企业级的实战环境，见笑了O(∩_∩)O~</p>\n<p>欢迎访问我的个人网站<br>\n个人网站网址：<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com</a><br>\n个人网站代码地址：<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20171030102024.png",
      "date_published": "2024-02-06T07:22:35.000Z",
      "date_modified": "2024-02-14T17:59:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "TCP/IP、HTTP、HTTPS、HTTP2.0",
      "url": "http://www.wenzhihuai.com/java/%E7%BD%91%E7%BB%9C/IP%E3%80%81HTTP%E3%80%81HTTPS%E3%80%81HTTP2.0.html",
      "id": "http://www.wenzhihuai.com/java/%E7%BD%91%E7%BB%9C/IP%E3%80%81HTTP%E3%80%81HTTPS%E3%80%81HTTP2.0.html",
      "summary": "TCP/IP、HTTP、HTTPS、HTTP2.0 HTTP，全称超文本传输协议（HTTP，HyperText Transfer Protocol)，是一个客户端和服务器端请求和应答的标准（TCP），互联网上应用最为广泛的一种网络协议。客户端是终端用户，服务器端是网站。通过使用Web浏览器、网络爬虫或者其它的工具，客户端发起一个到服务器上指定端口（默认...",
      "content_html": "\n<p>HTTP，全称超文本传输协议（HTTP，HyperText Transfer Protocol)，是一个客户端和服务器端请求和应答的标准（TCP），互联网上应用最为广泛的一种网络协议。客户端是终端用户，服务器端是网站。通过使用Web浏览器、网络爬虫或者其它的工具，客户端发起一个到服务器上指定端口（默认端口为80）的HTTP请求。</p>\n<p>HTTPS，即加密后的HTTP。HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全。HTTPS都是用的TLS协议，但是由于SSL出现的时间比较早，并且依旧被现在浏览器所支持，因此SSL依然是HTTPS的代名词，但无论是TLS还是SSL都是上个世纪的事情，SSL最后一个版本是3.0，今后TLS将会继承SSL优良血统继续为我们进行加密服务。目前TLS的版本是1.2，定义在RFC 5246中，暂时还没有被广泛的使用。</p>\n<p>HTTP2.0，下一代的HTTP协议。相比于HTTP1.x，大幅度的提升了web性能，进一步减少了网络延时和拥塞。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171224034237.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>各自的RFC相关文档自己去搜吧，<a href=\"https://www.rfc-editor.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.rfc-editor.org/</a>。</p>\n<h2>一、TCP/IP</h2>\n<p>为了了解HTTP，有必要先理解一下TCP/IP。目前，存在两种划分模型的方法，OSI七层模型和TCP/IP模型，具体的区别不在阐述。HTTP是建立在TCP协议之上，所以HTTP协议的瓶颈及其优化技巧都是基于TCP协议本身的特性，例如tcp建立连接的3次握手和断开连接的4次挥手以及每次建立连接带来的RTT延迟时间。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171221101751.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>TCP三次握手四次挥手的原理，由于篇幅关系，具体请看<a href=\"http://uule.iteye.com/blog/2213562\" target=\"_blank\" rel=\"noopener noreferrer\">TCP协议的三次握手和四次挥手</a>，</p>\n<h2>二、HTTP</h2>\n<p>超文本传输协议(HyperText Transfer Protocol) 是伴随着计算机网络和浏览器而诞生，<a href=\"http://www.ifanr.com/550613\" target=\"_blank\" rel=\"noopener noreferrer\">在浏览器出现之前，人们是怎么使用网络的？</a>，不管怎么说，那个时代对于现在的我们，有点难以想象。。。之后，网景发布了Netscape Navigator浏览器，才慢慢打开了互联网的幕布。如果根据OSI来划分的话，HTML属于表示层，而HTTP属于应用层。HTTP发展至今，经过了HTTP0.9、HTTP1.0、HTTP1.1、HTTP2.0的时代，虽然2.0很久之前就正式提出标准，大多浏览器也支持了，但是网络支持HTTP2.0的却很少。</p>\n<h3>2.1 HTTP报文分析</h3>\n<p>报文，是网络中交换和传输的基本单元，即一次性发送的数据块。HTTP的报文是由一行一行组成的，纯文本，而且是明文，即：如果能监听你的网络，那么你发送的所有账号密码都是可以看见的，为了保障数据隐秘性，HTTPS随之而生。</p>\n<h4>2.1.1 请求报文：</h4>\n<p>为了形象点，我们把报文标准和实际的结合起来看。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171221111615.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>下面是实际报文，以访问自己的网站(<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com</a>)中的一个链接为例。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171221043103.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h5>请求行</h5>\n<p>请求行由方法字段、URL 字段 和HTTP 协议版本字段 3 个部分组成，他们之间使用空格隔开。常用的 HTTP 请求方法有 GET、POST、HEAD、PUT、DELETE、OPTIONS、TRACE、CONNECT，这里我们使用的是GET方法，访问的是/biaoqianyun.do，协议使用的是HTTP/1.1。<br>\n<strong>GET</strong>：当客户端要从服务器中读取某个资源时，使用GET 方法。如果需要加传参数的话，需要在URL之后加个\"?\"，然后把参数名字和值用=连接起来，传递参数长度受限制，通常IE8的为4076，Chrome的为7675。例如，/index.jsp?id=100&amp;op=bind。<br>\n<strong>POST</strong>：当客户端给服务器提供信息较多时可以使用POST 方法，POST 方法向服务器提交数据，比如完成表单数据的提交，将数据提交给服务器处理。GET 一般用于获取/查询资源信息，POST 会附带用户数据，一般用于更新资源信息。POST 方法将请求参数封装在HTTP 请求数据中，以名称/值的形式出现，可以传输大量数据;</p>\n<h5>请求头部</h5>\n<p>请求头部由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔。请求头部通知服务器有关于客户端请求的信息，典型的请求头有：<br>\n<strong>User-Agent</strong>：产生请求的浏览器类型;<br>\n<strong>Accept</strong>：客户端可识别的响应内容类型列表;星号 “ * ” 用于按范围将类型分组，用 “ <em>/</em> ” 指示可接受全部类型，用“ type/* ”指示可接受 type 类型的所有子类型;<br>\n<strong>Accept-Language</strong>：客户端可接受的自然语言;<br>\n<strong>Accept-Encoding</strong>：客户端可接受的编码压缩格式;<br>\n<strong>Accept-Charset</strong>：可接受的应答的字符集;<br>\n<strong>Host</strong>：请求的主机名，允许多个域名同处一个IP 地址，即虚拟主机;<br>\n<strong>connection</strong>：连接方式(close 或 keepalive)，如果是close的话就需要进行TCP四次挥手关闭连接，如果是keepalive，表明还能继续使用，这是HTTP1.1对1.0的新增，加快了网络传输，默认是keepalive;<br>\n<strong>Cookie</strong>：存储于客户端扩展字段，向同一域名的服务端发送属于该域的cookie;</p>\n<h6>空行</h6>\n<p>最后一个请求头之后是一个空行，发送回车符和换行符，通知服务器以下不再有请求头;</p>\n<h5>请求包体</h5>\n<p>请求包体不在 GET 方法中使用，而是在POST 方法中使用。POST 方法适用于需要客户填写表单的场合。与请求包体相关的最常使用的是包体类型 Content-Type 和包体长度 Content-Length;</p>\n<h4>2.1.2 响应报文</h4>\n<p>同样，先粘贴报文标准。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171224035755.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>抓包，以访问(<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com</a>)为例。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171224035850.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h5>状态行</h5>\n<p>状态行由 HTTP 协议版本字段、状态码和状态码的描述文本 3 个部分组成，他们之间使用空格隔开，描述文本一般不显示;<br>\n<strong>状态码</strong>：由三位数字组成，第一位数字表示响应的类型，常用的状态码有五大类如下所示：<br>\n1xx：服务器已接收，但客户端可能仍要继续发送;<br>\n2xx：成功;<br>\n3xx：重定向;<br>\n4xx：请求非法，或者请求不可达;<br>\n5xx：服务器内部错误;</p>\n<h5>响应头部：响应头可能包括：</h5>\n<p><strong>Location</strong>：Location响应报头域用于重定向接受者到一个新的位置。例如：客户端所请求的页面已不存在原先的位置，为了让客户端重定向到这个页面新的位置，服务器端可以发回Location响应报头后使用重定向语句，让客户端去访问新的域名所对应的服务器上的资源;<br>\n<strong>Server</strong>：Server 响应报头域包含了服务器用来处理请求的软件信息及其版本。它和 User-Agent 请求报头域是相对应的，前者发送服务器端软件的信息，后者发送客户端软件(浏览器)和操作系统的信息。<br>\n<strong>Vary</strong>：指示不可缓存的请求头列表;<br>\n<strong>Connection</strong>：连接方式，这个跟rquest的类似。<br>\n<strong>空行</strong>：最后一个响应头部之后是一个空行，发送回车符和换行符，通知服务器以下不再有响应头部。<br>\n<strong>响应包体</strong>：服务器返回给客户端的文本信息;</p>\n<h3>2.2 HTTP特性</h3>\n<p>HTTP的主要特点主要能概括如下：</p>\n<h4>2.2.1 无状态性</h4>\n<p>即，当客户端访问完一次服务器再次访问的时候，服务器是无法知道这个客户端之前是否已经访问过了。优点是不需要先前的信息，能够更快的应答，缺点是每次连接传送的数据量增大。这种做法不利于信息的交互，随后，Cookie和Session就应运而生，至于它俩有什么区别，可以看看<a href=\"https://www.zhihu.com/question/19786827\" target=\"_blank\" rel=\"noopener noreferrer\">COOKIE和SESSION有什么区别？<br>\n</a>。</p>\n<h4>2.2.2 持久连接</h4>\n<p>HTTP1.1 使用持久连接keepalive，所谓持久连接，就是服务器在发送响应后仍然在一段时间内保持这条连接，允许在同一个连接中存在多次数据请求和响应，即在持久连接情况下，服务器在发送完响应后并不关闭TCP连接，客户端可以通过这个连接继续请求其他对象。</p>\n<h4>2.2.3 其他</h4>\n<p>支持客户/服务器模式、简单快速（请求方法简单Get和POST）、灵活（数据对象任意）</p>\n<h3>2.3 影响HTTP的因素</h3>\n<p>影响HTTP请求的因素：</p>\n<ol>\n<li>带宽<br>\n好像只要上网这个因素是一直都有的。。。即使再快的网络，也会有偶尔网络慢的时候。。。</li>\n<li>延迟<br>\n（1） 浏览器阻塞<br>\n一个浏览器对于同一个域名，<strong>同时</strong>只能有4个链接（根据不同浏览器），如果超了后面的会被阻塞。<br>\n常用浏览器阻塞数量看下图。</li>\n</ol>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226081508.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>（2） DNS查询<br>\n浏览器建立连接是需要知道服务器的IP的，DNS用来将域名解析为IP地址，这个可以通过刷新DNS缓存来加快速度。<br>\n（3） 建立连接<br>\n由之前第一章的就可以看出，HTTP是基于TCP协议的，即使网络、浏览器再快也要进行TCP的三次握手，在高延迟的场景下影响比较明显，慢启动则对文件请求影响较大。</p>\n<h4>2.4 缺陷</h4>\n<ol>\n<li>耗时：传输数据每次都要建立连接；</li>\n<li>不安全：HTTP是明文传输的，只要在路由器或者交换机上截取，所有东西（账号密码）都是可见的；</li>\n<li>Header内容过大：通常，客户端的请求header变化较小，但是每次都要携带大量的header信息，导致传输成本增大；</li>\n<li>keepalive压力过大：持久连接虽然有一点的优点，但同时也会给服务器造成大量的性能压力，特别是传输图片的时候。</li>\n</ol>\n<p>BTW：明文传输有多危险，可以去试试，下面是某个政府网站，采用wireshark抓包，身份证、电话号码、住址什么的全暴露出来，所以，，，只要在路由器做点小动作，你的信息是全部能拿得到的，毕竟政府。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171224044825.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>由于涉及的隐私太多，打了马赛克</p>\n<h2>三、HTTPS</h2>\n<p>由于HTTP报文的不安全性，网景在1994年就创建了HTTPS，并用在浏览器中。最初HTTPS是和SSL一起使用，然后演化为TLS。SSL／TLS在OSI模型中都是表示层的协议。SSL使 用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。</p>\n<h3>3.1 SSL/TLS</h3>\n<p>SSL(Secure Sockets Layer)，简称安全套接入层，最初由上世纪90年代由网景公司设计。开启 SSL 会增加内存、CPU、网络带宽的开销，后二者跟你使用的 cipher suite 密切相关，其中参数很多，很难一概而论。开启 SSL 的前提是你的 cert 和 key 必须放在 TCP endpoint，你是否信得过那台设备。<br>\nTLS(Transport Layer Security)，简称安全传输层协议，该协议由两层组成： TLS 记录协议（TLS Record）和 TLS 握手协议（TLS Handshake）。较低的层为 TLS 记录协议，位于某个可靠的传输协议（例如 TCP）上面，与具体的应用无关，所以，一般把TLS协议归为传输层安全协议。<br>\n由于本人在加密算法上面知识匮乏，就不误人子弟了，有兴趣可以看看百度百科里的资料，<a href=\"%5BSSL%5D%EF%BC%88https://baike.baidu.com/item/ssl/320778?fr=aladdin\">SSL</a>,<a href=\"https://baike.baidu.com/item/TLS\" target=\"_blank\" rel=\"noopener noreferrer\">TLS</a></p>\n<h3>3.2 SPDY</h3>\n<p>2012年google提出了SPDY的方案，大家才开始从正面看待和解决老版本HTTP协议本身的问题，SPDY可以说是综合了HTTPS和HTTP两者有点于一体的传输协议，主要解决：<br>\n<strong>降低延迟</strong>，针对HTTP高延迟的问题，SPDY优雅的采取了多路复用（multiplexing）。多路复用通过多个请求stream共享一个tcp连接的方式，解决了HOL blocking的问题，降低了延迟同时提高了带宽的利用率。<br>\n<strong>请求优先级（request prioritization）</strong>。多路复用带来一个新的问题是，在连接共享的基础之上有可能会导致关键请求被阻塞。SPDY允许给每个request设置优先级，这样重要的请求就会优先得到响应。比如浏览器加载首页，首页的html内容应该优先展示，之后才是各种静态资源文件，脚本文件等加载，这样可以保证用户能第一时间看到网页内容。<br>\n<strong>header压缩</strong>。前面提到HTTP1.x的header很多时候都是重复多余的。选择合适的压缩算法可以减小包的大小和数量。<br>\n基于HTTPS的加密协议传输，大大提高了传输数据的可靠性。<br>\n<strong>服务端推送（server push）</strong>，采用了SPDY的网页，例如我的网页有一个sytle.css的请求，在客户端收到sytle.css数据的同时，服务端会将sytle.js的文件推送给客户端，当客户端再次尝试获取sytle.js时就可以直接从缓存中获取到，不用再发请求了。SPDY构成图。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226042016.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>3.3 HTTPS报文分析</h3>\n<p>跟之前的报文分析一样，我们使用wireshark来抓包分析，以在百度上搜索点东西为例。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226044521.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>192.168.1.103为本地电脑的ip地址，14.215.177.39为百度服务器地址。下面是步骤：</p>\n<ol>\n<li>客户端通过发送 Client Hello 报文开始 SSL 通信。报文中包含客户端支持的 SSL 的指定版本、加密组件（Cipher Suite）列表（所使用的加密算法及密钥长度等）。</li>\n<li>服务器可进行 SSL 通信时，会以 Server Hello 报文作为应答。和客户端一样，在报文中包含 SSL 版本以及加密组件。服务器的加密组件内容是从接收到的客户端加密组件内筛选出来的。之后服务器发送 Certificate 报文。报文中包含公开密钥证书。最后服务器发送 Server Hello Done 报文通知客户端，最初阶段的SSL握手协商部分结束。</li>\n<li>SSL 第一次握手结束之后，客户端以 Client Key Exchange 报文作为回应。接着客户端继续发送 Change Cipher Spec 报文。该报文会提示服务器，在此报文之后的通信会采用 Pre-master secret 密钥加密。客户端发送 Finished 报文。该报文包含连接至今全部报文的整体校验值。</li>\n<li>服务器同样发送 Change Cipher Spec 报文。 服务器同样发送 Finished 报文。</li>\n<li>服务器和客户端的 Finished 报文交换完毕之后，SSL 连接就算建立完成。当然，通信会受到 SSL 的保护。从此处开始进行应用层协议的通信，即发送 HTTP请求。 应用层协议通信，即发送 HTTP 响应。<br>\n<strong>当然，用一张图更容易解释</strong><br>\n简单地说就是下面。</li>\n</ol>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226044137.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>当我们追踪流的数据的时候，可以看到，基本上都是乱码，经过加密，数据是看不到，如果需要在wireshark上看到，则需要在wireshark中配置ssl。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226045845.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>3.4 HTTPS全站化</h3>\n<p>现今，感觉只要和商业利益有关的，就不得不涉及到加密这类东西。淘宝、京东、唯品会这些电商可谓是最早推行全站https的，这类电商是离用户金钱最近的企业。截止今年底，基本所有商业网站也基本实现了HTTPS。。。。至于小站点，比如个人网站，玩玩还是可以的。如果一个网站需要由HTTP全部变为HTTPS，那么需要关注下面几点：</p>\n<ol>\n<li>CA证书，大部分证书都是需要收费的，当然，自己在服务器上用openssl也可以，不过浏览器会提示当前私密连接不安全这个警告，普通人看到这种信息是不会继续浏览的，所以，想使用HTTPS，可以使用<a href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Let's Encrypt</a>，由谷歌等公司推行。</li>\n<li>HTTPS性能优化，SSL握手，HTTPS 对速度会有一定程度的降低，但是只要经过合理优化和部署，HTTPS 对速度的影响完全可以接受。</li>\n<li>CPU计算压力，HTTPS中大量的秘钥算法计算，对CPU的压力可想而知。<br>\n至于我自己的<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">个人网站</a>，之前实现了https，用的免费证书，但是由于HTTPS下的网站，所有子链都要使用HTTPS，使用了七牛云的CDN，如果要使用HTTPS加速，是要收费的，所以只能放弃。。。</li>\n</ol>\n<h2>四、HTTP2.0</h2>\n<p>HTTP2.0，相较于HTTP1.x，大幅度的提升了web性能。在与HTTP/1.1完全语义兼容的基础上，进一步减少了网络延迟和传输的安全性。HTTP2.0可以说是SPDY的升级版（基于SPDY设计的），但是依然存在一些不同点：HTTP2.0支持明文传输，而SPDY强制使用HTTPS；HTTP2.0消息头的压缩算法采用HPACK，而非SPDY采用的DEFLATE。</p>\n<h3>4.1 历史</h3>\n<p>HTTP 2.0在2013年8月进行首次合作共事性测试。在开放互联网上HTTP 2.0将只用于<a href=\"https://xn--ses554g\" target=\"_blank\" rel=\"noopener noreferrer\">https://网址</a>，而 <a href=\"http://xn--HTTP-9s6ft42bo8hxo6cslszby1e/1%EF%BC%8C%E7%9B%AE%E7%9A%84%E6%98%AF%E5%9C%A8%E5%BC%80%E6%94%BE%E4%BA%92%E8%81%94%E7%BD%91%E4%B8%8A%E5%A2%9E%E5%8A%A0%E4%BD%BF%E7%94%A8%E5%8A%A0%E5%AF%86%E6%8A%80%E6%9C%AF%EF%BC%8C%E4%BB%A5%E6%8F%90%E4%BE%9B%E5%BC%BA%E6%9C%89%E5%8A%9B%E7%9A%84%E4%BF%9D%E6%8A%A4%E5%8E%BB%E9%81%8F%E5%88%B6%E4%B8%BB%E5%8A%A8%E6%94%BB%E5%87%BB%E3%80%82HTTP\" target=\"_blank\" rel=\"noopener noreferrer\">http://网址将继续使用HTTP/1，目的是在开放互联网上增加使用加密技术，以提供强有力的保护去遏制主动攻击。HTTP</a> 2.0是在SPDY（An experimental protocol for a faster web, The Chromium Projects）基础上形成的下一代互联网通信协议。HTTP/2 的目的是通过支持请求与响应的多路复用来较少延迟，通过压缩HTTPS首部字段将协议开销降低，同时增加请求优先级和服务器端推送的支持。</p>\n<h3>4.2 HTTP2.0新特性</h3>\n<p>相较于HTTP1.1，HTTP2.0的主要优点有采用二进制帧封装，传输变成多路复用，流量控制算法优化，服务器端推送，首部压缩，优先级等特点。</p>\n<h4>4.2.1 二进制帧</h4>\n<p>HTTP1.x的解析是基于文本的，基于文本协议的格式解析存在天然缺陷，文本的表现形式有多样性，要做到健壮性考虑的场景必然很多。而HTTP/2会将所有传输的信息分割为更小的消息和帧，然后采用二进制的格式进行编码，HTTP1.x的头部信息会被封装到HEADER frame，而相应的Request Body则封装到DATA frame里面。不改动HTTP的语义，使用二进制编码，实现方便且健壮。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226103043.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h4>4.2.2 多路复用</h4>\n<p>所有的请求都是通过一个 TCP 连接并发完成。HTTP/1.x 虽然通过 pipeline 也能并发请求，但是多个请求之间的响应会被阻塞的，所以 pipeline 至今也没有被普及应用，而 HTTP/2 做到了真正的并发请求。同时，流还支持优先级和流量控制。当流并发时，就会涉及到流的优先级和依赖。即：HTTP2.0对于同一域名下所有请求都是基于流的，不管对于同一域名访问多少文件，也只建立一路连接。优先级高的流会被优先发送。图片请求的优先级要低于 CSS 和 SCRIPT，这个设计可以确保重要的东西可以被优先加载完。</p>\n<h4>4.2.3 流量控制</h4>\n<p>TCP协议通过sliding window的算法来做流量控制。发送方有个sending window，接收方有receive window。http2.0的flow control是类似receive window的做法，数据的接收方通过告知对方自己的flow window大小表明自己还能接收多少数据。只有Data类型的frame才有flow control的功能。对于flow control，如果接收方在flow window为零的情况下依然更多的frame，则会返回block类型的frame，这张场景一般表明http2.0的部署出了问题。</p>\n<h4>4.2.4 服务器端推送</h4>\n<p>服务器端的推送，就是服务器可以对一个客户端请求发送多个响应。除了对最初请求的响应外，服务器还可以额外向客户端推送资源，而无需客户端明确地请求。当浏览器请求一个html，服务器其实大概知道你是接下来要请求资源了，而不需要等待浏览器得到html后解析页面再发送资源请求。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226105514.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h4>4.2.5 首部压缩</h4>\n<p>HTTP 2.0 在客户端和服务器端使用“首部表”来跟踪和存储之前发送的键-值对，对于相同的数据，不再通过每次请求和响应发送;通信期间几乎不会改变的通用键-值对(用户代理、可接受的媒体类型,等等)只 需发送一次。事实上,如果请求中不包含首部(例如对同一资源的轮询请求),那么 首部开销就是零字节。此时所有首部都自动使用之前请求发送的首部。<br>\n如果首部发生变化了，那么只需要发送变化了数据在Headers帧里面，新增或修改的首部帧会被追加到“首部表”。首部表在 HTTP 2.0 的连接存续期内始终存在,由客户端和服务器共同渐进地更新 。本质上，当然是为了减少请求啦，通过多个js或css合并成一个文件，多张小图片拼合成Sprite图，可以让多个HTTP请求减少为一个，减少额外的协议开销，而提升性能。当然，一个HTTP的请求的body太大也是不合理的，有个度。文件的合并也会牺牲模块化和缓存粒度，可以把“稳定”的代码or 小图 合并为一个文件or一张Sprite，让其充分地缓存起来，从而区分开迭代快的文件。</p>\n<h3>4.3 HTTP1.1与HTTP2.0的对比</h3>\n<p>以访问<a href=\"https://http2.akamai.com/demo%E4%B8%BA%E4%BE%8B%E3%80%82\" target=\"_blank\" rel=\"noopener noreferrer\">https://http2.akamai.com/demo为例。</a></p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226051221.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>4.4 报文</h3>\n<p>访问<a href=\"https://http2.akamai.com/demo\" target=\"_blank\" rel=\"noopener noreferrer\">https://http2.akamai.com/demo</a>，谷歌浏览器的报文没有显示出协议，此处使用火狐浏览器。<br>\n响应头部分如下。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226071845.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>请求头如下。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226075106.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>采用淘宝网站为例，淘宝目前采用主站使用HTTP1.1，资源使用HTTP2.0，少些使用SPDY协议。目前也是业界比较流行的做法。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171226065216.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>参考</h2>\n<ol>\n<li><a href=\"https://www.guokr.com/post/114121\" target=\"_blank\" rel=\"noopener noreferrer\">HTTPS那些事</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/25935872\" target=\"_blank\" rel=\"noopener noreferrer\">如何搭建一个HTTP2.0的网站</a></li>\n<li><a href=\"https://www.zhihu.com/question/34074946\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP/2.0 相比1.0有哪些重大改进？</a></li>\n<li><a href=\"https://http2.akamai.com/demo\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP2.0 demo</a></li>\n<li><a href=\"https://www.cnblogs.com/wujiaolong/p/5172e1f7e9924644172b64cb2c41fc58.html\" target=\"_blank\" rel=\"noopener noreferrer\">Http、Https、Http2前身</a></li>\n<li><a href=\"http://network.51cto.com/art/201501/464513.htm\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP报文</a></li>\n<li><a href=\"https://www.cnblogs.com/wujiaolong/p/5172e1f7e9924644172b64cb2c41fc58.html\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP、HTTP2.0、SPDY、HTTPS 你应该知道的一些事</a></li>\n<li><a href=\"http://www.ituring.com.cn/book/tupubarticle/11134\" target=\"_blank\" rel=\"noopener noreferrer\">HTTPS权威指南</a></li>\n<li><a href=\"http://www.alloyteam.com/2015/03/http2-0-di-qi-miao-ri-chang/\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP2.0的奇妙日常</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000004553963\" target=\"_blank\" rel=\"noopener noreferrer\">curl 支持 HTTP2</a></li>\n<li><a href=\"http://velocity.oreilly.com.cn/2015/ppts/lizhenyu.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">淘宝HTTPS探索</a></li>\n<li><a href=\"http://blog.csdn.net/ituling/article/details/52541585\" target=\"_blank\" rel=\"noopener noreferrer\">HTTPS完全协议详解</a></li>\n</ol>\n<p>欢迎访问我的个人网站。<a href=\"https://wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://wenzhihuai.com</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20171224034237.png",
      "date_published": "2024-02-06T07:05:59.000Z",
      "date_modified": "2024-02-14T17:59:53.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "高性能高并发高可用的一些思考",
      "url": "http://www.wenzhihuai.com/java/%E9%AB%98%E6%80%A7%E8%83%BD%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83.html",
      "id": "http://www.wenzhihuai.com/java/%E9%AB%98%E6%80%A7%E8%83%BD%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83.html",
      "summary": "高性能高并发高可用的一些思考 TODO待补充 异步 Jmeter JProfiler 火焰图 curl -O https://arthas.aliyun.com/arthas-boot.jar java -jar arthas-boot.jar 内存火焰图 缓存 限流熔断 Kafka 序列化 参考 1.Java数据库高并发如何解决 java高并发三种解...",
      "content_html": "\n<p><em>TODO待补充</em></p>\n<h2>异步</h2>\n<h2>Jmeter</h2>\n<h2>JProfiler</h2>\n<h2>火焰图</h2>\n<p>curl -O <a href=\"https://arthas.aliyun.com/arthas-boot.jar\" target=\"_blank\" rel=\"noopener noreferrer\">https://arthas.aliyun.com/arthas-boot.jar</a><br>\njava -jar arthas-boot.jar</p>\n<p>内存火焰图</p>\n<h2>缓存</h2>\n<h2>限流熔断</h2>\n<h2>Kafka</h2>\n<h2>序列化</h2>\n<h2>参考</h2>\n<p>1.<a href=\"https://blog.51cto.com/u_12968/6494578\" target=\"_blank\" rel=\"noopener noreferrer\">Java数据库高并发如何解决 java高并发三种解决方法 转载</a><br>\n2.<a href=\"https://zhuanlan.zhihu.com/p/350633012\" target=\"_blank\" rel=\"noopener noreferrer\">Java多线程梳理之四_其他并发解决方案</a><br>\n3.<a href=\"https://zhuanlan.zhihu.com/p/58181957\" target=\"_blank\" rel=\"noopener noreferrer\">Java高并发之并发基础</a></p>\n",
      "date_published": "2024-02-03T17:57:14.000Z",
      "date_modified": "2024-03-10T14:39:30.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "友链地址",
      "url": "http://www.wenzhihuai.com/link/main.html",
      "id": "http://www.wenzhihuai.com/link/main.html",
      "summary": "友链地址",
      "content_html": "\n",
      "date_published": "2024-02-02T03:58:59.000Z",
      "date_modified": "2024-02-23T07:30:13.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "广州图书馆借阅抓取",
      "url": "http://www.wenzhihuai.com/interesting/%E5%B9%BF%E5%B7%9E%E5%9B%BE%E4%B9%A6%E9%A6%86%E5%80%9F%E9%98%85%E6%8A%93%E5%8F%96.html",
      "id": "http://www.wenzhihuai.com/interesting/%E5%B9%BF%E5%B7%9E%E5%9B%BE%E4%B9%A6%E9%A6%86%E5%80%9F%E9%98%85%E6%8A%93%E5%8F%96.html",
      "summary": "广州图书馆借阅抓取 欢迎访问我的个人网站，要是能在GitHub上对网站源码给个star就更好了。 搭建自己的网站的时候，想把自己读过借过的书都想记录一下，大学也做过自己学校的借书记录的爬取，但是数据库删掉了==，只保留一张截图。所以还是要好好珍惜自己阅读的日子吧，记录自己的借书记录——广州图书馆，现在代码已经放在服务器上定时运行，结果查看我的网站（关于...",
      "content_html": "\n<p>欢迎访问我的<a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">个人网站</a>，要是能在GitHub上对<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">网站源码</a>给个star就更好了。</p>\n<p>搭建自己的网站的时候，想把自己读过借过的书都想记录一下，大学也做过自己学校的借书记录的爬取，但是数据库删掉了==，只保留一张截图。所以还是要好好珍惜自己阅读的日子吧，记录自己的借书记录——<a href=\"http://www.gzlib.gov.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">广州图书馆</a>，现在代码已经放在服务器上定时运行，结果查看<a href=\"http://www.wenzhihuai.com/aboutme.html\" target=\"_blank\" rel=\"noopener noreferrer\">我的网站（关于我）页面</a>。整个代码采用HttpClient，存储放在MySql，定时使用Spring自带的Schedule，下面是抓取的过程。</p>\n<h3>1.页面跳转过程</h3>\n<p>一般都是进入首页<a href=\"http://www.gzlib.gov.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.gzlib.gov.cn/</a>，点击进登陆页面，然后输入账号密码。表面上看起来没什么特别之处，实际上模拟登陆的时候不仅仅是向链接post一个请求那么简单，得到的response要么跳回登陆页面，要么无限制重定向。</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171013042700.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<p>事实上，它做了单点登录，如下图，广州图书馆的网址为：<a href=\"http://www.gzlib.gov.cn\" target=\"_blank\" rel=\"noopener noreferrer\">www.gzlib.gov.cn</a>，而登陆的网址为：<a href=\"http://login.gzlib.gov.cn\" target=\"_blank\" rel=\"noopener noreferrer\">login.gzlib.gov.cn</a>。原理网上很多人都讲的很好了，可以看看这篇文章<a href=\"http://www.cnblogs.com/ywlaker/p/6113927.html\" target=\"_blank\" rel=\"noopener noreferrer\">SSO单点登录</a>。</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171013043304.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<h3>2.处理方法</h3>\n<p>解决办法不难，只要先模拟访问一下首页即可获取图书馆的session，python的获取代码如：session.get(\"<a href=\"http://www.gzlib.gov.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.gzlib.gov.cn/</a>\")，打印cookie之后如下：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">19E2DDED4FE7756AA9161A52737D6B8E</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> .gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">19E2DDED4FE7756AA9161A52737D6B8E</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> clientlanguage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">zh_CN</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>整个登陆抓取的流程如下：</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171014114353.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<p>即：<br>\n（1）用户先点击广州图书馆的首页，以获取改网址的session，然后点击登录界面，解析html，获取lt（自定义的参数，类似于验证码），以及单点登录服务器的session。<br>\n（2）向目标服务器（单点登录服务器）提交post请求，请求参数中包含username（用户名），password（密码），event（时间，默认为submit），lt（自定义请求参数），同时服务端还要验证的参数：refer（来源页面），host（主机信息），Content-Type（类型）。<br>\n（3）打印response，搜索你自己的名字，如果有则表示成功了，否则会跳转回登陆页面。<br>\n（4）利用cookie去访问其他页面，此处实现的是对借阅历史的抓取，所以访问的页面是：<a href=\"http://www.gzlib.gov.cn/member/historyLoanList.jspx%E3%80%82\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.gzlib.gov.cn/member/historyLoanList.jspx。</a></p>\n<p><strong>基本的模拟登陆和获取就是这些</strong>，之后还有对面html的解析，获取书名、书的索引等，然后封装成JavaBean，再之后便是保存入数据库。（去重没有做，不知道用什么方式比较好）</p>\n<h3>3.代码</h3>\n<p>3.1 Java中，一般用来提交http请求的大部分用的都是httpclient，首先，需要导入的httpclient相关的包：</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.apache.httpcomponents&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;httpclient&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;4.5.3&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.apache.httpcomponents&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;httpcore&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;4.4.7&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.2 构建声明全局变量——上下文管理器，其中context为上下文管理器</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> LibraryUtil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CloseableHttpClient</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> httpClient </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HttpClientContext</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> context </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CookieStore</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> cookieStore </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    static</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        context </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> HttpClientContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        cookieStore </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> BasicCookieStore</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 配置超时时间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        RequestConfig</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> requestConfig</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> RequestConfig</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">custom</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setConnectTimeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setSocketTimeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">6000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setConnectionRequestTimeout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">6000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 设置默认跳转以及存储cookie</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        httpClient </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> HttpClientBuilder</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setKeepAliveStrategy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> DefaultConnectionKeepAliveStrategy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">())</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setRedirectStrategy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> DefaultRedirectStrategy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setDefaultRequestConfig</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(requestConfig)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setDefaultCookieStore</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(cookieStore).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.3 声明一个get函数，其中header可自定义，此处不需要，但是保留着，做成一个通用的吧。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CloseableHttpResponse</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Header</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] header) throws IOException {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        HttpGet</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> httpget </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> HttpGet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(url)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (header </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> header</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            httpget</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setHeaders</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(header);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        CloseableHttpResponse</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> response </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> httpClient</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(httpget, context);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//context用于存储上下文</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.4 访问首页以获得session，服务器上会话是使用session存储的，本地浏览器使用的是cookie，只要本地不退出，那么使用本地的cookie来访问也是可以的，但是为了达到模拟登陆的效果，这里就不再阐述这种方式。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">CloseableHttpResponse</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> homeResponse </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http://www.gzlib.gov.cn/\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">homeResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>此时，如果打印cookie，可以看到目前的cookie如下：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">RequestsCookieJar[</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">&lt;Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">54702A995ECFC684B192A86467066F20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> .gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">54702A995ECFC684B192A86467066F20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> clientlanguage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">zh_CN</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;]&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.5 访问登陆页面，获取单点登录服务器之后的cookie，解析网页，获取自定义参数lt。这里的解析网页使用了Jsoup，语法和python中的BeautifulSoup中类似。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> loginURL </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"http://login.gzlib.gov.cn/sso-server/login?service=http%3A%2F%2Fwww.gzlib.gov.cn%2Flogin.jspx%3FreturnUrl%3Dhttp%253A%252F%252Fwww.gzlib.gov.cn%252F%26locale%3Dzh_CN&amp;appId=www.gzlib.gov.cn&amp;locale=zh_CN\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">CloseableHttpResponse</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> loginGetResponse </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(loginURL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> content </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> toString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(loginGetResponse)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> lt </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Jsoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(content).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"form\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"input[name=lt]\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">attr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">loginGetResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>此时，再次查看cookie，多了一个（<a href=\"http://www.gzlib.gov.cn/sso-server%EF%BC%89%EF%BC%9A\" target=\"_blank\" rel=\"noopener noreferrer\">www.gzlib.gov.cn/sso-server）：</a></p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">RequestsCookieJar[</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">&lt;Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">54702A995ECFC684B192A86467066F20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> .gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">54702A995ECFC684B192A86467066F20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> clientlanguage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">zh_CN</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">9918DDF929757B244456D4ECD2DAB2CB</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">/sso-server/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;]&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.6 声明一个post函数，用来提交post请求，其中提交的参数默认为</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> CloseableHttpResponse</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> postParam</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> parameters</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Header</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] headers)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            throws IOException {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(parameters);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        HttpPost</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> httpPost </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> HttpPost</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(url)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (headers </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> headers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Header</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> header </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> headers) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                httpPost</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">addHeader</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(header);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        List</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">NameValuePair</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> nvps </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> toNameValuePairList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(parameters)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        httpPost</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setEntity</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> UrlEncodedFormEntity</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(nvps, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"UTF-8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        CloseableHttpResponse</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> response </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> httpClient</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(httpPost, context);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.7 登陆成功后，如果没有声明returnurl，即登录链接为（<a href=\"http://login.gzlib.gov.cn/sso-server/login%EF%BC%89%EF%BC%8C%E9%82%A3%E4%B9%88%E5%8F%AA%E6%98%AF%E4%BC%9A%E6%98%BE%E7%A4%BA%E6%88%90%E5%8A%9F%E7%99%BB%E5%BD%95%E7%9A%84%E9%A1%B5%E9%9D%A2%EF%BC%9A\" target=\"_blank\" rel=\"noopener noreferrer\">http://login.gzlib.gov.cn/sso-server/login），那么只是会显示成功登录的页面：</a></p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171016090010.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<p>后台应该是定义了一个service用来进行链接跳转的，想要获取登录成功之后的跳转页面可修改service之后的链接，这里将保持原始状态。此时，查看cookie结果如下：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">RequestsCookieJar[</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">&lt;Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">54702A995ECFC684B192A86467066F20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> .gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">54702A995ECFC684B192A86467066F20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> clientlanguage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">zh_CN</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> CASTGC</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">TGT-198235-zkocmYyBP6c9G7EXjKyzgKR7I40QI4JBalTkrnr9U6ZkxuP6Tn</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">/sso-server</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;, </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">Cookie</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> JSESSIONID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">9918DDF929757B244456D4ECD2DAB2CB</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> for</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> www.gzlib.gov.cn</span><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">/sso-server/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;]&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中，出现CASTGC表明登陆成功了，可以使用该cookie来访问广州图书馆的其他页面，在python中是直接跳转到其他页面，而在java使用httpclient过程中，看到的并不是直接的跳转，而是一个302重定向，打印Header之后结果如下图：</p>\n<div align=\"center\">\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171010062602.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n</div>\n<p>认真研究一下链接，就会发现服务器相当于给了一张通用票ticket，即：可以使用该ticket访问任何页面，而returnUrl则是返回的页面。这里我们直接访问该重定向的url。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Header</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> header </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getHeaders</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Location\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">CloseableHttpResponse</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> home </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">header</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(),</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后打印页面，即可获取登陆之后跳回的首页。</p>\n<p>3.8 解析html<br>\n获取session并跳回首页之后，再访问<a href=\"http://www.gzlib.gov.cn/member/historyLoanList.jspx\" target=\"_blank\" rel=\"noopener noreferrer\">借阅历史页面</a>，然后对结果进行html解析，python中使用了BeautifulSoup，简单而又实用，java中的jsoup也是一个不错的选择。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> html </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getHTML</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Element</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> element </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Jsoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(html).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"table.jieyue-table\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"tbody\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Elements</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> trs </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> element</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"tr\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> trs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            Elements</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> tds </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> trs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(i).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"td\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">tds</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">text</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>输出结果：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">企业IT架构转型之道</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">大话Java性能优化</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">深入理解Hadoop</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">大话Java性能优化</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Java EE开发的颠覆者：Spring Boot实战</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">大型网站技术架构：核心原理与案例分析</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Java性能权威指南</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Akka入门与实践</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">高性能网站建设进阶指南：Web开发者性能优化最佳实践：Performance best practices for Web developers</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Java EE开发的颠覆者：Spring Boot实战</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">深入理解Hadoop</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">大话Java性能优化</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>点击查看<a href=\"https://github.com/Zephery/newblog/blob/master/src/main/java/com/myblog/util/LibraryUtil.java\" target=\"_blank\" rel=\"noopener noreferrer\">源码</a></p>\n<h2>总结</h2>\n<p>目前，改代码已经整合进<a href=\"http://www.wenzhihuai.com/aboutme.html\" target=\"_blank\" rel=\"noopener noreferrer\">个人网站</a>之中，每天定时抓取一次，但是仍有很多东西没有做（如分页、去重等），有兴趣的可以研究一下<a href=\"https://github.com/Zephery/newblog/blob/master/src/main/java/com/myblog/util/LibraryUtil.java\" target=\"_blank\" rel=\"noopener noreferrer\">源码</a>，要是能帮忙完善就更好了。感谢Thanks♪(･ω･)ﾉ。整个代码接近250行，当然...包括了注释，但是使用python之后，也不过25行=w=，这里贴一下python的源码吧。同时，欢迎大家访问我的<a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">个人网站</a>，也欢迎大家能给个<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">star</a>。</p>\n<div class=\"language-python line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"python\" data-title=\"python\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> urllib.parse</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> requests</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">from</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> bs4 </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> BeautifulSoup</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">session </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> requests.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">session</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">session.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http://www.gzlib.gov.cn/\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">session.headers.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">update</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    {</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Referer\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http://www.gzlib.gov.cn/member/historyLoanList.jspx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">     \"origin\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http://login.gzlib.gov.cn\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">     'Content-Type'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'application/x-www-form-urlencoded'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">     'host'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'www.gzlib.gov.cn'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">     'User-Agent'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">     }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">baseURL </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"http://login.gzlib.gov.cn/sso-server/login\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">soup </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\"> BeautifulSoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(session.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(baseURL).text, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"html.parser\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">lt </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> soup.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">select</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"form\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">find</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">attrs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'name'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'lt'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})[</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'value'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">postdict </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"username\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"你的身份证\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"password\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"密码（默认为身份证后6位）\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"_eventId\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"submit\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">            \"lt\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: lt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">postdata </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> urllib.parse.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">urlencode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(postdict)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">session.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">post</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(baseURL, postdata)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">print</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(session.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http://www.gzlib.gov.cn/member/historyLoanList.jspx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).text)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "image": "https://github-images.wenzhihuai.com/images/20171013042700.png",
      "date_published": "2024-01-30T06:37:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "AOP",
      "url": "http://www.wenzhihuai.com/java/SpringBoot/aop.html",
      "id": "http://www.wenzhihuai.com/java/SpringBoot/aop.html",
      "summary": "AOP 一、概述 在通常的开发过程中，我们调用的顺序通常是controller->service-dao，其中，service中包含着太多的业务逻辑，并且还要不断调用dao来实现自身的业务逻辑，经常会导致业务耗时过久，在aop出现之前，方式一般是在函数中开始写一个startTime，结尾再写一个endTime来查看执行该函数的耗时，过多的使用此类方式会...",
      "content_html": "\n<h2>一、概述</h2>\n<p>在通常的开发过程中，我们调用的顺序通常是controller-&gt;service-dao，其中，service中包含着太多的业务逻辑，并且还要不断调用dao来实现自身的业务逻辑，经常会导致业务耗时过久，在aop出现之前，方式一般是在函数中开始写一个startTime，结尾再写一个endTime来查看执行该函数的耗时，过多的使用此类方式会导致代码的耦合性太高，不利于管理，于是，AOP（面向切面）出现了。AOP关注的是横向的，而OOP的是纵向。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180118085015.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>Spring自2.0版本开始采用@AspectJ注解非常容易的定义一个切面。@AspectJ注解使用AspectJ切点表达式语法进行切点定义，可以通过切点函数、运算符、通配符等高级功能进行切点定义，拥有强大的连接点描述能力。</p>\n<h3>1.1 特点</h3>\n<p>AOP（Aspect Oriented Programming）面向切面编程，通过预编译方式和运行期动态代理实现程序功能的横向多模块统一控制的一种技术。AOP是OOP的补充，是Spring框架中的一个重要内容。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。AOP可以分为静态织入与动态织入，静态织入即在编译前将需织入内容写入目标模块中，这样成本非常高。动态织入则不需要改变目标模块。Spring框架实现了AOP，使用注解配置完成AOP比使用XML配置要更加方便与直观。</p>\n<h3>1.2 AOP概述</h3>\n<p><strong>Aspect</strong>:一个模块用来关注多个类的切面。在JAVA EE的应用中，事务是AOP的典型例子。<br>\n<strong>Joinpoint(连接点)</strong>:所谓连接点是指那些被拦截到的点。在spring中,这些点指的是方法,因为spring只支持方法类型的连接点.<br>\n<strong>Pointcut(切入点)</strong>:所谓切入点是指我们要对哪些Joinpoint进行拦截的定义.<br>\n<strong>Advice(通知/增强)</strong>:所谓通知是指拦截到Joinpoint之后所要做的事情就是通知.通知分为前置通知,后置通知,异常通知,最终通知,环绕通知(切面要完成的功能)<br>\n<strong>Introduction(引介)</strong>:引介是一种特殊的通知在不修改类代码的前提下, Introduction可以在运行期为类动态地添加一些方法或Field.<br>\n<strong>Target(目标对象)</strong>:代理的目标对象<br>\n<strong>Weaving(织入)</strong>:是指把增强应用到目标对象来创建新的代理对象的过程.spring采用动态代理织入，而AspectJ采用编译期织入和类装在期织入.<br>\n<strong>Proxy（代理）</strong>:一个类被AOP织入增强后，就产生一个结果代理类Aspect(切面): 是切入点和通知（引介）的结合</p>\n<h2>二、Spring中的AOP</h2>\n<p>Spring实现AOP主要是由IOC容器来负责生成、管理的。其创建的方式有两种：</p>\n<ol>\n<li>默认使用Java动态代理来创建AOP代理；</li>\n<li>当需要代理的类不是代理接口的时候，Spring会切换为使用CGLIB代理，也可强制使用CGLIB。高版本的Spring会自动选择是使用动态代理还是CGLIB生成代理内容，当然我们也可以强制使用CGLIB生成代理，那就是<a href=\"aop:config\" target=\"_blank\" rel=\"noopener noreferrer\">aop:config</a>里面有一个\"proxy-target-class\"属性，这个属性值如果被设置为true，那么基于类的代理将起作用。</li>\n</ol>\n<h3>2.1 AspectJ支持5种类型的通知注解：</h3>\n<p>[1] Before：前置通知，在方法执行之前执行<br>\n[2] After：后置通知，在方法执行之后执行<br>\n[3] AfterRunning：返回通知，在方法返回结果之后执行<br>\n[4] AfterThrowing：异常通知，在方法抛出异常之后执行<br>\n[5] Around：环绕通知，围绕着方法执行<br>\n其中，环绕通知是最常见的一种通知注解，特别是在缓存的使用中，例如：Spring-Cache中的使用，在service的方法中添加一个cache的注解，通过AOP来拦截，如果缓存中已经存在，则直接返回结果，如果没有，再进行service的访问。</p>\n<h3>2.2 Spring提供了4种实现AOP的方式：</h3>\n<ol>\n<li>经典的基于代理的AOP</li>\n<li>@AspectJ注解驱动的切面</li>\n<li>纯POJO切面</li>\n<li>注入式AspectJ切面</li>\n</ol>\n<h2>三、原理概述</h2>\n<p>Spring AOP的实现原理是基于动态织入的动态代理技术，而AspectJ则是静态织入，而动态代理技术又分为Java JDK动态代理和CGLIB动态代理，前者是基于反射技术的实现，后者是基于继承的机制实现。Spring AOP 在使用时机上也进行自动化调整，当有接口时会自动选择JDK动态代理技术，如果没有则选择CGLIB技术，当然Spring AOP的底层实现并没有这么简单，为更简便生成代理对象，Spring AOP 内部实现了一个专注于生成代理对象的工厂类，这样就避免了大量的手动编码，这点也是十分人性化的，但最核心的还是动态代理技术。从性能上来说，Spring AOP 虽然无需特殊编译器协助，但性能上并不优于AspectJ的静态织入，这点了解一下即可。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180204060518.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>具体的原理请看<a href=\"http://blog.csdn.net/javazejian/article/details/56267036/\" target=\"_blank\" rel=\"noopener noreferrer\">Spring AOP</a></p>\n<h2>四、使用</h2>\n<p>网上看别人写了很多入门的例子，自己就不再阐述了，毕竟自己还是菜，下面是关于AOP入门的资料：<br>\n<a href=\"http://www.cnblogs.com/xrq730/p/7003082.html\" target=\"_blank\" rel=\"noopener noreferrer\">我们为什么要使用AOP？</a><br>\n<a href=\"http://blog.csdn.net/u014292162/article/details/52504633\" target=\"_blank\" rel=\"noopener noreferrer\">Spring中AOP的实现</a><br>\n<a href=\"http://blog.csdn.net/javazejian/article/details/56267036/\" target=\"_blank\" rel=\"noopener noreferrer\">关于AOP</a></p>\n<p>下面是自己在<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">个人网站</a>中的使用，主要是用来统计一个方法的执行消耗了多少时间，需要引入aopalliance.jar、aspectj.weaver.jar 和 spring-aspects.jar的包。</p>\n<h4>4.1 在Spring MVC中开启AOP</h4>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    &lt;!--自动扫描自定义切面--&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">aop:aspectj-autoproxy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>4.2 定义一个切面</h4>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> * 可以使用 @Order 注解指定切面的优先级, 值越小优先级越高</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@Order(2)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@Aspect</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@Component</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">public class TimeInterceptor {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>4.3 声明一个切入点</h4>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @Pointcut(\"execution(* com.myblog.service.impl.BlogServiceImpl.*(..))\")</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    public void pointcut() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>4.4 声明一个前置切点</h4>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @Before(\"pointcut()\")</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    public void before(JoinPoint jp) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        logger.info(jp.getSignature().getName());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        logger.info(\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "image": "https://github-images.wenzhihuai.com/images/20180118085015.png",
      "date_published": "2024-01-30T06:37:05.000Z",
      "date_modified": "2024-01-30T06:53:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Spring Boot Prometheus使用",
      "url": "http://www.wenzhihuai.com/java/SpringBoot/Spring%20Boot%20Prometheus%E4%BD%BF%E7%94%A8.html",
      "id": "http://www.wenzhihuai.com/java/SpringBoot/Spring%20Boot%20Prometheus%E4%BD%BF%E7%94%A8.html",
      "summary": "Spring Boot Prometheus使用 一、基本原理 Prometheus的基本原理是通过HTTP协议周期性抓取被监控组件的状态，任意组件只要提供对应的HTTP接口就可以接入监控。不需要任何SDK或者其他的集成过程。这样做非常适合做虚拟化环境监控系统，比如VM、Docker、Kubernetes等。输出被监控组件信息的HTTP接口被叫做exp...",
      "content_html": "\n<h1>一、基本原理</h1>\n<p>Prometheus的基本原理是通过HTTP协议周期性抓取被监控组件的状态，任意组件只要提供对应的HTTP接口就可以接入监控。不需要任何SDK或者其他的集成过程。这样做非常适合做虚拟化环境监控系统，比如VM、Docker、Kubernetes等。输出被监控组件信息的HTTP接口被叫做exporter 。目前互联网公司常用的组件大部分都有exporter可以直接使用，比如Varnish、Haproxy、Nginx、MySQL、Linux系统信息(包括磁盘、内存、CPU、网络等等)。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240127202704612.png\" alt=\"image-20240127202704612\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240127202704612</figcaption></figure>\n<h1>二、具体过程</h1>\n<ul>\n<li>Prometheus Daemon负责定时去目标上抓取metrics(指标)数据，每个抓取目标需要暴露一个http服务的接口给它定时抓取。Prometheus支持通过配置文件、文本文件、Zookeeper、Consul、DNS SRV Lookup等方式指定抓取目标。Prometheus采用PULL的方式进行监控，即服务器可以直接通过目标PULL数据或者间接地通过中间网关来Push数据。</li>\n<li>Prometheus在本地存储抓取的所有数据，并通过一定规则进行清理和整理数据，并把得到的结果存储到新的时间序列中。</li>\n<li>Prometheus通过PromQL和其他API可视化地展示收集的数据。Prometheus支持很多方式的图表可视化，例如Grafana、自带的Promdash以及自身提供的模版引擎等等。Prometheus还提供HTTP API的查询方式，自定义所需要的输出。</li>\n<li>PushGateway支持Client主动推送metrics到PushGateway，而Prometheus只是定时去Gateway上抓取数据。</li>\n<li>Alertmanager是独立于Prometheus的一个组件，可以支持Prometheus的查询语句，提供十分灵活的报警方式。</li>\n</ul>\n<h1>三、pull模式（prometheus主动拉取）</h1>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>&lt;dependency&gt;</span></span>\n<span class=\"line\"><span>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>\n<span class=\"line\"><span>    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span></span>\n<span class=\"line\"><span>&lt;/dependency&gt;</span></span>\n<span class=\"line\"><span>&lt;dependency&gt;</span></span>\n<span class=\"line\"><span>    &lt;groupId&gt;io.micrometer&lt;/groupId&gt;</span></span>\n<span class=\"line\"><span>    &lt;artifactId&gt;micrometer-registry-prometheus&lt;/artifactId&gt;</span></span>\n<span class=\"line\"><span>&lt;/dependency&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-yaml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yaml\" data-title=\"yaml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">management</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  endpoints</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    web</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      exposure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        include</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">prometheus</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  metrics</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    tags</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      application</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${spring.application.name}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>之后查看/actuator/prometheus就可以看到</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240127202722776.png\" alt=\"image-20240127202722776\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240127202722776</figcaption></figure>\n<p>腾讯云上面有个prometheus的服务，接入云原生监控还要配置一个Servicemonitor、PodMonitor等，详细的可以访问腾讯云的官方文档（<a href=\"https://cloud.tencent.com/document/product/1416/56031%EF%BC%89\" target=\"_blank\" rel=\"noopener noreferrer\">https://cloud.tencent.com/document/product/1416/56031）</a></p>\n<h1>四、主动上报(pushgateway)</h1>\n<p>大部分现实场景中，如果每增加一个服务，都需要开发去配置的话，不仅沟通成本高，也导致因配错而起的运维成本很高，采用主动上报方式比较简单，方便规避一些问题。</p>\n<h2>（1）引入库</h2>\n<p>主动上报除了需要引入spring-boot-starter-actuator、micrometer-registry-prometheus，还要引入simpleclient_pushgateway，三个都是必须的，少一个都不行。</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.springframework.boot&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;spring-boot-starter-actuator&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;io.micrometer&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;micrometer-registry-prometheus&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;io.prometheus&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;simpleclient_pushgateway&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>（2）修改配置文件</h2>\n<p>之后，为了安全考虑，需要把endpoints的所有信息都关闭掉，免得被泄露出去。</p>\n<div class=\"language-yaml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yaml\" data-title=\"yaml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">management</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  endpoints</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    #一定要设为false，防止不小心暴露/actuator相关接口触发安全工单</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    enabled-by-default</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  metrics</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    tags</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      #要设置应用的名称，否则会聚合到别的项目里面去</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      application</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${spring.application.name}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    export</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      prometheus</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        pushgateway</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          base-url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">http://xxxxx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          push-rate</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">20s</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          job</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${spring.application.name}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          enabled</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          username</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">xxxx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          password</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">xxx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          grouping-key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            instance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${HOSTNAME}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>最好多看一眼/actuator，确认一下是否已经关闭endpoints</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240127202830908.png\" alt=\"image-20240127202830908\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240127202830908</figcaption></figure>\n<h2>（3）抓包看一下metrics（可跳过）</h2>\n<p>大致看了下 simpleclient_pushgateway和spring-boot-starter-actuator的源码，并没有对http的请求发起日志，调试的时候都不知道是不是正常上报过去了，只能采取抓包来研究下。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240127202853218.png\" alt=\"image-20240127202853218\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240127202853218</figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240127202944264.png\" alt=\"image-20240127202944264\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240127202944264</figcaption></figure>\n<p>平均间隔5s左右，符合配置文件里的设置。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240127203001776.png\" alt=\"image-20240127203001776\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240127203001776</figcaption></figure>\n<h1>五、Grafana</h1>\n<p>对于java来说，常用的dashboard是<a href=\"https://grafana.com/grafana/dashboards/4701%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%A8spring\" target=\"_blank\" rel=\"noopener noreferrer\">https://grafana.com/grafana/dashboards/4701，也可以用spring</a> boot的<a href=\"https://grafana.com/grafana/dashboards/6756\" target=\"_blank\" rel=\"noopener noreferrer\">https://grafana.com/grafana/dashboards/6756</a></p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240127203024477.png\" alt=\"image-20240127203024477\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240127203024477</figcaption></figure>\n<h1>六、自定义监控上报</h1>\n<p>除了通用的封装好的指标之外，也可以自定义prometheus的监控。对于Spring Boot来说，只要如下代码即可实现：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Resource</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> MeterRegistry</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> meterRegistry</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> report</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        meterRegistry</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">counter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"指标\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"tag的名称\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"tag的值\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">increment</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>也可以通过抓包来查看，以及在push-gateway上看到。</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/image-20240127202704612.png",
      "date_published": "2024-01-27T13:52:01.000Z",
      "date_modified": "2024-01-27T13:52:01.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "小程序",
      "url": "http://www.wenzhihuai.com/about-the-author/works/%E4%B8%AA%E4%BA%BA%E4%BD%9C%E5%93%81.html",
      "id": "http://www.wenzhihuai.com/about-the-author/works/%E4%B8%AA%E4%BA%BA%E4%BD%9C%E5%93%81.html",
      "summary": "小程序 助眠风扇助眠风扇 MyTesMateMyTesMate",
      "content_html": "\n<figure><img src=\"https://github-images.wenzhihuai.com/github/gh_89030789780b_344.jpg\" alt=\"助眠风扇\" tabindex=\"0\" loading=\"lazy\"><figcaption>助眠风扇</figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/github/gh_068db871b3fd_344.jpg\" alt=\"MyTesMate\" tabindex=\"0\" loading=\"lazy\"><figcaption>MyTesMate</figcaption></figure>\n",
      "image": "https://github-images.wenzhihuai.com/github/gh_89030789780b_344.jpg",
      "date_published": "2024-01-27T09:51:43.000Z",
      "date_modified": "2024-01-27T09:51:43.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Webflux",
      "url": "http://www.wenzhihuai.com/java/SpringBoot/webflux.html",
      "id": "http://www.wenzhihuai.com/java/SpringBoot/webflux.html",
      "summary": "Webflux 1.Servlet 3.1就已经支持异步非阻塞，为什么要用webflux? ChatGpt: Servlet 3.1 和 WebFlux 虽然底层都使用了 Java 的 NIO（非阻塞 IO），但是他们的编程模型和如何使用 NIO 是不同的，这也是导致他们性能差异的原因。 Servlet 3.1：虽然 Servlet 3.1 支持非阻塞...",
      "content_html": "\n<h3>1.Servlet 3.1就已经支持异步非阻塞，为什么要用webflux?</h3>\n<p>ChatGpt:<br>\nServlet 3.1 和 WebFlux 虽然底层都使用了 Java 的 NIO（非阻塞 IO），但是他们的编程模型和如何使用 NIO 是不同的，这也是导致他们性能差异的原因。</p>\n<p>Servlet 3.1：虽然 Servlet 3.1 支持非阻塞 IO，但是它的 API 设计仍然是基于传统的阻塞模型，这意味着每个请求通常会在一个单独的线程中处理，直到请求处理完成并返回响应。这种模型在并发请求数量较少的情况下工作得很好，但是在高并发的情况下，可能会因为线程数量过多而导致资源消耗过大，性能下降。</p>\n<p>WebFlux：WebFlux 是基于反应式编程模型的，它使用少量的线程（通常与 CPU 核心数相同）和事件驱动的方式来处理大量的并发请求。这种模型可以更有效地利用系统资源，特别是在高并发的情况下。此外，WebFlux 还支持 backpressure（背压），可以更好地处理流式数据。</p>\n<p>所以，虽然 Servlet 3.1 和 WebFlux 底层都使用了 NIO，但是由于他们的编程模型和如何使用 NIO 的方式不同，WebFlux 在处理高并发、流式数据等场景时，可能会有更好的性能。但是，这并不意味着 WebFlux 在所有情况下都比 Servlet 3.1 有更好的性能，具体还需要根据应用的实际需求和场景来选择合适的技术。</p>\n<h3>webflux和springboot虚拟线程对比</h3>\n<p>ChatGpt：<br>\nWebFlux 和 Spring Boot 使用虚拟线程（也称为纤程或轻量级线程）是两种不同的并发模型，它们各自有各自的优点和适用场景。</p>\n<p>WebFlux：WebFlux 是 Spring 5 的一部分，它提供了一个基于反应式编程模型的非阻塞 Web 框架。WebFlux 使用少量的线程和事件驱动的方式来处理大量的并发请求，这种模型可以更有效地利用系统资源，特别是在高并发的情况下。此外，WebFlux 还支持 backpressure（背压），可以更好地处理流式数据。</p>\n<p>Spring Boot 使用虚拟线程：Java 在其后续版本（如 Java 16）中引入了虚拟线程（Project Loom）的概念，这是一种新的并发模型，它可以创建大量的虚拟线程，每个虚拟线程都有自己的调用栈，但是它们在操作系统级别并不是真正的线程，因此创建和切换的成本更低。虚拟线程使得开发者可以使用传统的阻塞式编程模型，但是在运行时，这些阻塞操作并不会阻塞真正的物理线程，从而可以处理大量的并发请求。</p>\n<p>WebFlux 和 Spring Boot 使用虚拟线程的主要区别在于它们的编程模型：WebFlux 使用反应式编程模型，而虚拟线程则使用更传统的阻塞式编程模型。虚拟线程的优点是编程模型更简单，更接近传统的 Java 开发方式，但是它需要更新的 Java 版本，并且目前还在实验阶段。WebFlux 的优点是它可以在任何支持 Java 8 或更高版本的环境中运行，但是它需要开发者熟悉反应式编程模型。</p>\n<p>至于哪种模型的性能更好，这取决于具体的应用场景和负载。在某些情况下，WebFlux 可能会有更好的性能，而在其他情况下，使用虚拟线程可能会更有效。</p>\n",
      "date_published": "2024-01-27T09:51:43.000Z",
      "date_modified": "2024-01-27T09:51:43.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "StarCraft Ⅱ 人工智能教程",
      "url": "http://www.wenzhihuai.com/interesting/starcraft-ai.html",
      "id": "http://www.wenzhihuai.com/interesting/starcraft-ai.html",
      "summary": "StarCraft Ⅱ 人工智能教程 非深度学习人士，仅仅是兴趣驱动，可能有很多不对的地方，也欢迎大家指正。这里主要讲解如何将AI运行起来、机器人对战、人机对战、天梯上分等等，希望能对大家的人工智能工程道路上有所帮助。 一、其他的太抽象了，先讲人机对战吧 sc2的wiki资料很全，可以从这里下载并运行，目前人机对战只能在win下运行，这边特别强调一下的...",
      "content_html": "\n<p>非深度学习人士，仅仅是兴趣驱动，可能有很多不对的地方，也欢迎大家指正。这里主要讲解如何将AI运行起来、机器人对战、人机对战、天梯上分等等，希望能对大家的人工智能工程道路上有所帮助。</p>\n<h1>一、其他的太抽象了，先讲人机对战吧</h1>\n<p>sc2的<a href=\"https://sc2ai.net/wiki/human-vs-bot/\" target=\"_blank\" rel=\"noopener noreferrer\">wiki</a>资料很全，可以从这里下载并运行，目前人机对战只能在win下运行，这边特别强调一下的就是，需要以管理员身份运行，下面详细过程，翻译自 <a href=\"https://community.eschamp.com/t/probots-2021-season-1-human-vs-bot/256\" target=\"_blank\" rel=\"noopener noreferrer\">ProBots 2021 Season 1 - Human vs Bot</a>。</p>\n<p>1.安装星际争霸2，<a href=\"https://sc2.blizzard.cn/landing\" target=\"_blank\" rel=\"noopener noreferrer\">地址</a>，至于要不要下载国际服，似乎没有必要<br>\n2.下载<a href=\"https://www.dropbox.com/s/9ffo2zjxi61dk5a/ProBots%20vs%20Humans_2021_S1.zip?dl=0\" target=\"_blank\" rel=\"noopener noreferrer\">ProBots vs Humans.Zip</a><br>\n3.解压，附带了地图，主要是sc2aiapp<br>\n<img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223200207-5235039.png\" alt=\"\" loading=\"lazy\"></p>\n<p>4.可选，下载相关地图，可以从<a href=\"https://sc2ai.net/wiki/maps/\" target=\"_blank\" rel=\"noopener noreferrer\">竞技场</a>里下，需要放到星际争霸2的目录下，mac的是/Applications/StarCraft II/Maps<br>\n5.打开步骤2的目录<br>\n6.打开sc2aiapp，打开的时候有可能报错：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223205053-593748265.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>右键sc2aiapp，以管理员身份运行即可，现在不让注册了，直接continue without login</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223209872-1962720900.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223216057-996863489.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>7.全屏快捷键，Alt + Enter，进行对战</p>\n<p>我这录制了个我对战的视频，<a href=\"https://www.bilibili.com/video/BV1CL4y1p71M?share_source=copy_web\" target=\"_blank\" rel=\"noopener noreferrer\">bilibili</a>，感觉AI在对战里很容易只有一样打法，据说是强化训练后的最优选导致的，这个也不知怎么整，个人感觉MicroMachine这个AI打法稍微多样，可以多和它对战下。</p>\n<h1>二、AI天梯</h1>\n<p>目前没有看到什么办法让暴雪允许AI在实际的天梯上进行运行，但社区搞了个专门的AI天梯，<a href=\"https://sc2ai.net/\" target=\"_blank\" rel=\"noopener noreferrer\">sc2ai</a>，可以将代码上传到里面进行对战，实时流我没看到，对战完后可以下载replay复盘。下面讲下如何上传代码进行对战。<br>\n1.第一步肯定是先要注册登录<br>\n2.u</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223227654-1821240851.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>3.主要是这个Bot zip，基本的代码架构还是要固定的</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223232318-1161227676.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>具体可以看下<a href=\"https://github.com/Zephery/sc2-api-simple-bot.git\" target=\"_blank\" rel=\"noopener noreferrer\">sc2-api-simple-bot</a>这里，记得把它打包即可<br>\n4.成功之后，即可从profile里看到自己的机器人<br>\n<img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223243665-397946151.png\" alt=\"\" loading=\"lazy\"></p>\n<p>5.此时，bot是不会进行比赛，需要参赛，点击Competitions，然后选择赛季<br>\n<img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223244870-738059998.png\" alt=\"\" loading=\"lazy\"></p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223250129-209699308.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>6.比赛是随机的放到队列里的，可能需要排队进行比赛，也可能主动申请和具体的机器人进行比赛，点击Request Match，进行申请比赛。<br>\n<img src=\"https://github-images.wenzhihuai.com/images/755525-20211220223256462-1602936807.png\" alt=\"\" loading=\"lazy\"></p>\n<p>7.慢慢等待，比赛结束之前都看不到结果的，也没有实时流进行查看的，结束之后就可以看到结果以及下载replay。其中arena会随机的进行一些比赛，也有可能是别人随机选的，一个bot一天大概能有50场比赛，arena也会提供统计，胜率、ELO（分数）等</p>\n<h1>Bot开发样例</h1>\n<p><a href=\"https://github.com/Zephery/sc2-api-simple-bot.git\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/sc2-api-simple-bot.git</a><br>\n<a href=\"https://community.eschamp.com/t/simple-starcraft-2-bot-template-to-get-started/155\" target=\"_blank\" rel=\"noopener noreferrer\">https://community.eschamp.com/t/simple-starcraft-2-bot-template-to-get-started/155</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/755525-20211220223200207-5235039.png",
      "date_published": "2024-01-26T16:53:43.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "自我介绍",
      "url": "http://www.wenzhihuai.com/about-the-author/personal-life/wewe.html",
      "id": "http://www.wenzhihuai.com/about-the-author/personal-life/wewe.html",
      "summary": "自我介绍 安安静静的开发，搞点好玩的。 硅谷硅谷",
      "content_html": "\n<p>安安静静的开发，搞点好玩的。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/webp.jpg\" alt=\"硅谷\" tabindex=\"0\" loading=\"lazy\"><figcaption>硅谷</figcaption></figure>\n",
      "image": "https://github-images.wenzhihuai.com/images/webp.jpg",
      "date_published": "2024-01-26T04:53:47.000Z",
      "date_modified": "2024-02-03T17:57:14.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "关于我",
      "url": "http://www.wenzhihuai.com/about-the-author/",
      "id": "http://www.wenzhihuai.com/about-the-author/",
      "summary": "关于我 留空",
      "content_html": "\n<p>留空</p>\n",
      "date_published": "2024-01-25T17:34:45.000Z",
      "date_modified": "2024-01-25T17:34:45.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Zookeeper",
      "url": "http://www.wenzhihuai.com/middleware/zookeeper/zookeeper.html",
      "id": "http://www.wenzhihuai.com/middleware/zookeeper/zookeeper.html",
      "summary": "Zookeeper 留空",
      "content_html": "\n<p>留空</p>\n",
      "date_published": "2024-01-25T17:34:45.000Z",
      "date_modified": "2024-01-25T17:34:45.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "微信公众号-chatgpt智能客服搭建",
      "url": "http://www.wenzhihuai.com/interesting/chatgpt.html",
      "id": "http://www.wenzhihuai.com/interesting/chatgpt.html",
      "summary": "微信公众号-chatgpt智能客服搭建 想体验的可以去微信上搜索【旅行的树】公众号。 一、ChatGPT注册 1.1 短信手机号申请 openai提供服务的区域，美国最好，这个解决办法是搞个翻墙，或者买一台美国的服务器更好。 国外邮箱，hotmail或者google最好，qq邮箱可能会对这些平台进行邮件过滤。 国外手机号，没有的话也可以去https:/...",
      "content_html": "\n<p>想体验的可以去微信上搜索【旅行的树】公众号。</p>\n<h2>一、ChatGPT注册</h2>\n<h3>1.1 短信手机号申请</h3>\n<p>openai提供服务的区域，美国最好，这个解决办法是搞个翻墙，或者买一台美国的服务器更好。</p>\n<p>国外邮箱，hotmail或者google最好，qq邮箱可能会对这些平台进行邮件过滤。</p>\n<p>国外手机号，没有的话也可以去<a href=\"https://sms-activate.org\" target=\"_blank\" rel=\"noopener noreferrer\">https://sms-activate.org</a>，费用大概需要1美元，这个网站记得也用国外邮箱注册，需要先充值，使用支付宝支付。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/vfh7kn.png\" alt=\"image-20230220172107296\" style=\"zoom:30%;\"></div>\n<p>之后再搜索框填openai进行下单购买即可。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/1620.png\" alt=\"img\" style=\"zoom:67%;\"></div>\n<h3>1.2 云服务器申请</h3>\n<p>openai在国内不提供服务的，而且也通过ip识别是不是在国内，解决办法用vpn也行，或者，自己去买一台国外的服务器也行。我这里使用的是腾讯云轻量服务器，最低配置54元/月，选择windows的主要原因毕竟需要注册openai，需要看页面，同时也可以搭建nginx，当然，用ubuntu如果能自己搞界面也行。</p>\n<img src=\"https://github-images.wenzhihuai.com/images/4yrkq1.png\" alt=\"image-20230221193455384\" style=\"zoom:50%;\">\n<h3>1.3 ChatGPT注册</h3>\n<p>购买完之后，就可以直接打开openai的官网了，然后去<a href=\"https://platform.openai.com/signup%E5%AE%98%E7%BD%91%E9%87%8C%E6%B3%A8%E5%86%8C%EF%BC%8C%E6%B3%A8%E5%86%8C%E8%BF%87%E7%A8%8B%E5%85%B7%E4%BD%93%E5%B0%B1%E4%B8%8D%E8%AE%B2%E4%BA%86%EF%BC%8C%E8%AE%B2%E4%B8%8B%E6%A0%B8%E5%BF%83%E9%97%AE%E9%A2%98%E2%80%94%E2%80%94%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81\" target=\"_blank\" rel=\"noopener noreferrer\">https://platform.openai.com/signup官网里注册，注册过程具体就不讲了，讲下核心问题——短信验证码</a></p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/oz1r8x.png\" alt=\"image-20230222104357230\" style=\"zoom:80%;\"></div>\n<p>然后回sms查看验证码。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/28gfhn.png\" alt=\"image-20230222104225722\" style=\"zoom:50%;\"></div>\n<p>注册成功之后就可以在chatgpt里聊天啦，能够识别各种语言，发起多轮会话的时候，可能回出现访问超过限制什么的。</p>\n<img src=\"https://github-images.wenzhihuai.com/images/mrw3cz.png\" alt=\"image-20230220173335691\" style=\"zoom:50%;\">\n<p>通过chatgpt聊天不是我们最终想要的，我们需要的是在微信公众号也提供智能客服的聊天回复，所以我们需要在通过openai的api来进行调用。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/ykhrvs.png\" alt=\"image-20230222104316514\" style=\"zoom:30%;\"></div>\n<h2>二、搭建nginx服务器</h2>\n<p>跟页面一样，OpenAI的调用也是不能再国内访问的，这里，我们使用同一台服务器来搭建nginx，还是保留使用windows吧，主要还是得注意下面这段话，如果API key被泄露了，OpenAI可能会自动重新更新你的API key，这个规则似乎是API key如果被多个ip使用，就会触发这个规则，调试阶段还是尽量使用windows的服务器吧，万一被更新了，还能去页面上重新找到。</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>Do not share your API key with interesting, or expose it in the browser or other client-side code. In order to protect the security of your account, OpenAI may also automatically rotate any API key that we've found has leaked publicly.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>windows的安装过程参考网上的来，我们只需要添加下面这个配置即可，原理主要是将调用OpenAI的接口全部往官网转发。</p>\n<div class=\"language-nginx line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"nginx\" data-title=\"nginx\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    location</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /v1/completions {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">      proxy_pass </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">https://api.openai.com/v1/completions;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后使用下面的方法进行调试即可：</p>\n<div class=\"language-http line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"http\" data-title=\"http\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">POST</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> http://YOUR IP/v1/completions</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">Authorization</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Bearer YOUR_API_KEY</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">Content-Type</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> application/json</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"model\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text-davinci-003\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"prompt\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Say this is a test\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"max_tokens\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">7</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"temperature\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>三、公众号开发</h2>\n<p>网上有很多关于微信通过chatgpt回复的文章，有些使用自己微信号直接做为载体，因为要扫码网页登陆，而且是网页端在国外，很容易被封；有些是使用公众号，相对来说，公众号被封也不至于导致个人微信号出问题。</p>\n<h3>3.1 微信云托管</h3>\n<p>微信公众平台提供了微信云托管，无需鉴权，比其他方式都方便不少，可以免费试用3个月，继续薅羊毛，当然，如果自己开发能力足够，也可以自己从0开始开发。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/svjm7s.png\" alt=\"image-20230220192603751\" style=\"zoom:30%;\"></div>\n<p>提供了各种语言的模版，方便快速开发，OpenAI官方提供的sdk是node和python，这里我们选择express（node）。</p>\n<img src=\"https://github-images.wenzhihuai.com/images/kkjdna.png\" alt=\"image-20230220201004069\" style=\"zoom:30%;\">\n<h3>3.2 一个简单ChatGPT简单回复</h3>\n<p>微信官方的源码在这，<a href=\"https://github.com/WeixinCloud/wxcloudrun-express%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9B%B4%E6%8E%A5fork%E4%B8%80%E4%BB%BD%E8%87%AA%E5%B7%B1%E6%9D%A5%E5%BC%80%E5%8F%91%E3%80%82\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/WeixinCloud/wxcloudrun-express，我们直接fork一份自己来开发。</a></p>\n<p>一个简单的消息回复功能（无db），直接在我们的index.js里添加如下代码。</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> configuration</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Configuration</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    apiKey</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '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'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    basePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'http://43.153.15.174/v1'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> openai</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> OpenAIApi</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">configuration</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">async</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> simpleResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">prompt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> completion</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> openai</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">createCompletion</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        model</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'text-davinci-003'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        prompt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        max_tokens</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1024</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        temperature</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0.1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> response</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">completion</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">choices</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?.[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">text</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'AI 挂了'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">trim</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> strip</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'A: '</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">app</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">post</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/message/simple\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">async</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">req</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'消息推送'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">req</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 从 header 中取appid，如果 from-appid 不存在，则不是资源复用场景，可以直接传空字符串，使用环境所属账号发起云调用</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> appid</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> req</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">headers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'x-wx-from-appid'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">||</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">ToUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">MsgType</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">Content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">CreateTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> req</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'推送接收的账号'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ToUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'创建时间'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">CreateTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">MsgType</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'text'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        message</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> await</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> simpleResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">send</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            ToUserName</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            FromUserName</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ToUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            CreateTime</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> CreateTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            MsgType</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'text'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">            Content</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> message</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        })</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">send</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'success'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>本地可以直接使用http请求测试，成功调用之后直接提交发布即可，在微信云托管上需要先授权代码库，即可使用云托管的流水线，一键发布。注意，api_base和api_key可以填写在服务设置-基础信息那里，一个是OPENAI_API_BASE，一个是OPENAI_API_KEY，服务会自动从环境变量里取。</p>\n<h3>3.3 服务部署</h3>\n<p>提交代码只github或者gitee都可以，值得注意的是，OpenAI判断key泄露的规则，不知道是不是判断调用的ip地址不一样，还是github的提交记录里含有这块，有点玄学，同样的key本地调用一次，然后在云托管也调用的话，OpenAI就很容易把key给重新更新。</p>\n<img src=\"https://github-images.wenzhihuai.com/images/wfekdb.png\" alt=\"image-20230220203313790\" style=\"zoom:50%;\">\n<p>部署完之后，云托管也提供了云端调试功能，相当于在服务里发送了http请求。这一步很重要，如果没有调用成功，则无法进行云托管消息推送。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/129qih.png\" alt=\"image-20230220203711436\" style=\"zoom:30%;\"></div>\n<p>这里填上你自己的url，我们这里配置的是/meesage/simple，如果没有成功，需要进行下面步骤进行排查：</p>\n<p>（1）服务有没有正常启动，看日志</p>\n<p>（2）端口有没有设置错误，这个很多次没有注意到</p>\n<img src=\"https://github-images.wenzhihuai.com/images/dn1f67.png\" alt=\"image-20230220203445297\" style=\"zoom:50%;\">\n<p>保存成功之后，就可以在微信公众号里测试了。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/p82i06.png\" alt=\"image-20230221134250689\" style=\"zoom:50%;\"></div>\n<p>体验还可以</p>\n<h2>四、没有回复（超时回复问题）</h2>\n<p>很多OpenAI的回答都要几十秒，有的甚至更久，比如对chatgpt问“写一篇1000字关于深圳的文章”，就需要几十秒，而微信的主动回复接口，是需要我们3s内返回给用户。</p>\n<p>订阅号的消息推送分几种：</p>\n<ol>\n<li><strong>被动消息回复</strong>：指用户给公众号发一条消息，系统接收到后，可以回复一条消息。</li>\n<li><strong>主动回复/客服消息</strong>：可以脱离被动消息的5秒超时权限，在48小时内可以主动回复。但需要公众号完成微信认证。</li>\n</ol>\n<p>根据微信官方文档，没有认证的公众号是没有调用主动回复接口权限的，<a href=\"https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Explanation_of_interface_privileges.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Explanation_of_interface_privileges.html</a></p>\n<img src=\"https://github-images.wenzhihuai.com/images/eeogjb.png\" alt=\"image-20230221100251825\" style=\"zoom:40%;\">\n<p>对于有微信认证的订阅号或者服务号，可以调用微信官方的/cgi-bin/message/custom/send接口来实现主动回复，但是对于个人的公众号，没有权限调用，只能尝试别的办法。想来想去，只能在3s内返回让用户重新复制发送的信息，同时后台里保存记录异步调用，用户重新发送的时候再从数据库里提取回复。</p>\n<p>1.先往数据库存一条 回复记录，把用户的提问存下来，以便后续查询。设置回复的内容为空，设置状态为 回复中（thinking）。</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 因为AI响应比较慢，容易超时，先插入一条记录，维持状态，待后续更新记录。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Message</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    fromUser</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    response</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ''</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    request</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> Content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    aiType</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> AI_TYPE_TEXT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 为其他AI回复拓展，比如AI作画</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  });</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>2.抽象一个 chatGPT 请求方法 <code>getAIMessage</code>，函数内部得到 GPT 响应后，会更新之前那条记录（通过用户id &amp; 用户提问 查询），把状态更新为 已回答（answered），并把回复内容更新上。</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> // 成功后，更新记录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Message</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">update</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      response</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      status</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> MESSAGE_STATUS_ANSWERED</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      where</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        fromUser</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        request</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> Content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  );</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.前置增加一些判断，当用户在请求时，如果 AI 还没完成响应，直接回复用户 AI 还在响应，让用户过一会儿再重试。如果 AI 此时已响应完成，则直接把 内容返回给用户。</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 找一下，是否已有记录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> message</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Message</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">findOne</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    where</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      fromUser</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      request</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> Content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 已回答，直接返回消息</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">message</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">status</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> MESSAGE_STATUS_ANSWERED</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> `[GPT]: </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">message</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\">?.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">response</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 在回答中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">message</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">status</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> MESSAGE_STATUS_THINKING</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> AI_THINKING_MESSAGE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>4.最后就是一个 <code>Promise.race</code></p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> message</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> await</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Promise</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">race</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">([</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 3秒微信服务器就会超时，超过2.9秒要提示用户重试</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    sleep</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2900</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> AI_THINKING_MESSAGE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    getAIMessage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Content</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }),</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ]);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这样子大概就能实现超时之前返回了。</p>\n<h2>五、会话保存</h2>\n<p>掉接口是一次性的，一次接口调用完之后怎么做到下一次通话的时候，还能继续保持会话，是不是应该类似客户端与服务端那种有个session这种，但是实际上在openai里是没有session这种东西的，令人震惊的是，chatgpt里是通过前几次会话拼接起来一起发送给chatgpt里的，需要通过回车符来拼接。</p>\n<div class=\"language-javascript line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"javascript\" data-title=\"javascript\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">async</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> buildCtxPrompt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({ </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 获取最近10条对话</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> messages</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Message</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">findAll</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    where</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      fromUser</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> FromUserName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      aiType</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> AI_TYPE_TEXT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    limit</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    order</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'updatedAt'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'ASC'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 只有一条的时候，就不用封装上下文了</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> messages</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\">    ?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> messages</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">request</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#C678DD\">    :</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> messages</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(({ </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=&gt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> `Q: </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">request</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> A: </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">response</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">join</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>之后就可以实现会话之间的保存通信了。</p>\n<div style=\"text-align: center;\"><img src=\"https://github-images.wenzhihuai.com/images/52pp5f.png\" alt=\"image-20230218203309437\" style=\"zoom:33%;\"></div>\n<h2>六、其他问题</h2>\n<h3>6.1 限频</h3>\n<p>chatgpt毕竟也是新上线的，火热是肯定的，聊天窗口只能开几个，api调用的话，也是有限频的，但是规则具体没有找到，只是在调用次数过多的时候会报429的错误，出现之后就需要等待一个小时左右。</p>\n<p>对于这个的解决办法只能是多开几个账号，一旦429就只能换个账号重试了。</p>\n<h3>6.2 秘钥key被更新</h3>\n<p>没有找到详细的规则，凭个人经验的话，可能github提交的代码会被扫描，可能ip调用的来源不一样，最好还是开发一个秘钥，生产一个秘钥吧。</p>\n<h3>6.3 为啥和官网的回复不一样</h3>\n<p>我们这里用的模型算法是text-davinci-003，具体可以参考：<a href=\"https://platform.openai.com/docs/models/overview%EF%BC%8C%E4%B9%9F%E7%AE%97%E6%98%AF%E4%B8%80%E4%B8%AA%E6%AF%94%E8%BE%83%E8%80%81%E7%9A%84%E6%A0%B7%E6%9C%AC%E4%BA%86%E5%90%A7\" target=\"_blank\" rel=\"noopener noreferrer\">https://platform.openai.com/docs/models/overview，也算是一个比较老的样本了吧</a></p>\n<img src=\"https://github-images.wenzhihuai.com/images/qh4efq.png\" alt=\"image-20230221192417900\" style=\"zoom:50%;\">\n<p>从官方文档来看，官方服务版的 ChatGPT 的模型并非基础版的<code>text-davinci-003</code>，而是经过了「微调：fine-tunes」。文档地址在这：<a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning\" target=\"_blank\" rel=\"noopener noreferrer\">platform.openai.com/docs/guides…</a></p>\n<h3>6.4 玄学挂掉</h3>\n<p>有时候消息没有回复，真的不是我们的问题，chatgpt毕竟太火了，官网的这个能力都经常挂掉，也可以订阅官网修复的通知，一旦修复则会发邮件告知你。</p>\n<img src=\"https://github-images.wenzhihuai.com/images/4hod0s.png\" alt=\"image-20230221175150025\" style=\"zoom:50%;\">\n<p>参考：<a href=\"https://juejin.cn/post/7200769439335546935\" target=\"_blank\" rel=\"noopener noreferrer\">https://juejin.cn/post/7200769439335546935</a></p>\n<h2>最后</h2>\n<p>记得去微信关注【旅行的树】公众号体验<br>\n代码地址：<a href=\"https://github.com/Zephery/wechat-gpt\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/wechat-gpt</a></p>\n",
      "date_published": "2024-01-25T12:42:18.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Tesla api",
      "url": "http://www.wenzhihuai.com/interesting/tesla.html",
      "id": "http://www.wenzhihuai.com/interesting/tesla.html",
      "summary": "Tesla api 一、特斯拉应用申请 1.1 创建 Tesla 账户 如果您还没有 Tesla 账户，请创建账户。验证您的电子邮件并设置多重身份验证。 正常创建用户就好，然后需要开启多重身份认证，这边常用的是mircrosoft的Authenticator. image-20231210142130054 image-2023121014241559...",
      "content_html": "\n<h2>一、特斯拉应用申请</h2>\n<h3>1.1 创建 Tesla 账户</h3>\n<p>如果您还没有 Tesla 账户，请创建账户。验证您的电子邮件并设置多重身份验证。</p>\n<p>正常创建用户就好，然后需要开启多重身份认证，这边常用的是mircrosoft的Authenticator.</p>\n<img src=\"https://github-images.wenzhihuai.com/images/3hnb7w.png\" alt=\"image-20231210142130054\" style=\"zoom:5%;\">\n<img src=\"https://github-images.wenzhihuai.com/images/zdto5j.png\" alt=\"image-20231210142415598\" style=\"zoom:25%;\">\n<p>注意点：（1）不要用自己车辆的邮箱来注册（2）有些邮箱不是特斯拉开发者的邮箱，可能用这些有些无法正常提交访问请求。</p>\n<h3>1.2 提交访问请求</h3>\n<p>点击下方的“提交请求”按钮，请求应用程序访问权限。登录后，请提供您的合法企业详细信息、应用程序名称及描述和使用目的。在您提交了详细信息之后，我们会审核您的请求并通过电子邮件向您发送状态更新。</p>\n<p>这一步很坑，多次尝试之后都无果，原因也不知道是为啥，只能自己去看返回报文琢磨，太难受了，下面是自己踩的坑</p>\n<p>（1）Invalid domain</p>\n<img src=\"https://github-images.wenzhihuai.com/images/mfthul.png\" alt=\"image-20231210144504486\" style=\"zoom:33%;\">\n<p>无效的域名，这里我用的域名是腾讯云个人服务器的域名，证书是腾讯云免费一年的证书，印象中第一申请的时候还是能过的，第二次的时候就不行了，可能被识别到免费的ssl证书不符合规范，还是需要由合法机构的颁发证书才行。所以，为了金快速申请通过，先填个<a href=\"https://baidu.xn--com-s63e\" target=\"_blank\" rel=\"noopener noreferrer\">https://baidu.com吧</a>。当然，后续需要彻底解决自己域名证书的问题，我改为使用阿里云的ssl证书，3个月到期的那种。</p>\n<p>（2）Unable to Onboard</p>\n<img src=\"https://github-images.wenzhihuai.com/images/y6s6ea.png\" alt=\"image-20231210142930976\" style=\"zoom:50%;\">\n<p>应用无法上架，可能原因为邮箱不对，用了之前消费者账号（即自己的车辆账号），建议换别的邮箱试试。</p>\n<p>（3） Rejected</p>\n<img src=\"https://github-images.wenzhihuai.com/images/5fxmcv.png\" alt=\"image-20231210143156308\" style=\"zoom:50%;\">\n<p>这一步尝试了很多次，具体原因为国内还无法正常使用tesla api，只能切换至美国服务器申请下（截止2023-11-15），后续留意官网通知。</p>\n<h3>1.3 访问应用程序凭据</h3>\n<p>一旦获得批准，将为您的应用程序生成可在登录后访问的客户端 ID 和客户端密钥。使用这些凭据，通过 OAuth 2.0 身份验证获取用户访问令牌。访问令牌可用于对提供私人用户账户信息或代表其他账户执行操作的请求进行身份验证。</p>\n<p>申请好就可以在自己的账号下看到自己的应用了，</p>\n<img src=\"https://github-images.wenzhihuai.com/images/kpdjbc.png\" alt=\"image-20231210144244888\" style=\"zoom:33%;\">\n<h3>1.4 开始 API 集成</h3>\n<p>按照 API 文档和设置说明将您的应用程序与 Tesla 车队 API 集成。您需要生成并注册公钥，请求用户授权并按照规格要求拨打电话。完成后您将能够与 API 进行交互，并开始围绕 Tesla 设备构建集成。</p>\n<h1>二、开发之前的准备</h1>\n<p><strong>由于特斯拉刚推出，并且国内进展缓慢，很多都申请不下来，下面内容均以北美区域进行调用。</strong></p>\n<h3>2.1 认识token</h3>\n<p>app与特斯拉交互的共有两个令牌（token）方式，在调用api的时候，特别需要注意使用的是哪种token，下面是两种token的说明：</p>\n<p>（1）合作伙伴身份验证令牌：这个就是你申请的app的令牌</p>\n<p>（2）客户生成第三方令牌：这个是消费者在你这个app下授权之后的令牌。</p>\n<p>此外，还需要注意下，中国大陆地区对应的api地址是 <a href=\"https://fleet-api.prd.cn.vn.cloud.tesla.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">https://fleet-api.prd.cn.vn.cloud.tesla.cn</a>，不要调到别的地址去了。</p>\n<h3>2.2 获取第三方应用token</h3>\n<p>这一步官网列的很详细，就不在详述了。</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">CLIENT_ID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">command</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> obtain</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> client_i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">d&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">CLIENT_SECRET</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">secure</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> command</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> obtain</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> client_secre</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">t&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">AUDIENCE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://fleet-api.prd.na.vn.cloud.tesla.com\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># Partner authentication token request</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --request</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> POST</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --header</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Content-Type: application/x-www-form-urlencoded'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --data-urlencode</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'grant_type=client_credentials'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --data-urlencode</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"client_id=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$CLIENT_ID</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --data-urlencode</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"client_secret=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$CLIENT_SECRET</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --data-urlencode</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'scope=openid vehicle_device_data vehicle_cmds vehicle_charging_cmds'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --data-urlencode</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"audience=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$AUDIENCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  'https://auth.tesla.com/oauth2/v3/token'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>2.3  验证域名归属</h3>\n<h4>2.1.1 Register</h4>\n<p>完成注册合作方账号之后才可以访问API. 每个developer.tesla.cn上的应用程序都必须完成此步骤。官网挂了一个github的代码，看了半天，以为要搞很多东西，实际上只需要几步就可以了。</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> vehicle-command/cmd/tesla-keygen</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">go</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> build</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">./tesla-keygen</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -keyring-debug</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -key-file=private</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">public_key.pem</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这里只是生成了公钥，需要把公钥挂载到域名之下，我们用的是nginx，所以只要指向pem文件就可以了，注意下nginx是否可以访问到改文件，如果不行，把nginx的user改为root。</p>\n<pre><code>    location ~ ^/.well-known {\n           default_type text/html;\n           alias /root/vehicle-command/cmd/tesla-keygen/public_key.pem;\n    }\n</code></pre>\n<p>随后，便是向tesla注册你的域名，域名必须和你申请的时候填的一样。</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --header</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Content-Type: application/json'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --header</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Authorization: Bearer </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$TESLA_API_TOKEN</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  --data</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '{\"domain\":\"string\"}'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  'https://fleet-api.prd.na.vn.cloud.tesla.com/api/1/partner_accounts'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>2.1.2 public_key</h4>\n<p>最后，验证一下是否真的注册成功（GET /api/1/partner_accounts/public_key)</p>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>curl --header 'Content-Type: application/json' \\</span></span>\n<span class=\"line\"><span>  --header \"Authorization: Bearer $TESLA_API_TOKEN\" \\</span></span>\n<span class=\"line\"><span>  'https://fleet-api.prd.na.vn.cloud.tesla.com/api/1/partner_accounts/public_key'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>得到下面内容就代表成功了</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">\"response\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:{</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">\"public_key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"xxxx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>至此，我们的开发准备就完成了，接下来就是正常的开发与用户交互的api。</p>\n",
      "date_published": "2024-01-25T12:42:18.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "在 Spring 6 中使用虚拟线程",
      "url": "http://www.wenzhihuai.com/java/%E5%9C%A8%20Spring%206%20%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%99%9A%E6%8B%9F%E7%BA%BF%E7%A8%8B.html",
      "id": "http://www.wenzhihuai.com/java/%E5%9C%A8%20Spring%206%20%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%99%9A%E6%8B%9F%E7%BA%BF%E7%A8%8B.html",
      "summary": "在 Spring 6 中使用虚拟线程 一、简介 在这个简短的教程中，我们将了解如何在 Spring Boot 应用程序中利用虚拟线程的强大功能。 虚拟线程是Java 19 的预览功能，这意味着它们将在未来 12 个月内包含在官方 JDK 版本中。Spring 6 版本最初由 Project Loom 引入，为开发人员提供了开始尝试这一出色功能的选项。 ...",
      "content_html": "\n<h2>一、简介</h2>\n<p>在这个简短的教程中，我们将了解如何在 Spring Boot 应用程序中利用虚拟线程的强大功能。</p>\n<p>虚拟线程是Java 19 的<a href=\"https://openjdk.org/jeps/425\" target=\"_blank\" rel=\"noopener noreferrer\">预览功能</a>，这意味着它们将在未来 12 个月内包含在官方 JDK 版本中。<a href=\"https://spring.io/blog/2022/10/11/embracing-virtual-threads\" target=\"_blank\" rel=\"noopener noreferrer\">Spring 6 版本</a>最初由 Project Loom 引入，为开发人员提供了开始尝试这一出色功能的选项。</p>\n<p>首先，我们将看到“平台线程”和“虚拟线程”之间的主要区别。接下来，我们将使用虚拟线程从头开始构建一个 Spring-Boot 应用程序。最后，我们将创建一个小型测试套件，以查看简单 Web 应用程序吞吐量的最终改进。</p>\n<h2>二、 虚拟线程与平台线程</h2>\n<p>主要区别在于<a href=\"https://www.baeldung.com/java-virtual-thread-vs-thread\" target=\"_blank\" rel=\"noopener noreferrer\">虚拟线程</a>在其操作周期中不依赖于操作系统线程：它们与硬件解耦，因此有了“虚拟”这个词。这种解耦是由 JVM 提供的抽象层实现的。</p>\n<p>对于本教程来说，必须了解虚拟线程的运行成本远低于平台线程。它们消耗的分配内存量要少得多。这就是为什么可以创建数百万个虚拟线程而不会出现内存不足问题，而不是使用标准平台（或内核）线程创建几百个虚拟线程。</p>\n<p>从理论上讲，这赋予了开发人员一种超能力：无需依赖异步代码即可管理高度可扩展的应用程序。</p>\n<h2>三、在Spring 6中使用虚拟线程</h2>\n<p>从 Spring Framework 6（和 Spring Boot 3）开始，虚拟线程功能正式公开，但虚拟线程是Java 19 的<a href=\"https://www.baeldung.com/java-preview-features\" target=\"_blank\" rel=\"noopener noreferrer\">预览功能。</a>这意味着我们需要告诉 JVM 我们要在应用程序中启用它们。由于我们使用 Maven 来构建应用程序，因此我们希望确保在 pom.xml 中包含以下<em>代码</em>：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">plugins</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">        &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">plugin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">            &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">org</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">apache</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">maven</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">plugins</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">            &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">maven</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">compiler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">plugin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">            &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">configuration</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">                &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">source</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">19</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">source</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">                &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">19</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">target</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">                &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">compilerArgs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    --</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">enable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">preview</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">                &lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">compilerArgs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">            &lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">configuration</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">        &lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">plugin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">plugins</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>从 Java 的角度来看，要使用 Apache Tomcat 和虚拟线程，我们需要一个带有几个 bean 的简单配置类：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">EnableAsync</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Configuration</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">ConditionalOnProperty</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"spring.thread-executor\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  havingValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"virtual\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadConfig</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Bean</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> AsyncTaskExecutor</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> applicationTaskExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> TaskExecutorAdapter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Executors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">newVirtualThreadPerTaskExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Bean</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> TomcatProtocolHandlerCustomizer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> protocolHandlerVirtualThreadExecutorCustomizer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> protocolHandler </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            protocolHandler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Executors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">newVirtualThreadPerTaskExecutor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>第一个 Spring Bean <em>ApplicationTaskExecutor</em>将取代标准的*<a href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.html\" target=\"_blank\" rel=\"noopener noreferrer\">ApplicationTaskExecutor</a>* ，提供为每个任务启动新虚拟线程的<em>Executor</em>。第二个 bean，名为<em>ProtocolHandlerVirtualThreadExecutorCustomizer，<em>将以相同的方式 自定义标准</em><a href=\"https://tomcat.apache.org/tomcat-8.5-doc/api/org/apache/coyote/ProtocolHandler.html\" target=\"_blank\" rel=\"noopener noreferrer\">TomcatProtocolHandler 。</a><em>我们还添加了注释</em><a href=\"https://www.baeldung.com/spring-conditionalonproperty\" target=\"_blank\" rel=\"noopener noreferrer\">@ConditionalOnProperty，</a>**以通过切换application.yaml</em>文件中配置属性的值来按需启用虚拟线程：</p>\n<div class=\"language-yaml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yaml\" data-title=\"yaml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">spring</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    thread-executor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">virtual</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    //...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>我们来测试一下Spring Boot应用程序是否使用虚拟线程来处理Web请求调用。为此，我们需要构建一个简单的控制器来返回所需的信息：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">RestController</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">RequestMapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/thread\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadController</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">GetMapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getThreadName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentThread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>*<a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/Thread.html\" target=\"_blank\" rel=\"noopener noreferrer\">Thread</a>*对象的toString *()*方法将返回我们需要的所有信息：线程 ID、线程名称、线程组和优先级。让我们通过一个<a href=\"https://www.baeldung.com/curl-rest\" target=\"_blank\" rel=\"noopener noreferrer\"><em>curl</em></a>请求来访问这个端点：</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> http://localhost:8080/thread/name</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> VirtualThread[#171]/runnable@ForkJoinPool-1-worker-4</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>正如我们所看到的，响应明确表示我们正在使用虚拟线程来处理此 Web 请求。换句话说，*Thread.currentThread()*调用返回虚拟线程类的实例。现在让我们通过简单但有效的负载测试来看看虚拟线程的有效性。</p>\n<h2>四、性能比较</h2>\n<p>对于此负载测试，我们将使用<a href=\"https://www.baeldung.com/jmeter\" target=\"_blank\" rel=\"noopener noreferrer\">JMeter</a>。这不是虚拟线程和标准线程之间的完整性能比较，而是我们可以使用不同参数构建其他测试的起点。</p>\n<p><em>在这种特殊的场景中，我们将调用Rest Controller</em>中的一个端点，该端点将简单地让执行休眠一秒钟，模拟复杂的异步任务：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">RestController</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">RequestMapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/load\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> LoadTestController</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Logger</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> LOG </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> LoggerFactory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLogger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">LoadTestController</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">GetMapping</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> doSomething</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> InterruptedException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        LOG</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hey, I'm doing something\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>请记住，由于*@ConditionalOnProperty* 注释，我们只需更改 application.yaml 中变量的值即可在虚拟线程和标准线程之间<em>切换</em>。</p>\n<p>JMeter 测试将仅包含一个线程组，模拟 1000 个并发用户访问*/load* 端点 100 秒：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20230827193604936-1596575555.png\" alt=\"image-20230827193431807\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20230827193431807</figcaption></figure>\n<p>在本例中，采用这一新功能所带来的性能提升是显而易见的。让我们比较不同实现的“响应时间图”。这是标准线程的响应图。我们可以看到，立即完成一次调用所需的时间达到 5000 毫秒：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20230827193604663-146471729.png\" alt=\"image-20230827193511176\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20230827193511176</figcaption></figure>\n<p>发生这种情况是因为平台线程是一种有限的资源，当所有计划的和池化的线程都忙时，Spring 应用程序除了将请求搁置直到一个线程空闲之外别无选择。</p>\n<p>让我们看看虚拟线程会发生什么：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/755525-20230827193609186-1264647264.png\" alt=\"image-20230827193533565\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20230827193533565</figcaption></figure>\n<p>正如我们所看到的，响应稳定在 1000 毫秒。虚拟线程在请求后立即创建和使用，因为从资源的角度来看它们非常便宜。在本例中，<strong>我们正在比较 spring 默认固定标准线程池（默认为 200）和 spring 默认无界虚拟线程池的使用情况。</strong></p>\n<p>**这种性能提升之所以可能，是因为场景过于简单，并且没有考虑 Spring Boot 应用程序可以执行的全部操作。**从底层操作系统基础设施中采用这种抽象可能是有好处的，但并非在所有情况下都是如此。</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/755525-20230827193604936-1596575555.png",
      "date_published": "2024-01-25T12:42:18.000Z",
      "date_modified": "2024-01-26T03:58:56.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "【elasticsearch】源码debug",
      "url": "http://www.wenzhihuai.com/database/elasticsearch/elasticsearch%E6%BA%90%E7%A0%81debug.html",
      "id": "http://www.wenzhihuai.com/database/elasticsearch/elasticsearch%E6%BA%90%E7%A0%81debug.html",
      "summary": "【elasticsearch】源码debug 一、下载源代码 直接用idea下载代码https://github.com/elastic/elasticsearch.git image 切换到特定版本的分支：比如7.17，之后idea会自己加上Run/Debug Elasitcsearch的，配置可以不用改，默认就好 image 二、修改设置(可选) ...",
      "content_html": "\n<h1>一、下载源代码</h1>\n<p>直接用idea下载代码<a href=\"https://github.com/elastic/elasticsearch.git\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/elastic/elasticsearch.git</a><br>\n<img src=\"https://github-images.wenzhihuai.com/images/755525-20220124160719006-851383635.png\" alt=\"image\" loading=\"lazy\"></p>\n<p>切换到特定版本的分支：比如7.17，之后idea会自己加上Run/Debug Elasitcsearch的，配置可以不用改，默认就好<br>\n<img src=\"https://github-images.wenzhihuai.com/images/755525-20220124160709513-361605195.png\" alt=\"image\" loading=\"lazy\"></p>\n<h1>二、修改设置(可选)</h1>\n<p>为了方便, 在&nbsp;gradle/run.gradle&nbsp;中关闭 Auth 认证:</p>\n<p>setting 'xpack.security.enabled', 'false'</p>\n<p>或者使用其中的用户名密码:</p>\n<p>user username: 'elastic-admin', password: 'elastic-password', role: 'superuser'</p>\n<h1>三、启动</h1>\n<p>先启动上面的 remote debug, 然后用 gradlew 启动项目:</p>\n<p>./gradlew :run --debug-jvm<br>\n打开浏览器http://localhost:9200即可看到es相关信息了<br>\n<img src=\"https://github-images.wenzhihuai.com/images/755525-20220124160657219-1269826381.png\" alt=\"image\" loading=\"lazy\"></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/755525-20220124160719006-851383635.png",
      "date_published": "2024-01-25T12:42:18.000Z",
      "date_modified": "2024-01-26T03:58:56.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Database",
      "url": "http://www.wenzhihuai.com/database/",
      "id": "http://www.wenzhihuai.com/database/",
      "summary": "Database 目录留空",
      "content_html": "\n<p>目录留空</p>\n",
      "date_published": "2024-01-25T11:42:16.000Z",
      "date_modified": "2024-02-03T17:57:14.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "微信支付",
      "url": "http://www.wenzhihuai.com/donate/",
      "id": "http://www.wenzhihuai.com/donate/",
      "summary": "微信支付 微信支付微信支付",
      "content_html": "\n<figure><img src=\"https://github-images.wenzhihuai.com/images/wechat-pay.png\" alt=\"微信支付\" tabindex=\"0\" loading=\"lazy\"><figcaption>微信支付</figcaption></figure>\n",
      "image": "https://github-images.wenzhihuai.com/images/wechat-pay.png",
      "date_published": "2024-01-25T08:04:11.000Z",
      "date_modified": "2024-01-26T17:18:59.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "10.历时8年最终改版",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/10.%E5%8E%86%E6%97%B68%E5%B9%B4%E6%9C%80%E7%BB%88%E6%94%B9%E7%89%88.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/10.%E5%8E%86%E6%97%B68%E5%B9%B4%E6%9C%80%E7%BB%88%E6%94%B9%E7%89%88.html",
      "summary": "10.历时8年最终改版 不知不觉，自建站https://www.wenzhihuai.com已经接近8年了，大二的时候开启使用ssh+jsp框架来做了一个自己的网站，完全自写前后端，过程中不断进化，改用ssm，整合es做文章搜索，加kafka，加redis缓存，整体上对个人来说还是学习到了不少东西。但是随之而来的问题也不少，被挖矿攻击、服务器被黑等等。...",
      "content_html": "\n<p>不知不觉，自建站<a href=\"https://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.wenzhihuai.com</a>已经接近8年了，大二的时候开启使用ssh+jsp框架来做了一个自己的网站，完全自写前后端，过程中不断进化，改用ssm，整合es做文章搜索，加kafka，加redis缓存，整体上对个人来说还是学习到了不少东西。但是随之而来的问题也不少，被挖矿攻击、服务器被黑等等。有时候因为要用服务器搞一些别的东西，直接没有备份数据库就重装，导致不少文章丢失，虽然别的平台可能零散分布。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/600-20240126113210252-20240131213935629.png\" alt=\"早年的网站截图\" tabindex=\"0\" loading=\"lazy\"><figcaption>早年的网站截图</figcaption></figure>\n<p>总体而言，自建站对学习知识，了解整个建站的原理能够起到非常重要的作用，但是维护成本实在是太高了，每个月要支付服务器的费用，而且一旦想拿服务器来做点什么，都得提防一下会不会造成破坏。最终还是选择采用vuepress2来重构一下自建站，毕竟把markdown放到github，把图片放到cos里减少了不少的维护量。下面是使用vuepress2建站的<a href=\"https://github.com/Zephery/MyWebsite\" target=\"_blank\" rel=\"noopener noreferrer\">代码地址</a>。</p>\n<h2>一、博客的安装</h2>\n<p>具体<a href=\"https://v2.vuepress.vuejs.org/zh/\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress2官网</a>讲解的很详细了，不用再处理什么，按照步骤创建一个项目即可，为了网站的美观，个人使用了<a href=\"https://theme-hope.vuejs.press/zh/\" target=\"_blank\" rel=\"noopener noreferrer\">theme hope</a>这款主题。</p>\n<h2>二、配置</h2>\n<p>导航栏、侧边栏官网也有详细的讲解，也不再阐述，需要注意的是自动目录，之前看<a href=\"https://github.com/Snailclimb/JavaGuide\" target=\"_blank\" rel=\"noopener noreferrer\">JavaGuide</a>的样式，他那边的每篇文章都需要写一次ts文件（children），后来发现官网可以把children设置为structure，即可实现根据md文件生成侧边栏目录。注意的是，这里不是根据markdown的文件名来目录名，而是取markdown文件的标题。</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">        text</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Redis\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">        prefix</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"redis/\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">        icon</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"redis\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">        collapsible</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#D19A66\">false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:white;--shiki-dark:#FFFFFF\">        children</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"structure\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>三、为文章增加评论</h2>\n<p><a href=\"https://plugin-comment2.vuejs.press/guide/\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress-plugin-comment2</a>，使用了Giscus，Giscus绑定了github账号，所以可以从一定程度上防止被别人刷广告，需要再个人的项目Settings-&gt;General把Discussions这个选项给勾选上。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/github/image-20240201153605099.png\" alt=\"一定要开启discussions\" tabindex=\"0\" loading=\"lazy\"><figcaption>一定要开启discussions</figcaption></figure>\n<p>然后去config.ts配置插件。</p>\n<div class=\"language-vue line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"vue\" data-title=\"vue\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        commentPlugin({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            provider: \"Giscus\",</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            comment: true, //启用评论功能</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            repo: \"Zephery/MyWebsite\", //远程仓库</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            repoId: \"MDEwOlJlcG9zaXRvcnkyMDM2MDIyMDQ=\", //对应自己的仓库Id</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            category: \"General\",</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            categoryId: \"DIC_kwDODCK5HM4Ccp32\" //对应自己的分类Id</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }),</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>即可在页面上看到效果</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/image-20240201205909384.png\" alt=\"颜色可自定义\" tabindex=\"0\" loading=\"lazy\"><figcaption>颜色可自定义</figcaption></figure>\n<h2>四、博客的部署</h2>\n<p>官网也有讲解部署的情况，具体可以看官网<a href=\"https://v2.vuepress.vuejs.org/zh/guide/deployment.html#github-pages\" target=\"_blank\" rel=\"noopener noreferrer\">Github Pages</a>，整体上看速度还是挺慢的，可以尝试去gitee上部署看一下，之后就可以在pages通过域名访问了。需要在项目下创建.github/workflows/docs.yml文件，具体配置参考<a href=\"https://v2.vuepress.vuejs.org/zh/guide/deployment.html#github-pages\" target=\"_blank\" rel=\"noopener noreferrer\">官网</a>，不需做任何改动。</p>\n<h2>五、Github pages自定义域名</h2>\n<p><a href=\"http://xn--githubiozephery-cn3z988bnu0amu6hnw1b.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">github自带的io域名zephery.github.io</a>，做为一名开发，肯定是用自己的域名是比较好的。需要注意下中间的红色框，前面的是分支，后面的是你项目的路径。一般默认即可，不用修改。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/github/image-20240201144459067.png\" alt=\"pages的配置\" tabindex=\"0\" loading=\"lazy\"><figcaption>pages的配置</figcaption></figure>\n<p>购买域名-&gt;域名解析，<a href=\"http://xn--wenzhihuai-ws2p67c924ax4be9ycx3b0xbdw7n.xn--comzephery-vd6qh05l.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">即把我的个人域名wenzhihuai.com指向zephery.github.io</a>(通过cname)即可，然后开启强制https。如果DNS一直没有校验通过，那么可能是CAA的原因。通过<a href=\"https://myssl.com/dns_check.html?checking=caa#dns_check\" target=\"_blank\" rel=\"noopener noreferrer\">DNS诊断工具</a>来判断。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/github/image-20240201151253084.png\" alt=\"DNS诊断工具\" tabindex=\"0\" loading=\"lazy\"><figcaption>DNS诊断工具</figcaption></figure>\n<p>上面的custom domain配置好了之后，但DNS一直没有校验正确，原因是CAA没有正确解析，需要加上即可。</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>0 issue \"trust-provider.com\"</span></span>\n<span class=\"line\"><span>0 issuewild \"trust-provider.com\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><img src=\"https://github-images.wenzhihuai.com/github/image-20240201151243938.png\" alt=\"CAA记录解析\" tabindex=\"0\" loading=\"lazy\"><figcaption>CAA记录解析</figcaption></figure>\n<p>之后就可以看到Github Pages的DNS校验成功，并且可以强制开启https了。</p>\n<h2>六、Typora图床</h2>\n<p>之前的图床使用的是七牛云和又拍云，都有免费的额度吧，不过看情况未来前景似乎经营不太好，目前改用了腾讯云。存储容量50GB，每个月外网访问流量10GB，满足个人网站使用。具体的配置过程比较简单，就不再阐述了，可以直接看<a href=\"https://blog.svend.cc/upic/tutorials/tencent_cos/\" target=\"_blank\" rel=\"noopener noreferrer\">uPic</a>的官方介绍。</p>\n<h2>七、为自己的内容增加收入</h2>\n<p>有钱才有写作的动力，之前的网站开启了几年的捐赠，总共都没有收到过50块钱，只能从广告这一处想想办法，百度、腾讯广告似乎都不支持个人网站，谷歌可以。配置谷歌广告，网上的教程不少，例如: <a href=\"https://www.sofineday.com/vuepress-vue-google-adsense.html\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress配置谷歌广告-通过vue-google-adsense库</a>，缺点是，大部分的文章都是需要在自己的markdown文件中新增特定的标识符。比如:</p>\n<div class=\"language-md line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"># js 模板引擎 mustache 用法</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ArticleTopAd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ArticleTopAd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">## 一. 使用步骤</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>每一篇文章都要新增显然不符合懒惰的人，下面是个人尝试的解决办法，用的是vuepress2提供的slots插槽。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/github/image-20240201150802070.png\" alt=\"谷歌广告adsense\" tabindex=\"0\" loading=\"lazy\"><figcaption>谷歌广告adsense</figcaption></figure>\n<p>上面的目的是为了获取data-ad-client和data-ad-slot，其中，data-ad-slot为广告单元，不一样。并且，配置完之后可能需要等一个小时才会生效，不要着急。</p>\n<p>docs/.vuepress/config.ts</p>\n<div class=\"language-vue line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"vue\" data-title=\"vue\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">head: [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        \"script\",</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            \"data-ad-client\": \"ca-pub-9037099208128116\",</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            async: true,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            src: \"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">alias: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    \"@theme-hope/components/NormalPage\": path.resolve(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        __dirname,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        \"./components/NormalPage.vue\",</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ),</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">},</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>docs/.vuepress/components/NormalPage.vue</p>\n<div class=\"language-vue line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"vue\" data-title=\"vue\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">normal-page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> #</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">contentBefore</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ins</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"adsbygoogle\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           style</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\">display:block; text-align:center;width: 90%;margin: 0 auto;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           data-ad-layout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"in-article\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           data-ad-format</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fluid\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           data-ad-client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"ca-pub-9037099208128116\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           data-ad-slot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"8206550629\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ins</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">normal-page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NormalPage</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> from</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"vuepress-theme-hope/components/NormalPage.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\"> default</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"adsense-inline\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  components</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    'normal-page'</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NormalPage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  mounted</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">adsenseAddLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  methods</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    adsenseAddLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">      let</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> inlineScript</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> document</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">createElement</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"script\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      inlineScript</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">type</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"text/javascript\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      inlineScript</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">text</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '(adsbygoogle = window.adsbygoogle || []).push({});'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      document</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getElementsByTagName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'body'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">].</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">appendChild</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">inlineScript</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">style</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> lang</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"scss\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> scoped</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">style</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>本地是没办法进行调试的，可以从<a href=\"https://theme-hope.vuejs.press/zh/demo/slot.html\" target=\"_blank\" rel=\"noopener noreferrer\">官网插槽演示</a>的文章中用div进行调试，等修改完毕发布之后，即可在自己的网站上看到相关的广告和收入（浏览器要把封禁广告的插件关闭）。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/github/image-20240201151218077.png\" alt=\"出现的广告\" tabindex=\"0\" loading=\"lazy\"><figcaption>出现的广告</figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/github/image-20240201151334064.png\" alt=\"谷歌广告收入\" tabindex=\"0\" loading=\"lazy\"><figcaption>谷歌广告收入</figcaption></figure>\n<p>收入虽然低，但是基本上个人没有成本，只需要域名的85块钱。</p>\n<h2>常见问题</h2>\n<p><a href=\"https://support.google.com/adsense/thread/149452399/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%B9%BF%E5%91%8A%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%EF%BC%9F?hl=zh-Hans\" target=\"_blank\" rel=\"noopener noreferrer\">为什么广告不能正常显示？</a></p>\n<p>\"建议多写原创高质量的文章出来，AdSense才会匹配出合适的广告，用户感兴趣了才会浏览量增加，你才会有更多的广告收入。\"</p>\n<p>还是得多写一写优质的文章。</p>\n<p>最后，多帮忙点一下个人网站的广告吧，感恩</p>\n<p>网站地址：<a href=\"https://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.wenzhihuai.com</a></p>\n<p>源码地址：<a href=\"https://github.com/Zephery/MyWebsite\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/MyWebsite</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/600-20240126113210252-20240131213935629.png",
      "date_published": "2024-01-25T06:44:04.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "",
      "url": "http://www.wenzhihuai.com/open-source-project/",
      "id": "http://www.wenzhihuai.com/open-source-project/",
      "summary": "jfaowejfoewj",
      "content_html": "<p>jfaowejfoewj</p>\n",
      "date_published": "2024-01-24T10:30:22.000Z",
      "date_modified": "2024-01-24T10:30:22.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "中间件",
      "url": "http://www.wenzhihuai.com/middleware/",
      "id": "http://www.wenzhihuai.com/middleware/",
      "summary": "中间件",
      "content_html": "\n",
      "date_published": "2024-01-24T03:35:40.000Z",
      "date_modified": "2024-02-16T04:00:26.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "",
      "url": "http://www.wenzhihuai.com/interview/tiktok2023.html",
      "id": "http://www.wenzhihuai.com/interview/tiktok2023.html",
      "summary": "tt一面： 1.全程项目 2.lc3，最长无重复子串，滑动窗口解决 tt二面： 全程基础，一直追问 1.java内存模型介绍一下 2.volatile原理 3.内存屏障，使用场景？（我提了在gc中有使用） 4.gc中具体是怎么使用内存屏障的，详细介绍 5.cms和g1介绍一下，g1能取代cms吗？g1和cms各自的使用场景是什么 6.线程内存分配方式，...",
      "content_html": "<p>tt一面：<br>\n1.全程项目<br>\n2.lc3，最长无重复子串，滑动窗口解决</p>\n<p>tt二面：<br>\n全程基础，一直追问<br>\n1.java内存模型介绍一下<br>\n2.volatile原理<br>\n3.内存屏障，使用场景？（我提了在gc中有使用）<br>\n4.gc中具体是怎么使用内存屏障的，详细介绍<br>\n5.cms和g1介绍一下，g1能取代cms吗？g1和cms各自的使用场景是什么<br>\n6.线程内存分配方式，tlab相关<br>\n7.happens-before介绍一下<br>\n8.总线风暴是什么，怎么解决<br>\n9.网络相关，time_wait,close_wait产生原因，带来的影响，怎么解决<br>\n10.算法题，给你一个数字n，求用这个n的各位上的数字组合出最大的小于n的数字m，注意边界case，如2222<br>\n11.场景题，设计一个微信朋友圈，功能包含feed流拉取，评论，转发，点赞等操作</p>\n<p>tt三面：<br>\n大部分聊项目，基础随便问了问<br>\n1.分布式事务，两阶段三阶段流程，区别<br>\n2.mysql主从，同步复制，半同步复制，异步复制<br>\n3.算法题，k个一组翻转链表，类似lc25，区别是最后一组不足k个也要翻转<br>\n4.场景题，设计一个评论系统，包含发布评论，回复评论，评论点赞等功能，用户过亿，qps百万</p>\n",
      "date_published": "2023-04-02T12:15:06.000Z",
      "date_modified": "2024-01-24T03:25:58.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Mysql",
      "url": "http://www.wenzhihuai.com/database/mysql/1mysql.html",
      "id": "http://www.wenzhihuai.com/database/mysql/1mysql.html",
      "summary": "Mysql imgimg",
      "content_html": "\n<figure><img src=\"https://github-images.wenzhihuai.com/images/img.png\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n",
      "image": "https://github-images.wenzhihuai.com/images/img.png",
      "date_published": "2023-03-26T12:44:23.000Z",
      "date_modified": "2024-02-06T07:53:39.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "数据库缓存",
      "url": "http://www.wenzhihuai.com/database/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%93%E5%AD%98.html",
      "id": "http://www.wenzhihuai.com/database/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%93%E5%AD%98.html",
      "summary": "数据库缓存 在MySQL 5.6开始，就已经默认禁用查询缓存了。在MySQL 8.0，就已经删除查询缓存功能了。 将select语句和语句的结果做hash映射关系后保存在一定的内存区域内。 禁用原因： 1.命中率低 2.写时所有都失效 禁用了：https://mp.weixin.qq.com/s/_EXXmciNdgXswSVzKyO4xg。 查询缓存...",
      "content_html": "\n<p>在MySQL 5.6开始，就已经默认禁用查询缓存了。在MySQL 8.0，就已经删除查询缓存功能了。</p>\n<p>将select语句和语句的结果做<a href=\"https://so.csdn.net/so/search?q=hash&amp;spm=1001.2101.3001.7020\" target=\"_blank\" rel=\"noopener noreferrer\">hash</a>映射关系后保存在一定的内存区域内。</p>\n<p>禁用原因：</p>\n<p>1.命中率低</p>\n<p>2.写时所有都失效</p>\n<p>禁用了：<a href=\"https://mp.weixin.qq.com/s/_EXXmciNdgXswSVzKyO4xg%E3%80%82\" target=\"_blank\" rel=\"noopener noreferrer\">https://mp.weixin.qq.com/s/_EXXmciNdgXswSVzKyO4xg。</a></p>\n<p>查询缓存讲解：<a href=\"https://blog.csdn.net/zzddada/article/details/124116182\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/zzddada/article/details/124116182</a></p>\n",
      "date_published": "2023-03-26T12:44:23.000Z",
      "date_modified": "2024-01-25T11:42:16.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "spark on k8s operator",
      "url": "http://www.wenzhihuai.com/kubernetes/spark%20on%20k8s%20operator.html",
      "id": "http://www.wenzhihuai.com/kubernetes/spark%20on%20k8s%20operator.html",
      "summary": "spark on k8s operator Spark operator是一个管理Kubernetes上的Apache Spark应用程序生命周期的operator，旨在像在Kubernetes上运行其他工作负载一样简单的指定和运行spark应用程序。 使用Spark Operator管理Spark应用，能更好的利用Kubernetes原生能力控制和管...",
      "content_html": "\n<p>Spark operator是一个管理Kubernetes上的Apache Spark应用程序生命周期的operator，旨在像在Kubernetes上运行其他工作负载一样简单的指定和运行spark应用程序。</p>\n<p>使用Spark Operator管理Spark应用，能更好的利用Kubernetes原生能力控制和管理Spark应用的生命周期，包括应用状态监控、日志获取、应用运行控制等，弥补Spark on Kubernetes方案在集成Kubernetes上与其他类型的负载之间存在的差距。</p>\n<p>Spark Operator包括如下几个组件：</p>\n<ol>\n<li>SparkApplication控制器：该控制器用于创建、更新、删除SparkApplication对象，同时控制器还会监控相应的事件，执行相应的动作。</li>\n<li>Submission Runner：负责调用spark-submit提交Spark作业，作业提交的流程完全复用Spark on K8s的模式。</li>\n<li>Spark Pod Monitor：监控Spark作业相关Pod的状态，并同步到控制器中。</li>\n<li>Mutating Admission Webhook：可选模块，基于注解来实现Driver/Executor Pod的一些定制化需求。</li>\n<li>SparkCtl：用于和Spark Operator交互的命令行工具。</li>\n</ol>\n<p>安装</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 添加源</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">helm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> add</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> spark-operator</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> https://googlecloudplatform.github.io/spark-on-k8s-operator</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 安装</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">helm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> my-release</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> spark-operator/spark-operator</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --namespace</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> spark-operator</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --create-namespace</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个时候如果直接执行kubectl apply -f examples/spark-pi.yaml调用样例，会出现以下报错，需要创建对象的serviceaccount。</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>forbidden: error looking up service account default/spark: serviceaccount \\\"spark\\\" not found.\\n\\tat io.fabric8.kubernetes.client.dsl.base.OperationSupport.requestFailure(OperationSupport.java:568)\\n\\tat io.fabric8.kubernetes.client.dsl.base.OperationSupport</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>同时也要安装rbac</p>\n<p>rbac的文件在manifest/spark-operator-install/spark-operator-rbac.yaml，需要把namespace全部改为需要运行的namespace，这里我们任务放在default命名空间下，所以全部改为default，源文件见<a href=\"https://github.com/Zephery/spark-java-demo/blob/master/k8s/rbac.yaml\" target=\"_blank\" rel=\"noopener noreferrer\">rbac.yaml</a></p>\n<p>执行脚本，这里用的app.jar是一个读取es数据源，然后计算，为了展示效果，在程序的后面用了TimeUnit.HOURS.sleep(1)方便观察。</p>\n<p>代码如下：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SparkConf</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> sparkConf </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SparkConf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setAppName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Spark WordCount Application (java)\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        sparkConf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.nodes\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"xxx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.port\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"8xx0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.nodes.wan.only\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"true\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.net.http.auth.user\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"xxx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.net.http.auth.pass\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"xxx-xxx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">JavaSparkContext</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> jsc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> JavaSparkContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(sparkConf)) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            JavaRDD</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Object</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> esRDD </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> JavaEsSpark</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">esRDD</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(jsc, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"kibana_sample_data_ecommerce\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">values</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">esRDD</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">partitions</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            esRDD</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(x </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"customer_full_name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">countByValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forEach</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((x, y) </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(x </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \":\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> y));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">HOURS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">InterruptedException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> RuntimeException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(e)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>打包之后kubectl create -f k8s.yaml即可</p>\n<div class=\"language-yaml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yaml\" data-title=\"yaml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">apiVersion</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"sparkoperator.k8s.io/v1beta2\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">kind</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">SparkApplication</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">spark-demo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  namespace</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">default</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">spec</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Scala</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  mode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">cluster</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  image</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">fewfew-docker.pkg.coding.net/spark-java-demo/spark-java-demo-new/spark-java-demo:master-1d8c164bced70a1c66837ea5c0180c61dfb48ac3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  imagePullPolicy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Always</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  mainClass</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">com.spark.es.demo.EsReadGroupByName</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  mainApplicationFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"local:///opt/spark/examples/jars/app.jar\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  sparkVersion</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"3.1.1\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  restartPolicy</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Never</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  driver</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    # 用cores必须要大于等于1，这里用coreRequest</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    coreRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"100m\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    coreLimit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1200m\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    memory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"512m\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    labels</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3.1.1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    serviceAccount</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">sparkoperator</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  executor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    # 用cores必须要大于等于1，这里用coreRequest</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    coreRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"100m\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    instances</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    memory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"512m\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    labels</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3.1.1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>spark-demo-driver                                          1/1     Running   0          2m30s</span></span>\n<span class=\"line\"><span>spark-wordcount-application-java-0ac352810a9728e1-exec-1   1/1     Running   0          2m1s</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>同时会自动生成相应的service。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/e6c9d24egy1h2oeh4gm96j21qg02wweq.jpg\" alt=\"image-20220528203941897\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20220528203941897</figcaption></figure>\n<img src=\"https://github-images.wenzhihuai.com/images/e6c9d24egy1h2oefrpt7yj21ty0u0gpz.jpg\" alt=\"image-20220528203816649\" style=\"zoom:50%;\">\n<p>Spark on k8s operator大大减少了spark的部署与运维成本，用容器的调度来替换掉yarn，</p>\n<h1>源码解析</h1>\n<img src=\"https://github-images.wenzhihuai.com/images/e6c9d24egy1h2phgjds4sj20qo0f075v.jpg\" alt=\"architecture-diagram\" style=\"zoom:80%;\">\n<p>Spark Operator的主要组件如下：</p>\n<p>1、SparkApplication Controller : 用于监控并相应SparkApplication的相关对象的创建、更新和删除事件；</p>\n<p>2、Submission Runner：用于接收Controller的提交指令，并通过spark-submit 来提交Spark作业到K8S集群并创建Driver Pod，driver正常运行之后将启动Executor Pod；</p>\n<p>3、Spark Pod Monitor：实时监控Spark作业相关Pod（Driver、Executor）的运行状态，并将这些状态信息同步到Controller ;</p>\n<p>4、Mutating Admission Webhook：可选模块，但是在Spark Operator中基本上所有的有关Spark pod在Kubernetes上的定制化功能都需要使用到该模块，因此建议将enableWebhook这个选项设置为true。</p>\n<p>5、sparkctl： 基于Spark Operator的情况下可以不再使用kubectl来管理Spark作业了，而是采用Spark Operator专用的作业管理工具sparkctl，该工具功能较kubectl功能更为强大、方便易用。</p>\n<img src=\"https://github-images.wenzhihuai.com/images/e6c9d24egy1h35p5wncymj20hk0e0gly.jpg\" alt=\"image-20220612194403742\" style=\"zoom:50%;\">\n<p>apis：用户编写yaml时的解析</p>\n<p>Batchscheduler：批处理的调度，提供了支持volcano的接口</p>\n<p>Client：</p>\n<p>leader的选举</p>\n<div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" data-title=\"go\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">electionCfg</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> :=</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> leaderelection</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">LeaderElectionConfig</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">   Lock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:          </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">resourceLock</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">   LeaseDuration</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">leaderElectionLeaseDuration</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">   RenewDeadline</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">leaderElectionRenewDeadline</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">   RetryPeriod</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:   </span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">leaderElectionRetryPeriod</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">   Callbacks</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">leaderelection</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">LeaderCallbacks</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      OnStartedLeading</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">func</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">c</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">         close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">startCh</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      OnStoppedLeading</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">func</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">         close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">stopCh</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">   },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">elector</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> :=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> leaderelection</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">NewLeaderElector</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">electionCfg</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>参考：</p>\n<p>1.<a href=\"https://blog.csdn.net/chengyinwu/article/details/121049750\" target=\"_blank\" rel=\"noopener noreferrer\">k8s client-go中Leader选举实现</a></p>\n<p>2.[<a href=\"https://www.cnblogs.com/zhangmingcheng/p/15846133.html\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes基于leaderelection选举策略实现组件高可用</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/e6c9d24egy1h2oeh4gm96j21qg02wweq.jpg",
      "date_published": "2022-06-12T12:19:23.000Z",
      "date_modified": "2024-01-27T18:29:27.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "elastic spark",
      "url": "http://www.wenzhihuai.com/bigdata/spark/elastic-spark.html",
      "id": "http://www.wenzhihuai.com/bigdata/spark/elastic-spark.html",
      "summary": "elastic spark Hadoop允许Elasticsearch在Spark中以两种方式使用：通过自2.1以来的原生RDD支持，或者通过自2.0以来的Map/Reduce桥接器。从5.0版本开始，elasticsearch-hadoop就支持Spark 2.0。目前spark支持的数据源有： （1）文件系统：LocalFS、HDFS、Hive、t...",
      "content_html": "\n<p>Hadoop允许Elasticsearch在Spark中以两种方式使用：通过自2.1以来的原生RDD支持，或者通过自2.0以来的Map/Reduce桥接器。从5.0版本开始，elasticsearch-hadoop就支持Spark 2.0。目前spark支持的数据源有：<br>\n（1）文件系统：LocalFS、HDFS、Hive、text、parquet、orc、json、csv<br>\n（2）数据RDBMS：mysql、oracle、mssql<br>\n（3）NOSQL数据库：HBase、ES、Redis<br>\n（4）消息对象：Redis</p>\n<p>elasticsearch相对hdfs来说，容易搭建、并且有可视化kibana支持，非常方便spark的初学入门，本文主要讲解用elasticsearch-spark的入门。</p>\n<figure><img src=\"https://databricks.com/wp-content/uploads/2019/02/largest-open-source-apache-spark.png\" alt=\"Spark - Apache Spark\" tabindex=\"0\" loading=\"lazy\"><figcaption>Spark - Apache Spark</figcaption></figure>\n<h2>一、原生RDD支持</h2>\n<h3>1.1 基础配置</h3>\n<p>相关库引入：</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.elasticsearch&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;elasticsearch-spark-30_2.13&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;8.1.3&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>SparkConf配置，更多详细的请点击<a href=\"https://www.elastic.co/Zephery/en/elasticsearch/hadoop/current/configuration.html\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>或者源码<a href=\"https://github.com/elastic/elasticsearch-hadoop/blob/master/mr/src/main/java/org/elasticsearch/hadoop/cfg/ConfigurationOptions.java\" target=\"_blank\" rel=\"noopener noreferrer\">ConfigurationOptions</a>。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SparkConf</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getSparkConf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    SparkConf</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> sparkConf </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SparkConf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setAppName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"elasticsearch-spark-demo\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    sparkConf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.nodes\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"host\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.port\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"xxxxxx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.nodes.wan.only\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"true\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.net.http.auth.user\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"elxxxxastic\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es.net.http.auth.pass\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"xxxx\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setMaster</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"local[*]\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> sparkConf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>1.2 读取es数据</h3>\n<p>这里用的是kibana提供的sample data里面的索引kibana_sample_data_ecommerce，也可以替换成自己的索引。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">[] args) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    SparkConf</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> conf </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getSparkConf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">JavaSparkContext</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> jsc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> JavaSparkContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(conf)) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        JavaPairRDD</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Map</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Object</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> esRDD </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                JavaEsSpark</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">esRDD</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(jsc, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"kibana_sample_data_ecommerce\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        esRDD</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">collect</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">forEach</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">println);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>esRDD同时也支持query语句esRDD(final JavaSparkContext jsc, final String resource, final String query)，一般对es的查询都需要根据时间筛选一下，不过相对于es的官方sdk，并没有那么友好的api，只能直接使用原生的dsl语句。</p>\n<h3>1.3 写数据</h3>\n<p>支持序列化对象、json，并且能够使用占位符动态索引写入数据（使用较少），不过多介绍了。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> jsonWrite</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(){</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> json1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"{</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">reason</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> : </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">business</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">,</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">airport</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> : </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">SFO</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> json2 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"{</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">participants</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> : 5,</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">airport</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> : </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">OTP</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    JavaRDD</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> stringRDD </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> jsc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parallelize</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">ImmutableList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">of</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(json1, json2));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    JavaEsSpark</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">saveJsonToEs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(stringRDD, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"spark-json\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>比较常用的读写也就这些，更多可以看下官网相关介绍。</p>\n<h2>二、Spark Streaming</h2>\n<p>spark的实时处理，es5.0的时候开始支持，目前</p>\n<h2>三、Spark SQL</h2>\n<h2>四、Spark Structure Streaming</h2>\n<h2>五、Spark on kubernetes Operator</h2>\n<h1>参考：</h1>\n<p>1.<a href=\"https://www.elastic.co/Zephery/en/elasticsearch/hadoop/current/spark.html\" target=\"_blank\" rel=\"noopener noreferrer\">Apache Spark support</a></p>\n<p>2.<a href=\"https://github.com/elastic/elasticsearch-hadoop\" target=\"_blank\" rel=\"noopener noreferrer\">elasticsearch-hadoop</a></p>\n<p>3.<a href=\"https://www.jianshu.com/p/996c60f0492a\" target=\"_blank\" rel=\"noopener noreferrer\">使用SparkSQL操作Elasticsearch - Spark入门教程</a></p>\n",
      "image": "https://databricks.com/wp-content/uploads/2019/02/largest-open-source-apache-spark.png",
      "date_published": "2022-05-03T11:42:30.000Z",
      "date_modified": "2024-01-25T11:42:16.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "基于kubernetes的分布式限流",
      "url": "http://www.wenzhihuai.com/java/%E5%9F%BA%E4%BA%8Ekubernetes%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%99%90%E6%B5%81.html",
      "id": "http://www.wenzhihuai.com/java/%E5%9F%BA%E4%BA%8Ekubernetes%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%99%90%E6%B5%81.html",
      "summary": "基于kubernetes的分布式限流 做为一个数据上报系统，随着接入量越来越大，由于 API 接口无法控制调用方的行为，因此当遇到瞬时请求量激增时，会导致接口占用过多服务器资源，使得其他请求响应速度降低或是超时，更有甚者可能导致服务器宕机。 一、概念 限流(Ratelimiting)指对应用服务的请求进行限制，例如某一接口的请求限制为 100 个每秒,...",
      "content_html": "\n<p>做为一个数据上报系统，随着接入量越来越大，由于 API 接口无法控制调用方的行为，因此当遇到瞬时请求量激增时，会导致接口占用过多服务器资源，使得其他请求响应速度降低或是超时，更有甚者可能导致服务器宕机。</p>\n<h2>一、概念</h2>\n<p>限流(Ratelimiting)指对应用服务的请求进行限制，例如某一接口的请求限制为 100 个每秒,对超过限制的请求则进行快速失败或丢弃。</p>\n<h3>1.1 使用场景</h3>\n<p>限流可以应对：</p>\n<ul>\n<li>热点业务带来的突发请求；</li>\n<li>调用方 bug 导致的突发请求；</li>\n<li>恶意攻击请求。</li>\n</ul>\n<h3>1.2 维度</h3>\n<p>对于限流场景，一般需要考虑两个维度的信息：<br>\n<strong>时间</strong><br>\n限流基于某段时间范围或者某个时间点，也就是我们常说的“时间窗口”，比如对每分钟、每秒钟的时间窗口做限定<br>\n<strong>资源</strong><br>\n基于可用资源的限制，比如设定最大访问次数，或最高可用连接数。<br>\n  限流就是在某个时间窗口对资源访问做限制，比如设定每秒最多100个访问请求。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125210940819-6188218.png\" alt=\"image.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>image.png</figcaption></figure>\n<h3>1.3 分布式限流</h3>\n<p>分布式限流相比于单机限流，只是把限流频次分配到各个节点中，比如限制某个服务访问100qps，如果有10个节点，那么每个节点理论上能够平均被访问10次，如果超过了则进行频率限制。</p>\n<h2>二、分布式限流常用方案</h2>\n<p><strong>基于Guava的客户端限流</strong><br>\nGuava是一个客户端组件，在其多线程模块下提供了以RateLimiter为首的几个限流支持类。它只能对“当前”服务进行限流，即它不属于分布式限流的解决方案。</p>\n<p><strong>网关层限流</strong><br>\n服务网关，作为整个分布式链路中的第一道关卡，承接了所有用户来访请求。我们在网关层进行限流，就可以达到了整体限流的目的了。目前，主流的网关层有以软件为代表的Nginx，还有Spring Cloud中的Gateway和Zuul这类网关层组件，也有以硬件为代表的F5。</p>\n<p><strong>中间件限流</strong><br>\n将限流信息存储在分布式环境中某个中间件里（比如Redis缓存），每个组件都可以从这里获取到当前时刻的流量统计，从而决定是拒绝服务还是放行流量。</p>\n<p><strong>限流组件</strong><br>\n目前也有一些开源组件提供了限流的功能，比如Sentinel就是一个不错的选择。Sentinel是阿里出品的开源组件，并且包含在了Spring Cloud Alibaba组件库中。Hystrix也具有限流的功能。</p>\n<p>Guava的Ratelimiter设计实现相当不错，可惜只能支持单机，网关层限流如果是单机则不太满足高可用，并且分布式网关的话还是需要依赖中间件限流，而redis之类的网络通信需要占用一小部分的网络消耗。阿里的Sentinel也是同理，底层使用的是redis或者zookeeper，每次访问都需要调用一次redis或者zk的接口。那么在云原生场景下，我们有没有什么更好的办法呢？</p>\n<p>对于极致追求高性能的服务不需要考虑熔断、降级来说，是需要尽量减少网络之间的IO，那么是否可以通过一个总限频然后分配到具体的单机里面去，在单机中实现平均的限流，比如限制某个ip的qps为100，服务总共有10个节点，那么平均到每个服务里就是10qps，此时就可以通过guava的ratelimiter来实现了，甚至说如果服务的节点动态调整，单个服务的qps也能动态调整。</p>\n<h2>三、基于kubernetes的分布式限流</h2>\n<p>在Spring Boot应用中，定义一个filter，获取请求参数里的key（ip、userId等），然后根据key来获取rateLimiter，其中，rateLimiter的创建由数据库定义的限频数和副本数来判断，最后，再通过rateLimiter.tryAcquire来判断是否可以通过。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125211018162.png\" alt=\"企业微信截图_868136b4-f9e2-4813-bc02-281a66756ecd.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>企业微信截图_868136b4-f9e2-4813-bc02-281a66756ecd.png</figcaption></figure>\n<h3>3.1 kubernetes中的副本数</h3>\n<p>在实际的服务中，数据上报服务一般无法确定客户端的上报时间、上报量，特别是对于这种要求高性能，服务一般都会用到HPA来实现动态扩缩容，所以，需要去间隔一段时间去获取服务的副本数。</p>\n<div class=\"language-go line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"go\" data-title=\"go\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">func</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> CountDeploymentSize</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">namespace</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> string</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">deploymentName</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> string</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">*</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int32</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">\tdeployment</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> :=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">AppsV1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Deployments</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">namespace</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">TODO</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">deploymentName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">metav1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">GetOptions</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{})</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">\tif</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> !=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> nil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">\t\treturn</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> nil</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">\treturn</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> deployment</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">Spec</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">Replicas</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>用法：GET host/namespaces/test/deployments/k8s-rest-api直接即可。</p>\n<h3>3.2 rateLimiter的创建</h3>\n<p>在RateLimiterService中定义一个LoadingCache&lt;String, RateLimiter&gt;，其中，key可以为ip、userId等，并且，在多线程的情况下，使用refreshAfterWrite只阻塞加载数据的线程，其他线程则返回旧数据，极致发挥缓存的作用。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> LoadingCache</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RateLimiter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> loadingCache </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Caffeine</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">newBuilder</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">maximumSize</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">10_000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">refreshAfterWrite</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">20</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">TimeUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">MINUTES</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">this</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">createRateLimit);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//定义一个默认最小的QPS</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> minQpsLimit </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>之后是创建rateLimiter，获取总限频数totalLimit和副本数replicas，之后是自己所需的逻辑判断，可以根据totalLimit和replicas的情况来进行qps的限定。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RateLimiter</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> createRateLimit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> key) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"createRateLimit,key:{}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, key);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> totalLimit </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> 获取总限频数，可以在数据库中定义</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> replicas </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> kubernetesService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getDeploymentReplicas</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    RateLimiter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (totalLimit </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> replicas </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        rateLimiter </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> RateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(totalLimit);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (totalLimit </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> nodeQpsLimit </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> totalLimit </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> replicas</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        rateLimiter </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> RateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(nodeQpsLimit </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> minQpsLimit </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> nodeQpsLimit </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> minQpsLimit);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        rateLimiter </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> RateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">create</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(minQpsLimit);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"create rateLimiter success,key:{},rateLimiter:{}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, key, rateLimiter);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> rateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>3.3 rateLimiter的获取</h3>\n<p>根据key获取RateLimiter，如果有特殊需求的话，需要判断key不存在的尝尽</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RateLimiter</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getRateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> key) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> loadingCache</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(key);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>3.4 filter里的判断</h3>\n<p>最后一步，就是使用rateLimiter来进行限流，如果rateLimiter.tryAcquire()为true，则进行filterChain.doFilter(request, response)，如果为false，则返回HttpStatus.TOO_MANY_REQUESTS</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RateLimiterFilter</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> implements</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Filter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Resource</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> RateLimiterService</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rateLimiterService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> doFilter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ServletRequest</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ServletResponse</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">FilterChain</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> filterChain</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> throws</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> IOException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ServletException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        HttpServletRequest</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> httpServletRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (HttpServletRequest) request;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        HttpServletResponse</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> httpServletResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (HttpServletResponse) response;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> httpServletRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getHeader</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        RateLimiter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> rateLimiterService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getRateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(key);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (rateLimiter </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">rateLimiter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">tryAcquire</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                filterChain</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">doFilter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(request, response);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                httpServletResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStatus</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">HttpStatus</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">TOO_MANY_REQUESTS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            filterChain</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">doFilter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(request, response);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>四、性能压测</h2>\n<p>为了方便对比性能之间的差距，我们在本地单机做了下列测试，其中，总限频都设置为3万。</p>\n<p><strong>无限流</strong></p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125211018144.png\" alt=\"企业微信截图_ea1b7815-3b89-43bf-aed7-240e135bdad1.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>企业微信截图_ea1b7815-3b89-43bf-aed7-240e135bdad1.png</figcaption></figure>\n<p><strong>使用redis限流</strong></p>\n<p>其中，ping redis大概6-7ms左右，对应的，每次请求需要访问redis，时延都有大概6-7ms，性能下降明显</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125211018162-6188218.png\" alt=\"企业微信截图_9118c4e0-c7f3-4e74-9649-4cd4d56fda79.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>企业微信截图_9118c4e0-c7f3-4e74-9649-4cd4d56fda79.png</figcaption></figure>\n<p><strong>自研限流</strong></p>\n<p>性能几乎追平无限流的场景，guava的rateLimiter确实表现卓越</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125211018163.png\" alt=\"企业微信截图_9f6510bd-be9e-438b-aa9d-bdd13ebca953.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>企业微信截图_9f6510bd-be9e-438b-aa9d-bdd13ebca953.png</figcaption></figure>\n<h2>五、其他问题</h2>\n<p><strong>5.1 对于保证qps限频准确的时候，应该怎么解决呢？</strong></p>\n<p>在k8s中，服务是动态扩缩容的，相应的，每个节点应该都要有所变化，如果对外宣称限频100qps，而且后续业务方真的要求百分百准确，只能把LoadingCache&lt;String, RateLimiter&gt;的过期时间调小一点，让它能够近实时的更新单节点的qps。这里还需要考虑一下k8s的压力，因为每次都要获取副本数，这里也是需要做缓存的</p>\n<p><strong>5.2 服务从1个节点动态扩为4个节点，这个时候新节点识别为4，但其实有些并没有启动完，会不会造成某个节点承受了太大的压力</strong></p>\n<p>理论上是存在这个可能的，这个时候需要考虑一下初始的副本数的，扩缩容不能一蹴而就，一下子从1变为4变为几十个这种。一般的话，生产环境肯定是不能只有一个节点，并且要考虑扩缩容的话，至于要有多个副本预备的</p>\n<p><strong>5.3 如果有多个副本，怎么保证请求是均匀的</strong></p>\n<p>这个是依赖于k8s的service负载均衡策略的，这个我们之前做过实验，流量确实是能够均匀的落到节点上的。还有就是，我们整个限流都是基于k8s的，如果k8s出现问题，那就是整个集群所有服务都有可能出现问题了。</p>\n<h2>参考</h2>\n<p>1.<a href=\"https://blog.csdn.net/hou_ge/article/details/113869419\" target=\"_blank\" rel=\"noopener noreferrer\">常见的分布式限流解决方案</a><br>\n2.<a href=\"https://www.infoq.cn/article/qg2tx8fyw5vt-f3hh673\" target=\"_blank\" rel=\"noopener noreferrer\">分布式服务限流实战</a><br>\n3.<a href=\"https://www.cnblogs.com/huilei/p/13773557.html\" target=\"_blank\" rel=\"noopener noreferrer\">高性能</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/1240-20240125210940819-6188218.png",
      "date_published": "2022-04-09T05:35:51.000Z",
      "date_modified": "2024-01-26T03:58:56.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "【elasticsearch】搜索过程详解",
      "url": "http://www.wenzhihuai.com/database/elasticsearch/%E3%80%90elasticsearch%E3%80%91%E6%90%9C%E7%B4%A2%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3.html",
      "id": "http://www.wenzhihuai.com/database/elasticsearch/%E3%80%90elasticsearch%E3%80%91%E6%90%9C%E7%B4%A2%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3.html",
      "summary": "【elasticsearch】搜索过程详解 本文基于elasticsearch8.1。在es搜索中，经常会使用索引+星号，采用时间戳来进行搜索，比如aaaa-*在es中是怎么处理这类请求的呢？是对匹配的进行搜索呢还是仅仅根据时间找出索引，然后才遍历索引进行搜索。在了解其原理前先了解一些基本知识。 SearchType QUERY_THEN_FETCH(...",
      "content_html": "\n<p>本文基于elasticsearch8.1。在es搜索中，经常会使用索引+星号，采用时间戳来进行搜索，比如aaaa-*在es中是怎么处理这类请求的呢？是对匹配的进行搜索呢还是仅仅根据时间找出索引，然后才遍历索引进行搜索。在了解其原理前先了解一些基本知识。</p>\n<h3>SearchType</h3>\n<p>QUERY_THEN_FETCH(默认)：第一步，先向所有的shard发出请求，各分片只返回排序和排名相关的信息（注意，不包括文档document)，然后按照各分片返回的分数进行重新排序和排名，取前size个文档。然后进行第二步，去相关的shard取document。这种方式返回的document与用户要求的size是相等的。<br>\nDFS_QUERY_THEN_FETCH：比第1种方式多了一个初始化散发(initial scatter)步骤。</p>\n<p>为了能够深刻了解es的搜索过程，首先创建3个索引，每个索引指定一天的一条记录。</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>POST aaaa-16/_doc</span></span>\n<span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>  \"@timestamp\": \"2022-02-16T16:21:15.000Z\",</span></span>\n<span class=\"line\"><span>  \"word\":\"16\"</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>POST aaaa-17/_doc</span></span>\n<span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>  \"@timestamp\": \"2022-02-17T16:21:15.000Z\",</span></span>\n<span class=\"line\"><span>  \"word\":\"17\"</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>POST aaaa-18/_doc</span></span>\n<span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>  \"@timestamp\": \"2022-02-18T16:21:15.000Z\",</span></span>\n<span class=\"line\"><span>  \"word\":\"18\"</span></span>\n<span class=\"line\"><span>}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>即可在kibana上看到3条数据</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240.png\" alt=\"image-20220219195141327\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20220219195141327</figcaption></figure>\n<p>此时，假设我们用一个索引+星号来搜索，es内部的搜索是怎么样的呢？</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>GET aaaa*/_search</span></span>\n<span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>  \"query\": {</span></span>\n<span class=\"line\"><span>    \"range\": {</span></span>\n<span class=\"line\"><span>      \"@timestamp\": {</span></span>\n<span class=\"line\"><span>        \"gte\": \"2022-02-18T10:21:15.000Z\",</span></span>\n<span class=\"line\"><span>        \"lte\": \"2022-02-18T17:21:15.000Z\"</span></span>\n<span class=\"line\"><span>      }</span></span>\n<span class=\"line\"><span>    }</span></span>\n<span class=\"line\"><span>  }</span></span>\n<span class=\"line\"><span>}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>正好命中一条记录返回。</p>\n<div class=\"language-json line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"took\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"timed_out\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#D19A66\">false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"_shards\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"total\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"successful\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"skipped\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"failed\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"hits\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"total\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      \"relation\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"eq\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"max_score\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1.0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    \"hits\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_index\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"aaaa-18\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_id\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0zB2O38BoMIMP8QzHgdq\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_score\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1.0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        \"_source\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          \"@timestamp\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"2022-02-18T16:21:15.000Z\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">          \"word\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> : </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"18\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>一、es的分布式搜索过程</h2>\n<p>一个搜索请求必须询问请求的索引中所有分片的某个副本来进行匹配。假设一个索引有5个主分片，每个主分片有1个副分片，共10个分片，一次搜索请求会由5个分片来共同完成，它们可能是主分片，也可能是副分片。也就是说，一次搜索请求只会命中所有分片副本中的一个。当搜索任务执行在分布式系统上时，整体流程如下图所示。图片来源<a href=\"https://weread.qq.com/web/reader/f9c32dc07184876ef9cdeb6k7f33291023d7f39f8317e0b\" target=\"_blank\" rel=\"noopener noreferrer\">Elasitcsearch源码解析与优化实战</a></p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205906732.png\" alt=\"2\" tabindex=\"0\" loading=\"lazy\"><figcaption>2</figcaption></figure>\n<h3>1.1 搜索入口</h3>\n<p>整个http请求的入口，主要使用的是Netty4HttpRequestHandler。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">ChannelHandler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Sharable</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Netty4HttpRequestHandler</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SimpleChannelInboundHandler</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">HttpPipelinedRequest</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    protected</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> channelRead0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ChannelHandlerContext</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> ctx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">HttpPipelinedRequest</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> httpRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Netty4HttpChannel</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> channel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ctx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">channel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">attr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Netty4HttpServerTransport</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">HTTP_CHANNEL_KEY</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        boolean</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> success</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            serverTransport</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">incomingRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(httpRequest, channel);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            success </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">finally</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (success </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                httpRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">release</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>二、初步调用流程</h2>\n<p>调用链路过程：Netty4HttpRequestHandler.channelRead0-&gt;AbstractHttpServerTransport.incomingRequest-&gt;AbstractHttpServerTransport.handleIncomingRequest-&gt;AbstractHttpServerTransport.dispatchRequest-&gt;RestController.dispatchRequest(实现了HttpServerTransport.Dispatcher)-&gt;SecurityRestFilter.handleRequest-&gt;BaseRestHandler.handleRequest-&gt;action.accept(channel)-&gt;RestCancellableNodeClient.doExecute-&gt;NodeClient.executeLocally-&gt;RequestFilterChain.proceed-&gt;TransportAction.proceed-&gt;TransportSearchAction.doExecute-&gt;TransportSearchAction.executeRequest(判断是本地执行还是远程执行)-&gt;TransportSearchAction.searchAsyncAction</p>\n<p>协调节点的主要功能是接收请求，解析并构建目的的shard列表，然后异步发送到数据节点进行请求查询。具体就不细讲了，可按着debug的来慢慢调试。</p>\n<p>特别注意下RestCancellableNodeClient.doExecute，从executeLocally执行所有的查询过程，并注册监听listener.onResponse(response)，然后响应。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> extends ActionRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> extends ActionResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> doExecute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    TaskHolder</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> taskHolder </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> TaskHolder</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Task</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> task </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> client</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">executeLocally</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(action, request, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ActionListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> onResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Response</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                closeListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">unregisterTask</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(taskHolder);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">finally</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                listener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">onResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(response);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其次要注意的是：TransportSearchAction.searchAsyncAction才开始真正的搜索过程</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchPhase</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> searchAsyncAction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> QueryPhaseResultConsumer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> queryResultConsumer </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> searchPhaseController</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">newSearchPhaseResults</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">  AbstractSearchAsyncAction</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">?</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchPhaseResult</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> searchAsyncAction </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> switch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">searchRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">searchType</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    case</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> DFS_QUERY_THEN_FETCH </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SearchDfsQueryThenFetchAsyncAction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    case</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> QUERY_THEN_FETCH </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SearchQueryThenFetchAsyncAction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> searchAsyncAction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>之后就是执行AbstractSearchAsyncAction.start，启动AbstractSearchAsyncAction.executePhase的查询动作。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">此处的SearchPhase实现类为SearchQueryThenFetchAsyncAction</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> executePhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SearchPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> phase) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        phase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Exception</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isDebugEnabled</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">debug</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ParameterizedMessage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Failed to execute [{}] while moving to [{}] phase\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, request, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">phase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()), e);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        onPhaseFailure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(phase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> e)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>三、协调节点</h2>\n<p>两阶段相应的实现位置：查询（Query）阶段—search.SearchQueryThenFetchAsyncAction；取回（Fetch）阶段—search.FetchSearchPhase。它们都继承自SearchPhase，如下图所示。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125210335027.png\" alt=\"23\" tabindex=\"0\" loading=\"lazy\"><figcaption>23</figcaption></figure>\n<h3>3.1 query阶段</h3>\n<p>图片来源<a href=\"https://www.elastic.co/Zephery/en/elasticsearch/Zephery/current/_query_phase.html\" target=\"_blank\" rel=\"noopener noreferrer\">官网</a>，比较旧，但任然可用</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125210338196.png\" alt=\"12\" tabindex=\"0\" loading=\"lazy\"><figcaption>12</figcaption></figure>\n<p>（1）客户端发送一个search请求到node3，node3创建一个大小为from，to的优先级队列。<br>\n（2）node3转发转发search请求至索引的主分片或者副本，每个分片执行查询请求，并且将结果放到一个排序之后的from、to大小的优先级队列。<br>\n（3）每个分片把文档id和排序之后的值返回给协调节点node3，node3把结果合并然后创建一个全局排序之后的结果。</p>\n<div class=\"language-. line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\".\" data-title=\".\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>在RestSearchAction#prepareRequest方法中将请求体解析为SearchRequest 数据结构: </span></span>\n<span class=\"line\"><span>public RestChannelConsumer prepareRequest(.. .) {</span></span>\n<span class=\"line\"><span>    SearchRequest searchRequest = new SearchRequest();</span></span>\n<span class=\"line\"><span>    request.withContentOrSourceParamParserOrNull (parser -&gt;</span></span>\n<span class=\"line\"><span>        parseSearchRequest (searchRequest, request, parser, setSize));</span></span>\n<span class=\"line\"><span>    ...</span></span>\n<span class=\"line\"><span>}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>3.1.1 构造目的shard列表</h4>\n<p>将请求涉及的本集群shard列表和远程集群的shard列表(远程集群用于跨集群访问)合并：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> executeSearch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">..</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> .</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> GroupShardsIterator</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SearchShardIterator</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> shardIterators </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> mergeShardsIterators</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(localShardIterators</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> remoteShardIterators)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    localShardIterators </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> StreamSupport</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">stream</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">localShardRoutings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">spliterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(it </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    OriginalIndices</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> finalIndices</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> finalIndicesMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">it</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shardId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getIndex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getUUID</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    assert</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> finalIndices </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SearchShardIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">searchRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLocalClusterAlias</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">it</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shardId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">it</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getShardRoutings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), finalIndices);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">collect</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Collectors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\t...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>查看结果</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205916232.png\" alt=\"241\" tabindex=\"0\" loading=\"lazy\"><figcaption>241</figcaption></figure>\n<h4>3.1.2 对所有分片进行搜索</h4>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">AbstractSearchAsyncAction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">run</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">对每个分片进行搜索查询</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> shardsIts</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchShardIterator</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> shardRoutings </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> shardsIts</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    assert</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> shardRoutings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">skip</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    assert</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> shardIndexMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">containsKey</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(shardRoutings);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> shardIndex </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> shardIndexMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(shardRoutings);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    performPhaseOnShard</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(shardIndex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> shardRoutings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> shardRoutings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nextOrNull</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中shardsIts是所有aaaa*的所有索引+其中一个副本</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205923525.png\" alt=\"2141\" tabindex=\"0\" loading=\"lazy\"><figcaption>2141</figcaption></figure>\n<h4>3.1.3 分片具体的搜索过程</h4>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">AbstractSearchAsyncAction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">performPhaseOnShard</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> performPhaseOnShard</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ..</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    executePhaseOnShard</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">..</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> .</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        //收到执行成功的回复</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> inne </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rOnResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">FirstResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> result) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            maybeFork</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> () </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> onShardResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (result，shardIt) )</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        //收到执行失败的回复</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> onFailure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Exception</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> t) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            maybeFork</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> () </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> onShardFailure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (shardIndex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> shard</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> shard</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">. </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">currentNodeId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">，shardIt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> t))</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    })</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>分片结果，当前线程</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//AbstractSearchAsyncAction.onShardResult</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> onShardResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">FirstResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchShardIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> shardIt) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    onShardSuccess</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(result)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    success </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fulShardExecution</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(shardIt)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//AbstractSearchAsyncAction.onShardResultConsumed</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> successfulShardExecution</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SearchShardIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> shardsIt) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //计数器累加.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> xTotalOps </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> totalOps</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">addAndGet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (remainingOpsOnIterator);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //检查是否收到全部回复</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (xTotalOps </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> expectedTotalOps) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        onPhaseDone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (xTota1Ops </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> expectedTotal0ps) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> AssertionError</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ..</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205928956.png\" alt=\"412\" tabindex=\"0\" loading=\"lazy\"><figcaption>412</figcaption></figure>\n<p>此处忽略了搜索结果totalHits为0的结果，并将结果进行累加，当xTotalOps等于expectedTotalOps时开始AbstractSearchAsyncAction.onPhaseDone再进行AbstractSearchAsyncAction.executeNextPhase取回阶段</p>\n<h3>3.2 Fetch阶段</h3>\n<p>取回阶段，图片来自<a href=\"https://www.elastic.co/Zephery/en/elasticsearch/Zephery/current/_fetch_phase.html\" target=\"_blank\" rel=\"noopener noreferrer\">官网</a>，</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205939879.png\" alt=\"412412\" tabindex=\"0\" loading=\"lazy\"><figcaption>412412</figcaption></figure>\n<p>（1）各个shard 返回的只是各文档的id和排序值 IDs and sort values ，coordinate node根据这些id&amp;sort values 构建完priority queue之后，然后把程序需要的document 的id发送mget请求去所有shard上获取对应的document</p>\n<p>（2）各个shard将document返回给coordinate node</p>\n<p>（3）coordinate node将合并后的document结果返回给client客户端</p>\n<h4>3.2.1 FetchSearchPhase（对应上面的1）</h4>\n<p>Query阶段的executeNextPhase方法触发Fetch阶段，Fetch阶段的起点为FetchSearchPhase#innerRun函数，从查询阶段的shard列表中遍历，跳过查询结果为空的shard，对特定目标shard执行executeFetch来获取数据，其中包括分页信息。对scroll请求的处理也在FetchSearchPhase#innerRun函数中。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> innerRun</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() throws Exception {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> numShards </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getNumShards</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> isScrollSearch </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">scroll</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> !=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> List</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SearchPhaseResult</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> phaseResults </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> queryResults</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">asList</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchPhaseController</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ReducedQueryPhase</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> reducedQueryPhase </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> resultConsumer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">reduce</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> queryAndFetchOptimization </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> queryResults</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Runnable</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> finishPhase </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> () </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> moveToNextPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        searchPhaseController</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        queryResults</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        reducedQueryPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        queryAndFetchOptimization </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> queryResults </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> fetchResults</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getAtomicArray</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    )</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> docIdsToLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">                IntArrayList</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> entry </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> docIdsToLoad[i]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">                SearchPhaseResult</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> queryResult </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> queryResults</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (entry </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) { </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (queryResult </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                        releaseIrrelevantSearchContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">queryResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">queryResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                        progressListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">notifyFetchResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                    counter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">countDown</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                }</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">                    executeFetch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                            queryResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getShardIndex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                            shardTarget</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                            counter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                            fetchSearchRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                            queryResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">queryResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                            connection</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                        )</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>再看源码：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">启动一个线程来fetch</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">AbstractSearchAsyncAction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">executePhase</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">FetchSearchPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">run</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">FetchSearchPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">innerRun</span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">FetchSearchPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">executeFetch</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> executeFetch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getSearchTransport</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sendExecuteFetch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            connection,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            fetchSearchRequest,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getTask</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchActionListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">FetchSearchResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;(shardTarget, shardIndex) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> innerOnResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">FetchSearchResult</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                  progressListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">notifyFetchResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(shardIndex);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                  counter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">onResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(result);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> onFailure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Exception</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                  progressListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">notifyFetchFailure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(shardIndex, shardTarget, e);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                  counter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">onFailure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(shardIndex, shardTarget, e);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        );</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205944929.png\" alt=\"13413\" tabindex=\"0\" loading=\"lazy\"><figcaption>13413</figcaption></figure>\n<p>counter是一个收集器CountedCollector，onResult(result)主要是每次收到的shard数据存放，并且执行一次countDown，当所有shard数据收集完之后，然后触发一次finishPhase。</p>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span># CountedCollector.class</span></span>\n<span class=\"line\"><span>void countDown() {</span></span>\n<span class=\"line\"><span>    assert counter.isCountedDown() == false : \"more operations executed than specified\";</span></span>\n<span class=\"line\"><span>    if (counter.countDown()) {</span></span>\n<span class=\"line\"><span>        onFinish.run();</span></span>\n<span class=\"line\"><span>    }</span></span>\n<span class=\"line\"><span>}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>moveToNextPhase方法执行下一阶段，下-阶段要执行的任务定义在FetchSearchPhase构造 函数中，主要是触发ExpandSearchPhase。</p>\n<h4>3.2.2 ExpandSearchPhase（对应上图的2）</h4>\n<p>AbstractSearchAsyncAction.executePhase-&gt;ExpandSearchPhase.run。取回阶段完成之后执行ExpandSearchPhase#run，主要判断是否启用字段折叠，根据需要实现字段折叠功能，如果没有实现字段折叠，则直接返回给客户端。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1339227-c5c82e202430fc45.png\" alt=\"image-20220317000858513\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20220317000858513</figcaption></figure>\n<p>ExpandSearchPhase执行完之后回复客户端，在AbstractSearchAsyncAction.sendSearchResponse方法中实现：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205952628.png\" alt=\"412412\" tabindex=\"0\" loading=\"lazy\"><figcaption>412412</figcaption></figure>\n<h2>四、数据节点</h2>\n<h3>4.1 执行query、fetch流程</h3>\n<p>执行本流程的线程池: search。</p>\n<p>对各种Query请求的处理入口注册于SearchTransportService.registerRequestHandler。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> registerRequestHandler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">TransportService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> transportService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> searchService) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">  transportService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">registerRequestHandler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    QUERY_ACTION_NAME,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    ThreadPool</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Names</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">SAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ShardSearchRequest</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::new</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    (request, channel, task) </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> searchService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">executeQueryPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      request,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      (SearchShardTask) task,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">      new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ChannelActionListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;(channel, QUERY_ACTION_NAME, request)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    )</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  );</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>4.1.1 执行query请求</h4>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"># </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SearchService</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> executeQueryPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ShardSearchRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SearchShardTask</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> task</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ActionListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">SearchPhaseResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> listener) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    assert</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">canReturnNullResponseIfMatchNoDocs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">numberOfShards</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        :</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"empty responses require more than one shard\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> IndexShard</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> shard </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getShard</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(request)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    rewriteAndFetchShardRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(shard</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> listener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">delegateFailure</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((l, orig) </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        ensureAfterSeqNoRefreshed</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(shard, orig, () </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> executeQueryPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(orig, task), l);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    })</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中ensureAfterSeqNoRefreshed是把request任务放到一个名为search的线程池里面执行，容量大小为1000。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/1240-20240125205957133.png\" alt=\"1\" tabindex=\"0\" loading=\"lazy\"><figcaption>1</figcaption></figure>\n<p>主要是用来执行SearchService.executeQueryPhase-&gt;SearchService.loadOrExecuteQueryPhase-&gt;QueryPhase.execute。核心的查询封装在queryPhase.execute(context)中，其中调用Lucene实现检索，同时实现聚合：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SearchContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> searchContext) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    aggregationPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">preProcess</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (searchContext);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    boolean</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rescore </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ( searchContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> searchContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">searcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(),</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> searcher</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">setCheckCancelled</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> indexSort)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (rescore) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        rescorePhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (searchContext);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        suggestPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (searchContext);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        aggregationPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (searchContext);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中包含几个核心功能:</p>\n<ul>\n<li>execute()，调用Lucene、searcher.search()实现搜索</li>\n<li>rescorePhase，全文检索且需要打分</li>\n<li>suggestPhase，自动补全及纠错</li>\n<li>aggregationPhase，实现聚合</li>\n</ul>\n<h4>4.1.2 fetch流程</h4>\n<p>对各种Fetch请求的处理入口注册于SearchTransportService.registerRequestHandler。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">transportService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">registerRequestHandler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    QUERY_FETCH_SCROLL_ACTION_NAME,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    ThreadPool</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Names</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">SAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    InternalScrollSearchRequest</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::new</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    (request, channel, task) </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        searchService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">executeFetchPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            request,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            (SearchShardTask) task,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ChannelActionListener</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;(channel, QUERY_FETCH_SCROLL_ACTION_NAME, request)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        );</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>对Fetch响应的实现封装在SearchService.executeFetchPhase中，核心是调用fetchPhase.execute(context)。按照命中的doc取得相关数据，填充到SearchHits中，最终封装到FetchSearchResult中。</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"># </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">FetchPhase</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> execute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SearchContext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> context) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Profiler</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> profiler </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getProfilers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> ?</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> Profiler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">NOOP</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> :</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getProfilers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">startProfilingFetchPhase</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    SearchHits</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> hits </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      //lucene构建搜索的结果</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        hits </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> buildSearchHits</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> profiler)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">finally</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        ProfileResult</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> profileResult </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> profiler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">finish</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // Only set the shardResults if building search hits was successful</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (hits </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            context</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fetchResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shardResult</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(hits, profileResult);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>五、数据返回</h2>\n<p>入口：RestCancellableNodeClient.doExecute<br>\nTask task = client.executeLocally主要执行查询，并使用了ActionListener来进行监听<br>\n<img src=\"https://github-images.wenzhihuai.com/images/1240-20240125210045403.png\" alt=\"image-20220319003638991\" loading=\"lazy\"></p>\n<p>其中onResponse的调用链路如下：RestActionListener.onResponse-&gt;RestResponseListener.processResponse-&gt;RestController.sendResponse-&gt;DefaultRestChannel.sendResponse-&gt;Netty4HttpChannel.sendResponse</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> sendResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">RestResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> restResponse) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">   httpChannel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sendResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(httpResponse, listener);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>最后由Netty4HttpChannel.sendResponse来响应请求。</p>\n<h2>六、总结</h2>\n<p>当我们以aaaa*这样来搜索的时候，实际上查询了所有匹配以aaaa开头的索引，并且对所有的索引的分片都进行了一次Query，再然后对有结果的分片进行一次fetch，最终才能展示结果。可能觉得好奇，对所有分片都进行一次搜索，遍历分片所有的Lucene分段，会不会太过于消耗资源，因此合并Lucene分段对搜索性能有好处，这里下篇文章在讲吧。同时，聚合是发生在fetch过程中的，并不是lucene。</p>\n<h2>本文参考</h2>\n<ol>\n<li><a href=\"https://weread.qq.com/web/reader/f9c32dc07184876ef9cdeb6k7f33291023d7f39f8317e0b\" target=\"_blank\" rel=\"noopener noreferrer\">Elasitcsearch源码解析与优化实战</a></li>\n<li><a href=\"https://www.jianshu.com/p/b77e80d6c18e\" target=\"_blank\" rel=\"noopener noreferrer\">Elasticsearch源码分析-搜索分析(一)</a></li>\n<li><a href=\"https://www.jianshu.com/p/7174cf716790\" target=\"_blank\" rel=\"noopener noreferrer\">Elasticsearch源码分析-搜索分析(二)</a></li>\n<li><a href=\"https://www.jianshu.com/p/f5a61653708e\" target=\"_blank\" rel=\"noopener noreferrer\">Elasticsearch源码分析-搜索分析(三)</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/36940048\" target=\"_blank\" rel=\"noopener noreferrer\">Elasticsearch 通信模块的分析</a></li>\n<li><a href=\"https://juejin.cn/post/6994755077659426846\" target=\"_blank\" rel=\"noopener noreferrer\">Elasticsearch 网络通信线程分析</a></li>\n</ol>\n",
      "image": "https://github-images.wenzhihuai.com/images/1240.png",
      "date_published": "2022-03-20T15:14:40.000Z",
      "date_modified": "2024-02-16T17:21:55.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "kafka面试题",
      "url": "http://www.wenzhihuai.com/middleware/kafka/kafka.html",
      "id": "http://www.wenzhihuai.com/middleware/kafka/kafka.html",
      "summary": "kafka面试题 1、请说明什么是Apache Kafka? Apache Kafka是由Apache开发的一种发布订阅消息系统，它是一个分布式的、分区的和可复制的提交日志服务。 2、说说Kafka的使用场景？ ①异步处理 ②应用解耦 ③流量削峰 ④日志处理 ⑤消息通讯等。 3、使用Kafka有什么优点和缺点？ 优点： ①支持跨数据中心的消息复制； ②...",
      "content_html": "\n<p>1、请说明什么是Apache Kafka?<br>\nApache Kafka是由Apache开发的一种发布订阅消息系统，它是一个分布式的、分区的和可复制的提交日志服务。</p>\n<p>2、说说Kafka的使用场景？<br>\n①异步处理<br>\n②应用解耦<br>\n③流量削峰<br>\n④日志处理<br>\n⑤消息通讯等。</p>\n<p>3、使用Kafka有什么优点和缺点？<br>\n优点：<br>\n①支持跨数据中心的消息复制；<br>\n②单机吞吐量：十万级，最大的优点，就是吞吐量高;<br>\n③topic数量都吞吐量的影响：topic从几十个到几百个的时候，吞吐量会大幅度下降。所以在同等机器下，kafka尽量保证topic数量不要过多。如果要支撑大规模topic，需要增加更多的机器资源;<br>\n④时效性：ms级;<br>\n⑤可用性：非常高，kafka是分布式的，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用;<br>\n⑥消息可靠性：经过参数优化配置，消息可以做到0丢失;<br>\n⑦功能支持：功能较为简单，主要支持简单的MQ功能，在大数据领域的实时计算以及日志采集被大规模使用。</p>\n<p>缺点：<br>\n①由于是批量发送，数据并非真正的实时； 仅支持统一分区内消息有序，无法实现全局消息有序；<br>\n②有可能消息重复消费；<br>\n③依赖zookeeper进行元数据管理，等等。</p>\n<p>4、为什么说Kafka性能很好，体现在哪里？<br>\n①顺序读写<br>\n②零拷贝<br>\n③分区<br>\n④批量发送<br>\n⑤数据压缩</p>\n<p>5、请说明什么是传统的消息传递方法?<br>\n传统的消息传递方法包括两种：<br>\n排队：在队列中，一组用户可以从服务器中读取消息，每条消息都发送给其中一个人。<br>\n发布-订阅：在这个模型中，消息被广播给所有的用户。</p>\n<p>6、请说明Kafka相对传统技术有什么优势?<br>\n①快速:单一的Kafka代理可以处理成千上万的客户端，每秒处理数兆字节的读写操作。<br>\n②可伸缩:在一组机器上对数据进行分区<br>\n③和简化，以支持更大的数据<br>\n④持久:消息是持久性的，并在集群中进<br>\n⑤行复制，以防止数据丢失。<br>\n⑥设计:它提供了容错保证和持久性</p>\n<p>7、解释Kafka的Zookeeper是什么?我们可以在没有Zookeeper的情况下使用Kafka吗?<br>\nZookeeper是一个开放源码的、高性能的协调服务，它用于Kafka的分布式应用。<br>\n不，不可能越过Zookeeper，直接联系Kafka broker。一旦Zookeeper停止工作，它就不能服务客户端请求。<br>\nZookeeper主要用于在集群中不同节点之间进行通信<br>\n在Kafka中，它被用于提交偏移量，因此如果节点在任何情况下都失败了，它都可以从之前提交的偏移量中获取<br>\n除此之外，它还执行其他活动，如: leader检测、分布式同步、配置管理、识别新节点何时离开或连接、集群、节点实时状态等等。</p>\n<p>8、解释Kafka的用户如何消费信息?<br>\n在Kafka中传递消息是通过使用sendfile API完成的。它支持将字节从套接口转移到磁盘，通过内核空间保存副本，并在内核用户之间调用内核。</p>\n<p>9、解释如何提高远程用户的吞吐量?<br>\n如果用户位于与broker不同的数据中心，则可能需要调优套接口缓冲区大小，以对长网络延迟进行摊销。</p>\n<p>10、解释一下，在数据制作过程中，你如何能从Kafka得到准确的信息?<br>\n在数据中，为了精确地获得Kafka的消息，你必须遵循两件事: 在数据消耗期间避免重复，在数据生产过程中避免重复。<br>\n这里有两种方法，可以在数据生成时准确地获得一个语义:<br>\n每个分区使用一个单独的写入器，每当你发现一个网络错误，检查该分区中的最后一条消息，以查看您的最后一次写入是否成功<br>\n在消息中包含一个主键(UUID或其他)，并在用户中进行反复制</p>\n<p>11、解释如何减少ISR中的扰动?broker什么时候离开ISR?<br>\nISR是一组与leaders完全同步的消息副本，也就是说ISR中包含了所有提交的消息。ISR应该总是包含所有的副本，直到出现真正的故障。如果一个副本从leader中脱离出来，将会从ISR中删除。</p>\n<p>12、Kafka为什么需要复制?<br>\nKafka的信息复制确保了任何已发布的消息不会丢失，并且可以在机器错误、程序错误或更常见些的软件升级中使用。</p>\n<p>13、如果副本在ISR中停留了很长时间表明什么?<br>\n如果一个副本在ISR中保留了很长一段时间，那么它就表明，跟踪器无法像在leader收集数据那样快速地获取数据。</p>\n<p>14、请说明如果首选的副本不在ISR中会发生什么?<br>\n如果首选的副本不在ISR中，控制器将无法将leadership转移到首选的副本。</p>\n<p>15、有可能在生产后发生消息偏移吗?<br>\n在大多数队列系统中，作为生产者的类无法做到这一点，它的作用是触发并忘记消息。broker将完成剩下的工作，比如使用id进行适当的元数据处理、偏移量等。</p>\n<p>作为消息的用户，你可以从Kafka broker中获得补偿。如果你注视SimpleConsumer类，你会注意到它会获取包括偏移量作为列表的MultiFetchResponse对象。此外，当你对Kafka消息进行迭代时，你会拥有包括偏移量和消息发送的MessageAndOffset对象。</p>\n<p>16、Kafka的设计时什么样的呢？<br>\nKafka将消息以topic为单位进行归纳 将向Kafka topic发布消息的程序成为producers. 将预订topics并消费消息的程序成为consumer. Kafka以集群的方式运行，可以由一个或多个服务组成，每个服务叫做一个broker. producers通过网络将消息发送到Kafka集群，集群向消费者提供消息</p>\n<p>17、数据传输的事物定义有哪三种？<br>\n（1）最多一次:<br>\n消息不会被重复发送，最多被传输一次，但也有可能一次不传输<br>\n（2）最少一次: 消息不会被漏发送，最少被传输一次，但也有可能被重复传输.<br>\n（3）精确的一次（Exactly once）: 不会漏传输也不会重复传输,每个消息都传输被一次而且仅仅被传输一次，这是大家所期望的</p>\n<p>18、Kafka判断一个节点是否还活着有那两个条件？<br>\n（1）节点必须可以维护和ZooKeeper的连接，Zookeeper通过心跳机制检查每个节点的连接<br>\n（2）如果节点是个follower,他必须能及时的同步leader的写操作，延时不能太久</p>\n<p>19、producer是否直接将数据发送到broker的leader(主节点)？<br>\nproducer直接将数据发送到broker的leader(主节点)，不需要在多个节点进行分发，为了帮助producer做到这点，所有的Kafka节点都可以及时的告知:哪些节点是活动的，目标topic目标分区的leader在哪。这样producer就可以直接将消息发送到目的地了。</p>\n<p>20、Kafa consumer是否可以消费指定分区消息？<br>\nKafa consumer消费消息时，向broker发出\"fetch\"请求去消费特定分区的消息，consumer指定消息在日志中的偏移量（offset），就可以消费从这个位置开始的消息，customer拥有了offset的控制权，可以向后回滚去重新消费之前的消息，这是很有意义的</p>\n<p>21、Kafka消息是采用Pull模式，还是Push模式？<br>\nKafka最初考虑的问题是，customer应该从brokes拉取消息还是brokers将消息推送到consumer，也就是pull还push。在这方面，Kafka遵循了一种大部分消息系统共同的传统的设计：producer将消息推送到broker，consumer从broker拉取消息一些消息系统比如Scribe和Apache Flume采用了push模式，将消息推送到下游的consumer。这样做有好处也有坏处：由broker决定消息推送的速率，对于不同消费速率的consumer就不太好处理了。消息系统都致力于让consumer以最大的速率最快速的消费消息，但不幸的是，push模式下，当broker推送的速率远大于consumer消费的速率时，consumer恐怕就要崩溃了。最终Kafka还是选取了传统的pull模式</p>\n<p>Pull模式的另外一个好处是consumer可以自主决定是否批量的从broker拉取数据。Push模式必须在不知道下游consumer消费能力和消费策略的情况下决定是立即推送每条消息还是缓存之后批量推送。如果为了避免consumer崩溃而采用较低的推送速率，将可能导致一次只推送较少的消息而造成浪费。Pull模式下，consumer就可以根据自己的消费能力去决定这些策略</p>\n<p>Pull有个缺点是，如果broker没有可供消费的消息，将导致consumer不断在循环中轮询，直到新消息到t达。为了避免这点，Kafka有个参数可以让consumer阻塞知道新消息到达(当然也可以阻塞知道消息的数量达到某个特定的量这样就可以批量发</p>\n<p>22、Kafka存储在硬盘上的消息格式是什么？<br>\n消息由一个固定长度的头部和可变长度的字节数组组成。头部包含了一个版本号和CRC32校验码。<br>\n消息长度: 4 bytes (value: 1+4+n)<br>\n版本号: 1 byte<br>\nCRC校验码: 4 bytes<br>\n具体的消息: n bytes</p>\n<p>23、Kafka高效文件存储设计特点：<br>\n(1).Kafka把topic中一个parition大文件分成多个小文件段，通过多个小文件段，就容易定期清除或删除已经消费完文件，减少磁盘占用。<br>\n(2).通过索引信息可以快速定位message和确定response的最大大小。<br>\n(3).通过index元数据全部映射到memory，可以避免segment file的IO磁盘操作。<br>\n(4).通过索引文件稀疏存储，可以大幅降低index文件元数据占用空间大小。</p>\n<p>24、Kafka 与传统消息系统之间有三个关键区别<br>\n(1).Kafka 持久化日志，这些日志可以被重复读取和无限期保留<br>\n(2).Kafka 是一个分布式系统：它以集群的方式运行，可以灵活伸缩，在内部通过复制数据提升容错能力和高可用性<br>\n(3).Kafka 支持实时的流式处理</p>\n<p>25、Kafka创建Topic时如何将分区放置到不同的Broker中<br>\n副本因子不能大于 Broker 的个数；<br>\n第一个分区（编号为0）的第一个副本放置位置是随机从 brokerList 选择的；<br>\n其他分区的第一个副本放置位置相对于第0个分区依次往后移。也就是如果我们有5个 Broker，5个分区，假设第一个分区放在第四个 Broker 上，那么第二个分区将会放在第五个 Broker 上；第三个分区将会放在第一个 Broker 上；第四个分区将会放在第二个 Broker 上，依次类推；<br>\n剩余的副本相对于第一个副本放置位置其实是由 nextReplicaShift 决定的，而这个数也是随机产生的</p>\n<p>26、Kafka新建的分区会在哪个目录下创建<br>\n在启动 Kafka 集群之前，我们需要配置好 log.dirs 参数，其值是 Kafka 数据的存放目录，这个参数可以配置多个目录，目录之间使用逗号分隔，通常这些目录是分布在不同的磁盘上用于提高读写性能。 当然我们也可以配置 log.dir 参数，含义一样。只需要设置其中一个即可。 如果 log.dirs 参数只配置了一个目录，那么分配到各个 Broker 上的分区肯定只能在这个目录下创建文件夹用于存放数据。 但是如果 log.dirs 参数配置了多个目录，那么 Kafka 会在哪个文件夹中创建分区目录呢？答案是：Kafka 会在含有分区目录最少的文件夹中创建新的分区目录，分区目录名为 Topic名+分区ID。注意，是分区文件夹总数最少的目录，而不是磁盘使用量最少的目录！也就是说，如果你给 log.dirs 参数新增了一个新的磁盘，新的分区目录肯定是先在这个新的磁盘上创建直到这个新的磁盘目录拥有的分区目录不是最少为止。</p>\n<p>27、partition的数据如何保存到硬盘<br>\ntopic中的多个partition以文件夹的形式保存到broker，每个分区序号从0递增， 且消息有序 Partition文件下有多个segment（xxx.index，xxx.log） segment 文件里的 大小和配置文件大小一致可以根据要求修改 默认为1g 如果大小大于1g时，会滚动一个新的segment并且以上一个segment最后一条消息的偏移量命名</p>\n<p>28、kafka的ack机制<br>\nrequest.required.acks有三个值 0 1 -1<br>\n0:生产者不会等待broker的ack，这个延迟最低但是存储的保证最弱当server挂掉的时候就会丢数据<br>\n1：服务端会等待ack值 leader副本确认接收到消息后发送ack但是如果leader挂掉后他不确保是否复制完成新leader也会导致数据丢失<br>\n-1：同样在1的基础上 服务端会等所有的follower的副本受到数据后才会受到leader发出的ack，这样数据不会丢失</p>\n<p>29、Kafka的消费者如何消费数据<br>\n消费者每次消费数据的时候，消费者都会记录消费的物理偏移量（offset）的位置 等到下次消费时，他会接着上次位置继续消费。同时也可以按照指定的offset进行重新消费。</p>\n<p>30、消费者负载均衡策略<br>\n结合consumer的加入和退出进行再平衡策略。</p>\n<p>31、kafka消息数据是否有序？<br>\n消费者组里某具体分区是有序的，所以要保证有序只能建一个分区，但是实际这样会存在性能问题，具体业务具体分析后确认。</p>\n<p>32、kafaka生产数据时数据的分组策略,生产者决定数据产生到集群的哪个partition中<br>\n每一条消息都是以（key，value）格式 Key是由生产者发送数据传入 所以生产者（key）决定了数据产生到集群的哪个partition</p>\n<p>33、kafka consumer 什么情况会触发再平衡reblance?<br>\n①一旦消费者加入或退出消费组，导致消费组成员列表发生变化，消费组中的所有消费者都要执行再平衡。<br>\n②订阅主题分区发生变化，所有消费者也都要再平衡。</p>\n<p>34、描述下kafka consumer 再平衡步骤?<br>\n①关闭数据拉取线程，情空队列和消息流，提交偏移量；<br>\n②释放分区所有权，删除zk中分区和消费者的所有者关系；<br>\n③将所有分区重新分配给每个消费者，每个消费者都会分到不同分区；<br>\n④将分区对应的消费者所有关系写入ZK，记录分区的所有权信息；<br>\n⑤重启消费者拉取线程管理器，管理每个分区的拉取线程。</p>\n<p>35、Kafka中的ISR、AR又代表什么？ISR的伸缩又指什么<br>\n36、Kafka中的HW、LEO、LSO、LW等分别代表什么？<br>\n37、Kafka中是怎么体现消息顺序性的？<br>\n38、Kafka中的分区器、序列化器、拦截器是否了解？它们之间的处理顺序是什么？<br>\n39、Kafka生产者客户端的整体结构是什么样子的？<br>\n40、Kafka生产者客户端中使用了几个线程来处理？分别是什么？<br>\n41、Kafka的旧版Scala的消费者客户端的设计有什么缺陷？<br>\n42、“消费组中的消费者个数如果超过topic的分区，那么就会有消费者消费不到数据”这句话是否正确？如果不正确，那么有没有什么hack的手段？<br>\n43、消费者提交消费位移时提交的是当前消费到的最新消息的offset还是offset+1?<br>\n44、有哪些情形会造成重复消费？<br>\n45、那些情景下会造成消息漏消费？<br>\n46、KafkaConsumer是非线程安全的，那么怎么样实现多线程消费？<br>\n47、简述消费者与消费组之间的关系<br>\n48、当你使用kafka-topics.sh创建（删除）了一个topic之后，Kafka背后会执行什么逻辑？<br>\n49、topic的分区数可不可以增加？如果可以怎么增加？如果不可以，那又是为什么？<br>\n50、topic的分区数可不可以减少？如果可以怎么减少？如果不可以，那又是为什么？<br>\n51、创建topic时如何选择合适的分区数？<br>\n52、Kafka目前有那些内部topic，它们都有什么特征？各自的作用又是什么？<br>\n53、优先副本是什么？它有什么特殊的作用？<br>\n54、Kafka有哪几处地方有分区分配的概念？简述大致的过程及原理<br>\n55、简述Kafka的日志目录结构<br>\n56、Kafka中有那些索引文件？<br>\n57、如果我指定了一个offset，Kafka怎么查找到对应的消息？<br>\n58、如果我指定了一个timestamp，Kafka怎么查找到对应的消息？<br>\n59、聊一聊你对Kafka的Log Retention的理解<br>\n60、聊一聊你对Kafka的Log Compaction的理解<br>\n61、聊一聊你对Kafka底层存储的理解（页缓存、内核层、块层、设备层）<br>\n62、聊一聊Kafka的延时操作的原理<br>\n63、聊一聊Kafka控制器的作用<br>\n64、消费再均衡的原理是什么？（提示：消费者协调器和消费组协调器）<br>\n65、Kafka中的幂等是怎么实现的<br>\n66、Kafka中的事务是怎么实现的（这题我去面试6家被问4次，照着答案念也要念十几分钟，面试官简直凑不要脸。实在记不住的话...只要简历上不写精通Kafka一般不会问到，我简历上写的是“熟悉Kafka，了解RabbitMQ....”）<br>\n67、Kafka中有那些地方需要选举？这些地方的选举策略又有哪些？<br>\n68、失效副本是指什么？有那些应对措施？<br>\n69、多副本下，各个副本中的HW和LEO的演变过程<br>\n70、为什么Kafka不支持读写分离？<br>\n71、Kafka在可靠性方面做了哪些改进？（HW, LeaderEpoch）<br>\n72、Kafka中怎么实现死信队列和重试队列？<br>\n73、Kafka中的延迟队列怎么实现（这题被问的比事务那题还要多！！！听说你会Kafka，那你说说延迟队列怎么实现？）<br>\n74、Kafka中怎么做消息审计？<br>\n75、Kafka中怎么做消息轨迹？<br>\n76、Kafka中有那些配置参数比较有意思？聊一聊你的看法<br>\n77、Kafka中有那些命名比较有意思？聊一聊你的看法<br>\n78、Kafka有哪些指标需要着重关注？<br>\n79、怎么计算Lag？(注意read_uncommitted和read_committed状态下的不同)<br>\n80、Kafka的那些设计让它有如此高的性能？<br>\n81、Kafka有什么优缺点？<br>\n82、还用过什么同质类的其它产品，与Kafka相比有什么优缺点？<br>\n83、为什么选择Kafka?<br>\n84、在使用Kafka的过程中遇到过什么困难？怎么解决的？<br>\n85、怎么样才能确保Kafka极大程度上的可靠性？<br>\n86、聊一聊你对Kafka生态的理解</p>\n",
      "date_published": "2022-03-20T15:14:40.000Z",
      "date_modified": "2024-01-25T17:34:45.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "2017",
      "url": "http://www.wenzhihuai.com/life/2017.html",
      "id": "http://www.wenzhihuai.com/life/2017.html",
      "summary": "2017 2016年6月，大三，考完最后一科，默默的看着大四那群人一个一个的走了，想着想着，明年毕业的时候，自己将会失去你所拥有的一切，大学那群认识的人，可能这辈子都不会见到了——致远离家乡出省读书的娃。然而，我并没有想到，自己失去的，不仅仅是那群人，几乎是一切。。。。 17年1月，因为受不了北京雾霾（其实是次因），从实习的公司跑路了，很不舍，只是，感...",
      "content_html": "\n<p>2016年6月，大三，考完最后一科，默默的看着大四那群人一个一个的走了，想着想着，明年毕业的时候，自己将会失去你所拥有的一切，大学那群认识的人，可能这辈子都不会见到了——致远离家乡出省读书的娃。然而，我并没有想到，自己失去的，不仅仅是那群人，几乎是一切。。。。<br>\n17年1月，因为受不了北京雾霾（其实是次因），从实习的公司跑路了，很不舍，只是，感觉自己还有很多事要做，很多梦想要去实现，毕竟，看着身边的人，去了美团，拿着15k的月薪，有点不平衡，感觉他也不是很厉害吧，我努力努力10k应该没问题吧？</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231044153.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>回到学校，待了几天，那个整天给别人灌毒鸡汤的人还是不着急找工作：该有的时候总会有的啦，然后继续打游戏、那个天天喊着吃麻辣香锅的人，记忆中好像今年都没有吃上，哈哈、厕所还是那样偶尔炸一下，嗯，感觉一切都很熟悉，只是，我有了点伤感，毕竟身边又要换一群不认识的人了。考完试，终于能回广东了，一年没回了，开心不得了，更多的是，为了那个喜欢了好几年没有表白的妹纸，之前从没想过真的能每天跟一个妹纸道晚安，秒回，但是，对她，我还真做到了。1月份的广州，不热不冷，空气很清新，比北京、天津那股泥土味好多了，只是，我被拒了，男闺蜜还是男闺蜜，备胎还是备胎，那会还没想过放弃，直到...</p>\n<p>春节期间，把自己的<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">网站</a>整理了一下，看了看JVM和并发的知识，偶尔刷刷牛客网的题，觉得自己没多大问题了，跟同学出发，去深圳，我并没有一个做马化腾、马云的梦，但是我想，要做出点东西，至少，不是个平庸的人。投了几个，第一个面试，知道是培训兼外包后果断弃了，春招还没开始，再多准备准备，有时间就往深圳图书馆里跑，找个位置，静静的复习，那会，感觉自己一定能去个大公司吧，搞搞分布式、大数据之类的~</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231050705.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h4>疲惫的面试历程</h4>\n<p>2月份底开始慢慢投简历，跑招聘会，深圳招聘的太少了，那就去广州，大学城，于是，开始了自己一周两天都在广深往返。有的公司笔试要跑一次广州，一面要跑一次，二面还要跑一次，每次看着路费，真的承受不起，但是有希望就行。乐观之下，到来的是一重又一重的打击。</p>\n<p>**数码，很看好的公司，在广州也算是老品牌了，笔试的时候面试官没有带够卷子，就拿了大数据的做，还过了，面试的时候被面到union和union all的区别，答反了，还有left join和right join的原理，一脸懵逼，过后去了百度搜了搜，这东西哪来的原理？</p>\n<p>然后是个企业建站的，笔试完了，面试官照着题问然后没说啥就让我走了，额，我好像还没自我介绍呢。</p>\n<p>有点想回北京了，往北京投了一份，A轮公司，月薪10k，过了，觉得自己技术应该不差吧，不过还是拒了，因为一想起那里满脑子都是雾霾。</p>\n<p>没事没事，下一家，某游戏公司，笔试过了，一面也过了，然后被问flume收集的时候断网处理机制、MD5和RSA原理、Angulajs和Vuejs用没用过、千万级的数据是如何存储的？额，跟你们想的一样，我一道也答出来，然后就挂了，面试官跟我说，你要是来早三个月这些都会啦，说的我很紧张，广东的同学都那么强么？</p>\n<p>这个时候还没质疑自己的技术，去了趟深圳某家小公司，金融的，HR问我是不是培训过来的，心里开始突然间好苦涩，大学花那么多时间学习居然被别人用来和培训机构的人相提并论，笔试不知从哪整来的英文逻辑题，做完了然后上机笔试，做不出来不能见面试官，开始感觉这公司有点。。。。还是撤了撤了。</p>\n<p>突然感觉面试面的绝望，是自己的问题么？是自己技术太菜了么？开始怀疑自己，感觉也是，已经3月份底了，毕竟别人都在实习，而我已经离职3个月没工作了，但是那些问题不是有点离谱了，一开始是开始心态爆炸觉得怎么可以对应届生问这些问题，不应该是基础么？算法什么的，后来是无奈了，开始上网搜各种不沾边的技术。</p>\n<p>还有其他的面试。。。有的工资不高（6K不到），有的面试问题全答对就因为说了有点想做大数据就不要你，有的聊得很欢快却没消息，有的说招java但是笔试一道java题都没有全是前端的，有的打着互联网实际却是外包的公司。。。。<br>\n　　4月初真的很绝望很绝望，不想跟别人说话，是不是很可笑，一个从北京B+轮的公司回广东，面试近15个，居然只能拿到2个offer，其中之一国企外包的，都不知说什么好。13号要拍毕业照了，没有回去，大学四年，毕竟大家个个圈子之间没什么交流，没什么友谊，果然，整个专业的人只有2/3的人去拍了毕业照。4月23号，拉勾网深圳站，梦想着市集，抱着一点点的小希望，去投了5个，结果一个面试邀请都没有，换之而来的是一片绝望、黑暗。。。。</p>\n<h4>感情、我们毕业了</h4>\n<p>5月初回学校了赶毕业设计，回学校也是，天天往图书馆跑，为了面试，毕业设计拉下太多了。悠闲的时候，总会想起我喜欢的那个人，过的怎么样了，微信一开，好像自己被屏蔽了还是被删了？这三个月来的面试打击，真的不知道怎么应对，我更不知道怎么跟她聊天，以至于慢慢隔离，这段感情，或许只有我知道自己有多心疼，只有我自己sb得一点点的呵护着。想起上次跟她聊天是4月中，还是她提了个问题其他什么都没问，彼此之前已经没有关心了。删了吧删了吧，就这样一句再见都没有说，一句“祝福”都没有说。<br>\n　　5月底遇到两次还算开心的事，导师问我要不要评优秀论文，不是很想折腾，拒了，导师仍旧劝我，只是写个3页的小总结而已，评上的话能留图书馆收藏。另一个件是珍爱网打电话过来说我一面过了，什么时候二面，天啊，3月份一面，5月底才通知，心里想骂，但是真的好开心好开心，黑暗中的光芒，泪奔。。。。约到了6月15号面试。<br>\n　　6月初开始自己的回家倒计时，请那唯一一个跟我好的妹纸吃饭，忙完答辩，然后是优秀论文的小报告，13号下午交了上去，再回到宿舍，空无一人，一遍忍着不要悲伤，一遍收拾东西，然后向每个宿舍敲门，告别，一个人拖着行李箱，嗯，我要淡定。</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231073414.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>准备了有点久，我以为自己准备好了，15号，深圳，珍爱网，被问到：有没有JVM调优<strong>经验</strong>？ZK是如何保持一致性的？有没有写过ELK索引经验？谈谈你对dubbo的理解。。。事后，得知自己没有过。心态真的炸了，通宵打了两天游戏。月底得知，优秀论文也没有被评上，已经没有骂人吐槽的想法，只是哦的一声，6月，宣告了自己春招结束，宣告自己要去外包，同时也宣告自己大学这些努力全部白费，跟那个灌毒鸡汤天天打游戏的人同一起跑线。</p>\n<h4>996的工作</h4>\n<p>七月初入职的时候，问了问那些一起应届入职的同学，跟别人交流一下面试被问的问题，只有线程池，JVM回收算法，他们也没用过，我无奈，为什么我被问到的，全是Angularjs、MD5加密算法、ZK一致性原理这种奇葩的问题。。。。。</p>\n<p>没有环境，就自己创造，下班有时间就改改自己的网站<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com</a>，GitHub目前有154个star了，感觉也是个小作品吧，把常用的Java技术栈（RabbitMQ、MongoDB等）加了上去，虽然没啥使用场景，但是自己好好努力吧，毕竟高并发、高可用是自己的梦想。今年GitHub自己的提交次数。</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231080129.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>决心先好好呆着，学习学习，把公司的产品业务技术专研专研，7、8月份是挺开心的，没怎么加班，虽然下班我都留在公司学习，虽然公司的产品不咋地，但是还是有可学之处的，随后，我没想到的是，公司要实行996，，，9月份至12月，每天都是改bug，开发模块，写业务，全都是增删改查，没有涉及redis、rabbitmq，就真的只有使用Hibernate、spring，而做出的东西，要使用JDK6来运行，至今都能看到sun的类。每天的状态就是累累累，我们组还不是最惨的，隔壁项目组，一周通宵两次，9月到10都是如此，国庆加班，每次经过他们组，我都觉得自己还算是幸福。很厌恶这种不把员工当人看的行为，有同事调侃，明年估计我们这些应届过来的，是不是要走掉2/3的人？疯狂加班的代价是牺牲积极性，我问过那些一周通宵两次的人，敲代码，程序员你喜欢这份工作么？不喜欢！！！有那么一两次，实在是太累了，我都感觉自己有点不行了，想离职，可是，会有公司要我么？会有公司不问那些奇葩的问题么？</p>\n<p>双十一，花了500多买了十本书，神书啊，计算机届的圣经啊，然而至今一本都没看完，甚至是都没怎么翻，每天下班回去之后就是9点半了，烧水，洗澡，洗衣服，近11点了，躺床上，一遍看书一遍看鹌鹑直播，一小时才翻几页，996真的太累了，实在看不下书。经过这几个月的加班，感觉自己技术增长为负数，也病了几次，同学见我，都感觉我老了不少，心里不平，可是又没有什么办法。</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231075917.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h4>孤独</h4>\n<p>珠江新城，一年四季都那么美，今晚应该又是万人一起倒计时了吧？已经好久没跟别人一起出去玩过了。今年貌似得了自闭症？社交全靠黄段子。想找人出门走走，然而手机已经没有那种几年的朋友，大学同学一个都不在，哈哈哈，别人说社交软件让人离得更近，我怎么发现我自己一个好朋友都没有了呢，哭笑ing。或许是自己的确不善于跟别人保持联系吧，这个要改，一定要改！！！<br>\n远看：</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231082716.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>近看：</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231082725.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p><strong>题外话：</strong><br>\n有些时候，遇到不顺，感觉自己不是神，没必要忍住，就开始宣泄自己的情绪，比如疯狂打游戏，只能这样度过了吧。<br>\n今年听过最多的一句话，你好厉害，你好牛逼==我感觉也是，可惜，要被业务耽误了不少时间吧。。<br>\n《企业IT架构转型之道》是今年最好的架构图书，没有之一。</p>\n<h4>期望</h4>\n<p>想起初中，老师让我在黑板写自己的英文作文，好像是信件，描述什么状况来这？最后夸了夸我在文章后面加的一段大概是劝别人不要悲伤要灿烂。也想起一个故事，二战以后，德国满目疮痍，他们处在这样一个凄惨的境地，还能想到在桌上摆设一些花，就一定能在废墟上重建家园。我所看到的是即使在再黑暗的状态下，要永远抱着希望。明年要更加努力的学习，而不是工作，是该挽留一些人了，多运动。说了那么多，其实，我只希望自己的运气不要再差了，再差就没法活了。人在遇到不顺的时候，往往最难过的一关便是自己。哈哈哈，只能学我那个同学给自己灌毒鸡汤了。加油加油↖(^ω^)↗</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171231085744.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n",
      "image": "http://image.wenzhihuai.com/images/20171231044153.png",
      "date_published": "2020-01-25T13:18:10.000Z",
      "date_modified": "2024-01-26T04:53:47.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "2019",
      "url": "http://www.wenzhihuai.com/life/2019.html",
      "id": "http://www.wenzhihuai.com/life/2019.html",
      "summary": "2019 2019，本命年，1字头开头的年份，就这么过去了，迎来了2开头的十年，12月过的不是很好，每隔几天就吵架，都没怎么想起写自己的年终总结了，对这个跨年也不是很重视，貌似有点浑浑噩噩的样子。今天1号，就继续来公司学习学习，就写写文章吧。 19年一月，没发生什么事，对老板也算是失望，打算过完春节就出去外面试试，完全的架构错误啊，怎么守得了，然后开了...",
      "content_html": "\n<p>2019，本命年，1字头开头的年份，就这么过去了，迎来了2开头的十年，12月过的不是很好，每隔几天就吵架，都没怎么想起写自己的年终总结了，对这个跨年也不是很重视，貌似有点浑浑噩噩的样子。今天1号，就继续来公司学习学习，就写写文章吧。<br>\n19年一月，没发生什么事，对老板也算是失望，打算过完春节就出去外面试试，完全的架构错误啊，怎么守得了，然后开了个年会，没什么好看的，唯一的例外就是看见漂漂亮亮的她，可惜不敢搭话，就这么的呗。2月以奇奇怪怪的方式走到了一起，开心，又有点伤心，然后就开始了这个欢喜而又悲剧的本命年。</p>\n<h2>工作</h2>\n<p>从18年底开始吧，大概就知道领导对容器云这么快的完全架构设计错误，就是一个完完全全错误的产品，其他人也觉得有点很有问题，但老板就是固执不听，结果一个跑路，一个被压得懒得反抗，然后我一个人跟老板和项目经理怼了前前后后半年，真是惨啊，还要被骂，各种拉到小黑屋里批斗，一直在对他们强调：没有这么做的！！！然后被以年轻人，不懂事，不要抱怨，长大了以后就领会了怼回来，当时气得真是无语。。。。。自己调研的阿里云、腾讯云、青云，还有其他小公司的容器，发现真的只有我们这么设计，完全错误的方向，，，，直到老板走了之后，才开始决定重构，走上正轨。</p>\n<p>之后有了点起色，然后开始着重强调了DevOps的重要性，期初也没人理解，还被骂天天研究技术不干活。。。这东西没技术，但是真的是公司十分需要的公司好么！！可惜公司对这个产品很失望，也不给人，期间还说要暂停项目，唉，这么大的项目就给几个人怎么做，谁都不乐意，就这么过的很憋屈吧，开始了维护的日子。。。</p>\n<p>工作上，蛮多人对我挺好的，领导，同事，不过有时候憋屈的时候还是有了点情绪化，有时候有点悲伤的想法，浮躁、暴躁，出去面试了几次，感觉不是自己能力不好，而是市场上的真的需要3+年以上的。。。。不过感觉自己能在这里憋屈的过了这么久，也是很佩服自己的，哈哈，用同事的话来说就是：当做游戏里的练级，锻炼自己哈哈哈</p>\n<figure><img src=\"https://upyuncdn.wenzhihuai.com/202001010544131765044792.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>学习</h2>\n<p>项目的方向错误，导致自己写的代码都是很简单的增删改查，没有技术含量的那种，也最终导致自己浪费了不少时间，上半年算是很气愤吧，不想就这么浪费掉这些时间，虽然期间看了各种各样的东西，比如Netty、Go、操作系统什么的，最终发现，如果不在项目中使用的话，真的会忘，而且很快就忘掉，最后的还是决定学习项目相关度比较大的东西了，比如Go，如果项目不是很大，小项目的话，就用Go来写，这么做感觉提升还是挺大的。<br>\n过去一年往南山图书馆借了不少书，省了不少钱，虽然没怎么看，但我至少有个奋斗的心啊，哈哈哈哈哈哈哈哈，文章写得少了，因为感觉写不出好东西，总是入门的那种，不深，不值得学习，想想到时候把别人给坑了，也不好意思。<br>\n操作系统感觉还是要好好学学了，加油</p>\n<figure><img src=\"https://upyuncdn.wenzhihuai.com/202001010516141216483720.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>Kubernetes就是未来的方向，有时候翻开源码看看，又不敢往下面看了，对底层不熟吧，今年要多多研究下Kubernetes的源码了，至于Spring那一套，也不知道该不该放弃，或者都学习一下？云原生就是趋势。</p>\n<h2>感情</h2>\n<p>吵架了，没心思写</p>\n<h2>运动</h2>\n<p>过去一年还是把运动算是坚持了下来，每个月必去深圳湾跑一次。还是没怎么睡好，工作感情上都有点不顺，加上自己本身就难以入睡，有时候躺床上就是怎么也睡不着，还长了痘痘，要跑去医院那种，可怕，老了，还是要早点睡觉，多走走多运动，好久没打羽毛球了，自己也不想有空的时候只会打游戏，今年继续加油，多运动吧。</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20200101052650730023760.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>还爬了两次南山</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/202001010535231861948911.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>其他</h2>\n<p>看了周围蛮多同事去了腾讯阿里，有点心动，好想去csig，没到3年真的让人很抓狂。<br>\n过去一年过的蛮憋屈的，特别是工作不顺，加上跟女朋友吵架，心态爆炸。。。</p>\n<h2>2020展望</h2>\n<p>每年这个时候，都不敢有太大的期望了，祝大家都健健康康的，工作顺利！！</p>\n<p>当然，如果有可能的话，我想去CSIG</p>\n",
      "image": "https://upyuncdn.wenzhihuai.com/202001010544131765044792.png",
      "date_published": "2020-01-25T13:18:10.000Z",
      "date_modified": "2024-01-26T04:53:47.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "被挖矿攻击",
      "url": "http://www.wenzhihuai.com/java/serverlog.html",
      "id": "http://www.wenzhihuai.com/java/serverlog.html",
      "summary": "被挖矿攻击 服务器被黑，进程占用率高达99%，查看了一下，是/usr/sbin/bashd的原因，怎么删也删不掉，使用ps查看： stratum+tcp://get.bi-chi.com:3333 -u 47EAoaBc5TWDZKVaAYvQ7Y4ZfoJMFathAR882gabJ43wHEfxEp81vfJ3J3j6FQGJxJNQTAwvmJY...",
      "content_html": "\n<p>服务器被黑，进程占用率高达99%，查看了一下，是/usr/sbin/bashd的原因，怎么删也删不掉，使用ps查看：<br>\n<img src=\"http://image.wenzhihuai.com/images/553ac1ca20170923033013.png\" alt=\"\" loading=\"lazy\"><br>\nstratum+tcp://get.bi-chi.com:3333 -u 47EAoaBc5TWDZKVaAYvQ7Y4ZfoJMFathAR882gabJ43wHEfxEp81vfJ3J3j6FQGJxJNQTAwvmJYS2Ei8dbkKcwfPFst8FhG</p>\n<p>使用top查看：<br>\n<img src=\"http://image.wenzhihuai.com/images/20170923033252.png\" alt=\"\" loading=\"lazy\"></p>\n<figure><img src=\"http://image.wenzhihuai.com/images/20170923034427.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<figure><img src=\"http://image.wenzhihuai.com/images/20170923040503.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>启动iptables,参考<a href=\"http://www.setphp.com/981.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.setphp.com/981.html</a><br>\n<a href=\"http://www.setphp.com/981.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.setphp.com/981.html</a></p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">iptables</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -A</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> INPUT</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> xmr.crypto-pool.fr</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -j</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> DROP</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">iptables</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -A</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> OUTPUT</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> xmr.crypto-pool.fr</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -j</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> DROP</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h1>2017-10-02 再次遭到挖矿攻击</h1>\n<h1>2017-11-20</h1>\n<p>19号添加mongodb之后，20号重启了服务器，但是忘记启动mongodb，导致后台一直在重连mongodb，也就导致了服务访问超级超级慢，记住要启动所需要的组件。</p>\n<h1>2017-12-03</h1>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171203010136.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h1>2017-12-05 wipefs</h1>\n<figure><img src=\"http://image.wenzhihuai.com/images/20171205091617.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n",
      "image": "http://image.wenzhihuai.com/images/553ac1ca20170923033013.png",
      "date_published": "2020-01-25T13:10:49.000Z",
      "date_modified": "2024-01-24T10:30:22.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "2018",
      "url": "http://www.wenzhihuai.com/life/2018.html",
      "id": "http://www.wenzhihuai.com/life/2018.html",
      "summary": "2018 年底老姐结婚，跑回家去了，忙着一直没写，本来想回深圳的时候空余的时候写写，没想到一直加班，嗯，9点半下班那种，偶尔也趁着间隙的时间，一段一段的凑着吧。 想着17年12月31号写的那篇文章https://www.cnblogs.com/w1570631036/p/8158284.html，感叹18年还算恢复了点。 心惊胆战的裸辞经历 其实校招过...",
      "content_html": "\n<p>年底老姐结婚，跑回家去了，忙着一直没写，本来想回深圳的时候空余的时候写写，没想到一直加班，嗯，9点半下班那种，偶尔也趁着间隙的时间，一段一段的凑着吧。</p>\n<p>想着17年12月31号写的那篇文章<a href=\"https://www.cnblogs.com/w1570631036/p/8158284.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/w1570631036/p/8158284.html</a>，感叹18年还算恢复了点。</p>\n<h2>心惊胆战的裸辞经历</h2>\n<p>其实校招过去的那家公司，真的不是很喜欢，996、技术差、产品差，实在受不了，春节前提出了离职，老大也挽留了下，以“来了个阿里的带我们重构，能学不了东西”来挽留，虽然我对技术比较痴迷，但离职去深圳的决心还是没有动摇，嗯，就这么开始了自己的裸辞过程。3月8号拿到离职，回公司的时候跟跟同事吹吹水，吃个饭，某同事还喊：“周末来公司玩玩么，我给你开门”，哈哈哈，泼出去的水，回不去了，偶尔有点伤感。<br>\n去深圳面试，第一家随手记，之前超级想去这家公司的，金融这一块，有钱，只可惜，没过，一面面试官一直夸我，我觉得稳了，二面没转过来，就这么挂了，有点不甘心吧，在这，感谢那个内推我的人吧，<a href=\"https://www.cnblogs.com/w1570631036/p/8549333.html\" target=\"_blank\" rel=\"noopener noreferrer\">面经在这</a>，之后就是大大小小的面试，联想、恒大、期待金融什么的，都没拿到offer，裸辞真的慌得一比，一天没工作，感觉一年没有工作没人要的样子。。。。没面试就跑去广州图书馆，复习，反思，一天一天的过着，回家就去楼下吃烧烤，打游戏，2点3点才睡觉，boss直聘、拉勾网见一个问一个，迷迷糊糊慌慌张张，那段期间真的想有点把所有书卖掉回家啃老的想法，好在最后联系了一家公司，电商、大小周，知乎上全是差评，不过评价的都不是技术的，更重要的是，岗位是中间件的，嗯，去吧。</p>\n<p>and ... 广州拜拜，晚上人少的时候，跟妹纸去珠江新城真的很美好</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/2019011011294921712062.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>工作工作</h2>\n<p>入职的时候是做日志收集的，就是flume+kafka+es这一套，遇到了不少大佬，嗯，感觉挺好的，打算好好干，一个半月后不知怎么滴，被拉去做容器云了，然后就开始了天天调jenkins、gitlab这些没什么用的api，开始了增删改查的历程，很烦，研究jenkins、gitlab对于自己的技术没什么提升，又不得不做，而且大小周+加班这么做，回到家自己看java、netty、golang的书籍，可是没项目做没实践，过几个月就忘光了，有段时间真的很烦很烦，根本不想工作，天天调api，而且是jenkins、gitlab这些没什么卵用的api，至今也没找到什么办法。。。。<br>\n公司发展太快，也实在让人不知所措，一不小心部门被架空了，什么预兆都没有，被分到其他部门，然后发现这个部门领导内斗真的是，“三国争霸”吧，无奈成为炮灰，不同的领导不同的要求，安安静静敲个代码怎么这么难。。。。<br>\n去年的学习拉下了不少，文章也写的少了，总写那些入门的文章确实没有什么意思，买的书虽然没有17年的多吧，不过也不少了，也看了挺多本书的，虽然我还是不满意自己的阅读量。<br>\n这几年要开始抓准一个框架了，好好专研一下，也要开始学习一下go了，希望能参与一些github的项目，好好努力吧。</p>\n<figure><img src=\"http://image.wenzhihuai.com/images/201901130418261145369442.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>跑步跑步</h2>\n<p>平时没事总是宅在家里打游戏，差不多持续到下半年吧，那会打游戏去楼下吃东西的时候老是觉得眼神恍惚，盯着电子产品太多了，然后就跟别人跑步去了，每周去一次人才公园，跑步健身，人才公园真的是深圳跑步最好的一个地方了，桥上总有一群摄影师，好想在深圳湾买一套房子，看了看房价，算了算了，深圳的房，真的贵的离谱。19年也要多多运动，健康第一健康第一。</p>\n<figure><img src=\"https://upyuncdn.wenzhihuai.com/201901130414532037038633.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>Others</h2>\n<ol>\n<li>拿到了深圳户口，全程只花了15天，感谢学妹and家人</li>\n<li>买了第一台MacBook Pro，对于Java的我真心不好用</li>\n<li>盼了好几年的老姐结婚，18年终于了解了这心事</li>\n<li>养了只猫，在经历了好几个月的早起之后，晚上睡觉锁厨房，终于安分了，对不起了哈哈哈</li>\n</ol>\n<figure><img src=\"https://upyuncdn.wenzhihuai.com/20190113103109865107434.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>2019</h2>\n<p>想不起来还有什么要说的了，毕竟程序员，好像每天的生活都一样，就展望一下19年吧。今年，最最重要的是家里人以及身边还有所有人都健健康康的，哈哈哈。然后是安安静静的敲代码~~就酱</p>\n",
      "image": "http://image.wenzhihuai.com/images/2019011011294921712062.png",
      "date_published": "2020-01-25T13:10:49.000Z",
      "date_modified": "2024-01-26T04:53:47.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Redis缓存",
      "url": "http://www.wenzhihuai.com/database/redis/redis%E7%BC%93%E5%AD%98.html",
      "id": "http://www.wenzhihuai.com/database/redis/redis%E7%BC%93%E5%AD%98.html",
      "summary": "Redis缓存 一、概述 1.1 缓存介绍 系统的性能指标一般包括响应时间、延迟时间、吞吐量，并发用户数和资源利用率等。在应用运行过程中，我们有可能在一次数据库会话中，执行多次查询条件完全相同的SQL，MyBatis提供了一级缓存的方案优化这部分场景，如果是相同的SQL语句，会优先命中一级缓存，避免直接对数据库进行查询，提高性能。 缓存常用语： 数据不...",
      "content_html": "\n<h2>一、概述</h2>\n<h3>1.1 缓存介绍</h3>\n<p>系统的性能指标一般包括响应时间、延迟时间、吞吐量，并发用户数和资源利用率等。在应用运行过程中，我们有可能在一次数据库会话中，执行多次查询条件完全相同的SQL，MyBatis提供了一级缓存的方案优化这部分场景，如果是相同的SQL语句，会优先命中一级缓存，避免直接对数据库进行查询，提高性能。<br>\n缓存常用语：<br>\n数据不一致性、缓存更新机制、缓存可用性、缓存服务降级、缓存预热、缓存穿透<br>\n可查看<a href=\"http://blog.csdn.net/diyhzp/article/details/54892358\" target=\"_blank\" rel=\"noopener noreferrer\">Redis实战（一） 使用缓存合理性</a></p>\n<h3>1.2 本站缓存架构</h3>\n<p>从没有使用缓存，到使用mybatis缓存，然后使用了ehcache，再然后是mybatis+redis缓存。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180121034503.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>步骤：<br>\n（1）用户发送一个请求到nginx，nginx对请求进行分发。<br>\n（2）请求进入controller，service，service中查询缓存，如果命中，则直接返回结果，否则去调用mybatis。<br>\n（3）mybatis的缓存调用步骤：二级缓存-&gt;一级缓存-&gt;直接查询数据库。<br>\n（4）查询数据库的时候，mysql作了主主备份。</p>\n<h2>二、Mybatis缓存</h2>\n<h3>2.1 mybatis一级缓存</h3>\n<p>Mybatis的一级缓存是指Session回话级别的缓存，也称作本地缓存。一级缓存的作用域是一个SqlSession。Mybatis默认开启一级缓存。在同一个SqlSession中，执行相同的查询SQL，第一次会去查询数据库，并写到缓存中；第二次直接从缓存中取。当执行SQL时两次查询中间发生了增删改操作，则SqlSession的缓存清空。Mybatis 默认支持一级缓存，不需要在配置文件中配置。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180120015614.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>我们来查看一下源码的类图，具体的源码分析简单概括一下：SqlSession实际上是使用PerpetualCache来维护的，PerpetualCache中定义了一个HashMap&lt;k,v&gt;来进行缓存。<br>\n（1）当会话开始时，会创建一个新的SqlSession对象，SqlSession对象中会有一个新的Executor对象，Executor对象中持有一个新的PerpetualCache对象；<br>\n（2）对于某个查询，根据statementId,params,rowBounds来构建一个key值，根据这个key值去缓存Cache中取出对应的key值存储的缓存结果。如果命中，则返回结果，如果没有命中，则去数据库中查询，再将结果存储到cache中，最后返回结果。如果执行增删改，则执行flushCacheIfRequired方法刷新缓存。<br>\n（3）当会话结束时，SqlSession对象及其内部的Executor对象还有PerpetualCache对象也一并释放掉。</p>\n<div align=\"center\">![](http://image.wenzhihuai.com/images/20180120022427.png)</div>\n<h3>2.2 mybatis二级缓存</h3>\n<p>Mybatis的二级缓存是指mapper映射文件，为Application应用级别的缓存，生命周期长。二级缓存的作用域是同一个namespace下的mapper映射文件内容，多个SqlSession共享。Mybatis需要手动设置启动二级缓存。在同一个namespace下的mapper文件中，执行相同的查询SQL。实现二级缓存，关键是要对Executor对象做文章，Mybatis给Executor对象加上了一个CachingExecutor，使用了设计模式中的装饰者模式，<br>\n<img src=\"https://github-images.wenzhihuai.com/images/20180120030017.png\" alt=\"\" loading=\"lazy\"></p>\n<h4>2.2.1 MyBatis二级缓存的划分</h4>\n<p>MyBatis并不是简单地对整个Application就只有一个Cache缓存对象，它将缓存划分的更细，即是Mapper级别的，即每一个Mapper都可以拥有一个Cache对象，具体如下：</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>a.为每一个Mapper分配一个Cache缓存对象（使用&lt;cache&gt;节点配置）；</span></span>\n<span class=\"line\"><span>b.多个Mapper共用一个Cache缓存对象（使用&lt;cache-ref&gt;节点配置）；</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>2.2.2 二级缓存的开启</h4>\n<p>在mybatis的配置文件中添加：</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">settings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   &lt;!--开启二级缓存--&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">setting</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"cacheEnabled\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"true\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">settings</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后再需要开启二级缓存的mapper.xml中添加(本站使用了LRU算法，时间为120000毫秒)：</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">cache</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> eviction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"LRU\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"org.apache.ibatis.cache.impl.PerpetualCache\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           flushInterval</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"120000\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           size</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1024\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">           readOnly</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"true\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4>2.2.3 使用第三方支持的二级缓存的实现</h4>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>MyBatis对二级缓存的设计非常灵活，它自己内部实现了一系列的Cache缓存实现类，并提供了各种缓存刷新策略如LRU，FIFO等等；另外，MyBatis还允许用户自定义Cache接口实现，用户是需要实现org.apache.ibatis.cache.Cache接口，然后将Cache实现类配置在&lt;cache  type=\"\"&gt;节点的type属性上即可；除此之外，MyBatis还支持跟第三方内存缓存库如Memecached、Redis的集成，总之，使用MyBatis的二级缓存有三个选择:</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ol>\n<li>MyBatis自身提供的缓存实现；</li>\n<li>用户自定义的Cache接口实现；</li>\n<li>跟第三方内存缓存库的集成；<br>\n具体的实现，可参照：<a href=\"http://blog.csdn.net/xiadi934/article/details/50786293\" target=\"_blank\" rel=\"noopener noreferrer\">SpringMVC + MyBatis + Mysql + Redis(作为二级缓存) 配置</a></li>\n</ol>\n<p>MyBatis中一级缓存和二级缓存的组织如下图所示（图片来自<a href=\"http://blog.csdn.net/luanlouis/article/details/41390801\" target=\"_blank\" rel=\"noopener noreferrer\">深入理解mybatis原理</a>）：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180120120015.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>2.3 Mybatis在分布式环境下脏读问题</h3>\n<p>（1）如果是一级缓存，在多个SqlSession或者分布式的环境下，数据库的写操作会引起脏数据，多数情况可以通过设置缓存级别为Statement来解决。<br>\n（2）如果是二级缓存，虽然粒度比一级缓存更细，但是在进行多表查询时，依旧可能会出现脏数据。<br>\n（3）Mybatis的缓存默认是本地的，分布式环境下出现脏读问题是不可避免的，虽然可以通过实现Mybatis的Cache接口，但还不如直接使用集中式缓存如Redis、Memcached好。</p>\n<p>下面将介绍使用Redis集中式缓存在个人网站的应用。</p>\n<h2>三、Redis缓存</h2>\n<p>Redis运行于独立的进程，通过网络协议和应用交互，将数据保存在内存中，并提供多种手段持久化内存的数据。同时具备服务器的水平拆分、复制等分布式特性，使得其成为缓存服务器的主流。为了与Spring更好的结合使用，我们使用的是Spring-Data-Redis。此处省略安装过程和Redis的命令讲解。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20180119110640.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>3.1 Spring Cache</h3>\n<p>Spring 3.1 引入了激动人心的基于注释（annotation）的缓存（cache）技术，它本质上不是一个具体的缓存实现方案（例如EHCache 或者 OSCache），而是一个对缓存使用的抽象，通过在既有代码中添加少量它定义的各种 annotation，即能够达到缓存方法的返回对象的效果。Spring 的缓存技术还具备相当的灵活性，不仅能够使用 **SpEL（Spring Expression Language）**来定义缓存的 key 和各种 condition，还提供开箱即用的缓存临时存储方案，也支持和主流的专业缓存例如 EHCache 集成。<br>\n下面是Spring Cache常用的注解：</p>\n<p>（1）@Cacheable<br>\n@Cacheable 的作用 主要针对方法配置，能够根据方法的请求参数对其结果进行缓存</p>\n<p>|  属性 | 介绍  |例子|<br>\n|</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20180121034503.png",
      "date_published": "2020-01-25T13:10:49.000Z",
      "date_modified": "2024-02-06T07:53:39.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "JVM调优参数",
      "url": "http://www.wenzhihuai.com/java/JVM/JVM%E8%B0%83%E4%BC%98%E5%8F%82%E6%95%B0.html",
      "id": "http://www.wenzhihuai.com/java/JVM/JVM%E8%B0%83%E4%BC%98%E5%8F%82%E6%95%B0.html",
      "summary": "JVM调优参数 一、堆大小设置 JVM 中最大堆大小有三方面限制：相关操作系统的数据模型（32-bt还是64-bit）限制；系统的可用虚拟内存限制；系统的可用物理内存限制。32位系统 下，一般限制在1.5G~2G；64为操作系统对内存无限制。我在Windows Server 2003 系统，3.5G物理内存，JDK5.0下测试，最大可设置为1478m。...",
      "content_html": "\n<h2>一、堆大小设置</h2>\n<p>JVM 中最大堆大小有三方面限制：相关操作系统的数据模型（32-bt还是64-bit）限制；系统的可用虚拟内存限制；系统的可用物理内存限制。32位系统 下，一般限制在1.5G~2G；64为操作系统对内存无限制。我在Windows Server 2003 系统，3.5G物理内存，JDK5.0下测试，最大可设置为1478m。</p>\n<h3>典型设置：</h3>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmn2g</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-Xmx3550m：设置JVM最大可用内存为3550M。<br>\n-Xms3550m：设置JVM促使内存为3550m。此值可以设置与-Xmx相同，以避免每次垃圾回收完成后JVM重新分配内存。<br>\n-Xmn2g：设置年轻代大小为2G。整个JVM内存大小=年轻代大小 + 年老代大小 + 持久代大小。持久代一般固定大小为64m，所以增大年轻代后，将会减小年老代大小。此值对系统性能影响较大，Sun官方推荐配置为整个堆的3/8。<br>\n-Xss128k： 设置每个线程的堆栈大小。JDK5.0以后每个线程堆栈大小为1M，以前每个线程堆栈大小为256K。更具应用的线程所需内存大小进行调整。在相同物理内 存下，减小这个值能生成更多的线程。但是操作系统对一个进程内的线程数还是有限制的，不能无限生成，经验值在3000~5000左右。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:NewRatio=4</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:SurvivorRatio=4</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:MaxPermSize=16m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:MaxTenuringThreshold=0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-XX:NewRatio=4:设置年轻代（包括Eden和两个Survivor区）与年老代的比值（除去持久代）。设置为4，则年轻代与年老代所占比值为1：4，年轻代占整个堆栈的1/5<br>\n-XX:SurvivorRatio=4：设置年轻代中Eden区与Survivor区的大小比值。设置为4，则两个Survivor区与一个Eden区的比值为2:4，一个Survivor区占整个年轻代的1/6<br>\n-XX:MaxPermSize=16m:设置持久代大小为16m。<br>\n-XX:MaxTenuringThreshold=0：设置垃圾最大年龄。如果设置为0的话，则年轻代对象不经过Survivor区，直接进入年老代。对于年老代比较多的应用，可以提高效率。如果将此值设置为一个较大值，则年轻代对象会在Survivor区进行多次复制，这样可以增加对象再年轻代的存活时间，增加在年轻代即被回收的概论。</p>\n<h2>二、回收器选择</h2>\n<p>JVM给了三种选择：串行收集器、并行收集器、并发收集器，但是串行收集器只适用于小数据量的情况，所以这里的选择主要针对并行收集器和并发收集器。默认情况下，JDK5.0以前都是使用串行收集器，如果想使用其他收集器需要在启动时加入相应参数。JDK5.0以后，JVM会根据当前系统配置进行判断。</p>\n<h3>2.1 吞吐量优先的并行收集器</h3>\n<p>如上文所述，并行收集器主要以到达一定的吞吐量为目标，适用于科学技术和后台处理等。<br>\n典型配置：</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3800m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3800m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmn2g</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseParallelGC</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:ParallelGCThreads=20</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-XX:+UseParallelGC：选择垃圾收集器为并行收集器。此配置仅对年轻代有效。即上述配置下，年轻代使用并发收集，而年老代仍旧使用串行收集。<br>\n-XX:ParallelGCThreads=20：配置并行收集器的线程数，即：同时多少个线程一起进行垃圾回收。此值最好配置与处理器数目相等。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmn2g</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseParallelGC</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:ParallelGCThreads=20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseParallelOldGC</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-XX:+UseParallelOldGC：配置年老代垃圾收集方式为并行收集。JDK6.0支持对年老代并行收集。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmn2g</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseParallelGC&nbsp;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:MaxGCPauseMillis=100</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-XX:MaxGCPauseMillis=100:设置每次年轻代垃圾回收的最长时间，如果无法满足此时间，JVM会自动调整年轻代大小，以满足此值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmn2g</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseParallelGC&nbsp;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:MaxGCPauseMillis=100</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseAdaptiveSizePolicy</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-XX:+UseAdaptiveSizePolicy：设置此选项后，并行收集器会自动选择年轻代区大小和相应的Survivor区比例，以达到目标系统规定的最低相应时间或者收集频率等，此值建议使用并行收集器时，一直打开。</p>\n<h3>2.2 响应时间优先的并发收集器</h3>\n<p>如上文所述，并发收集器主要是保证系统的响应时间，减少垃圾收集时的停顿时间。适用于应用服务器、电信领域等。<br>\n典型配置：</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmn2g</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:ParallelGCThreads=20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseConcMarkSweepGC</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseParNewGC</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-XX:+UseConcMarkSweepGC：设置年老代为并发收集。测试中配置这个以后，-XX:NewRatio=4的配置失效了，原因不明。所以，此时年轻代大小最好用-Xmn设置。<br>\n-XX:+UseParNewGC:设置年轻代为并行收集。可与CMS收集同时使用。JDK5.0以上，JVM会根据系统配置自行设置，所以无需再设置此值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">java</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmx3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xms3550m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xmn2g</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Xss128k</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseConcMarkSweepGC</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:CMSFullGCsBeforeCompaction=5</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -XX:+UseCMSCompactAtFullCollection</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>-XX:CMSFullGCsBeforeCompaction：由于并发收集器不对内存空间进行压缩、整理，所以运行一段时间以后会产生“碎片”，使得运行效率降低。此值设置运行多少次GC以后对内存空间进行压缩、整理。<br>\n-XX:+UseCMSCompactAtFullCollection：打开对年老代的压缩。可能会影响性能，但是可以消除碎片</p>\n<h2>三、辅助信息</h2>\n<p>JVM提供了大量命令行参数，打印信息，供调试使用。主要有以下一些：<br>\n-XX:+PrintGC<br>\n输出形式：[GC 118250K-&gt;113543K(130112K), 0.0094143 secs]<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Full GC 121376K-&gt;10414K(130112K), 0.0650971 secs]</p>\n<p>-XX:+PrintGCDetails<br>\n输出形式：[GC [DefNew: 8614K-&gt;781K(9088K), 0.0123035 secs] 118250K-&gt;113543K(130112K), 0.0124633 secs]<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [GC [DefNew: 8614K-&gt;8614K(9088K), 0.0000665 secs][Tenured: 112761K-&gt;10414K(121024K), 0.0433488 secs] 121376K-&gt;10414K(130112K), 0.0436268 secs]</p>\n<p>-XX:+PrintGCTimeStamps -XX:+PrintGC：PrintGCTimeStamps可与上面两个混合使用<br>\n输出形式：11.851: [GC 98328K-&gt;93620K(130112K), 0.0082960 secs]<br>\n-XX:+PrintGCApplicationConcurrentTime:打印每次垃圾回收前，程序未中断的执行时间。可与上面混合使用<br>\n输出形式：Application time: 0.5291524 seconds<br>\n-XX:+PrintGCApplicationStoppedTime：打印垃圾回收期间程序暂停的时间。可与上面混合使用<br>\n输出形式：Total time for which application threads were stopped: 0.0468229 seconds<br>\n-XX:PrintHeapAtGC:打印GC前后的详细堆栈信息<br>\n输出形式：</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>34.702: [GC {Heap before gc invocations=7:</span></span>\n<span class=\"line\"><span>&nbsp;def new generation&nbsp;&nbsp; total 55296K, used 52568K [0x1ebd0000, 0x227d0000, 0x227d0000)</span></span>\n<span class=\"line\"><span>eden space 49152K,&nbsp; 99% used [0x1ebd0000, 0x21bce430, 0x21bd0000)</span></span>\n<span class=\"line\"><span>from space 6144K,&nbsp; 55% used [0x221d0000, 0x22527e10, 0x227d0000)</span></span>\n<span class=\"line\"><span>&nbsp; to&nbsp;&nbsp; space 6144K,&nbsp;&nbsp; 0% used [0x21bd0000, 0x21bd0000, 0x221d0000)</span></span>\n<span class=\"line\"><span>&nbsp;tenured generation&nbsp;&nbsp; total 69632K, used 2696K [0x227d0000, 0x26bd0000, 0x26bd0000)</span></span>\n<span class=\"line\"><span>the space 69632K,&nbsp;&nbsp; 3% used [0x227d0000, 0x22a720f8, 0x22a72200, 0x26bd0000)</span></span>\n<span class=\"line\"><span>&nbsp;compacting perm gen&nbsp; total 8192K, used 2898K [0x26bd0000, 0x273d0000, 0x2abd0000)</span></span>\n<span class=\"line\"><span>&nbsp;&nbsp; the space 8192K,&nbsp; 35% used [0x26bd0000, 0x26ea4ba8, 0x26ea4c00, 0x273d0000)</span></span>\n<span class=\"line\"><span>&nbsp;&nbsp;&nbsp; ro space 8192K,&nbsp; 66% used [0x2abd0000, 0x2b12bcc0, 0x2b12be00, 0x2b3d0000)</span></span>\n<span class=\"line\"><span>&nbsp;&nbsp;&nbsp; rw space 12288K,&nbsp; 46% used [0x2b3d0000, 0x2b972060, 0x2b972200, 0x2bfd0000)</span></span>\n<span class=\"line\"><span>34.735: [DefNew: 52568K-&gt;3433K(55296K), 0.0072126 secs] 55264K-&gt;6615K(124928K)Heap after gc invocations=8:</span></span>\n<span class=\"line\"><span>&nbsp;def new generation&nbsp;&nbsp; total 55296K, used 3433K [0x1ebd0000, 0x227d0000, 0x227d0000)</span></span>\n<span class=\"line\"><span>eden space 49152K,&nbsp;&nbsp; 0% used [0x1ebd0000, 0x1ebd0000, 0x21bd0000)</span></span>\n<span class=\"line\"><span>&nbsp; from space 6144K,&nbsp; 55% used [0x21bd0000, 0x21f2a5e8, 0x221d0000)</span></span>\n<span class=\"line\"><span>&nbsp; to&nbsp;&nbsp; space 6144K,&nbsp;&nbsp; 0% used [0x221d0000, 0x221d0000, 0x227d0000)</span></span>\n<span class=\"line\"><span>&nbsp;tenured generation&nbsp;&nbsp; total 69632K, used 3182K [0x227d0000, 0x26bd0000, 0x26bd0000)</span></span>\n<span class=\"line\"><span>the space 69632K,&nbsp;&nbsp; 4% used [0x227d0000, 0x22aeb958, 0x22aeba00, 0x26bd0000)</span></span>\n<span class=\"line\"><span>&nbsp;compacting perm gen&nbsp; total 8192K, used 2898K [0x26bd0000, 0x273d0000, 0x2abd0000)</span></span>\n<span class=\"line\"><span>&nbsp;&nbsp; the space 8192K,&nbsp; 35% used [0x26bd0000, 0x26ea4ba8, 0x26ea4c00, 0x273d0000)</span></span>\n<span class=\"line\"><span>&nbsp;&nbsp;&nbsp; ro space 8192K,&nbsp; 66% used [0x2abd0000, 0x2b12bcc0, 0x2b12be00, 0x2b3d0000)</span></span>\n<span class=\"line\"><span>&nbsp;&nbsp;&nbsp; rw space 12288K,&nbsp; 46% used [0x2b3d0000, 0x2b972060, 0x2b972200, 0x2bfd0000)</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span>, 0.0757599 secs]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>-Xloggc:filename:与上面几个配合使用，把相关日志信息记录到文件以便分析。<br>\n<strong>常见配置汇总</strong></p>\n<h3>3.1 堆设置</h3>\n<p>-Xms:初始堆大小<br>\n-Xmx:最大堆大小<br>\n-XX:NewSize=n:设置年轻代大小<br>\n-XX:NewRatio=n:设置年轻代和年老代的比值。如:为3，表示年轻代与年老代比值为1：3，年轻代占整个年轻代年老代和的1/4<br>\n-XX:SurvivorRatio=n:年轻代中Eden区与两个Survivor区的比值。注意Survivor区有两个。如：3，表示Eden：Survivor=3：2，一个Survivor区占整个年轻代的1/5<br>\n-XX:MaxPermSize=n:设置持久代大小</p>\n<h3>3.2 收集器设置</h3>\n<p>-XX:+UseSerialGC:设置串行收集器<br>\n-XX:+UseParallelGC:设置并行收集器<br>\n-XX:+UseParalledlOldGC:设置并行年老代收集器<br>\n-XX:+UseConcMarkSweepGC:设置并发收集器</p>\n<h3>3.3 垃圾回收统计信息</h3>\n<p>-XX:+PrintGC<br>\n-XX:+PrintGCDetails<br>\n-XX:+PrintGCTimeStamps<br>\n-Xloggc:filename</p>\n<h3>3.4 并行收集器设置</h3>\n<p>-XX:ParallelGCThreads=n:设置并行收集器收集时使用的CPU数。并行收集线程数。<br>\n-XX:MaxGCPauseMillis=n:设置并行收集最大暂停时间<br>\n-XX:GCTimeRatio=n:设置垃圾回收时间占程序运行时间的百分比。公式为1/(1+n)</p>\n<h3>3.5 并发收集器设置</h3>\n<p>-XX:+CMSIncrementalMode:设置为增量模式。适用于单CPU情况。<br>\n-XX:ParallelGCThreads=n:设置并发收集器年轻代收集方式为并行收集时，使用的CPU数。并行收集线程数。</p>\n<h2>四、调优总结</h2>\n<h3>4.1 年轻代大小选择</h3>\n<p>响应时间优先的应用：尽可能设大，直到接近系统的最低响应时间限制（根据实际情况选择）。在此种情况下，年轻代收集发生的频率也是最小的。同时，减少到达年老代的对象。<br>\n吞吐量优先的应用：尽可能的设置大，可能到达Gbit的程度。因为对响应时间没有要求，垃圾收集可以并行进行，一般适合8CPU以上的应用。</p>\n<h3>4.2 年老代大小选择</h3>\n<p>响应时间优先的应用：年老代使用并发收集器，所以其大小需要小心设置，一般要考虑并发会话率和会话持续时间等一些参数。如果堆设置小了，可以会造成内存碎片、高回收频率以及应用暂停而使用传统的标记清除方式；如果堆大了，则需要较长的收集时间。最优化的方案，一般需要参考以下数据获得：<br>\n并发垃圾收集信息<br>\n持久代并发收集次数<br>\n传统GC信息<br>\n花在年轻代和年老代回收上的时间比例<br>\n减少年轻代和年老代花费的时间，一般会提高应用的效率<br>\n吞吐量优先的应用：一般吞吐量优先的应用都有一个很大的年轻代和一个较小的年老代。原因是，这样可以尽可能回收掉大部分短期对象，减少中期的对象，而年老代尽存放长期存活对象。</p>\n<h3>4.3 较小堆引起的碎片问题</h3>\n<p>因为年老代的并发收集器使用标记、清除算法，所以不会对堆进行压缩。当收集器回收时，他 会把相邻的空间进行合并，这样可以分配给较大的对象。但是，当堆空间较小时，运行一段时间以后，就会出现“碎片”，如果并发收集器找不到足够的空间，那么 并发收集器将会停止，然后使用传统的标记、清除方式进行回收。如果出现“碎片”，可能需要进行如下配置：<br>\n-XX:+UseCMSCompactAtFullCollection：使用并发收集器时，开启对年老代的压缩。<br>\n-XX:CMSFullGCsBeforeCompaction=0：上面配置开启的情况下，这里设置多少次Full GC后，对年老代进行压缩</p>\n",
      "date_published": "2020-01-25T13:10:49.000Z",
      "date_modified": "2024-02-16T04:00:26.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "1.历史与架构",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/1.%E5%8E%86%E5%8F%B2%E4%B8%8E%E6%9E%B6%E6%9E%84.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/1.%E5%8E%86%E5%8F%B2%E4%B8%8E%E6%9E%B6%E6%9E%84.html",
      "summary": "1.历史与架构 各位大佬瞄一眼我的个人网站呗 。如果觉得不错，希望能在GitHub上麻烦给个star，GitHub地址https://github.com/Zephery/newblog 。 大学的时候萌生的一个想法，就是建立一个个人网站，前前后后全部推翻重构了4、5遍，现在终于能看了，下面是目前的首页。 由原本的ssh变成ssm，再变成ssm+shi...",
      "content_html": "\n<p>各位大佬瞄一眼<a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">我的个人网站</a>呗 。如果觉得不错，希望能在GitHub上麻烦给个star，GitHub地址<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a> 。<br>\n大学的时候萌生的一个想法，就是建立一个个人网站，前前后后全部推翻重构了4、5遍，现在终于能看了，下面是目前的首页。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/600-20240126113210252.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>由原本的ssh变成ssm，再变成ssm+shiro+lucene，到现在的前后台分离。前台使用ssm+lucene，后台使用spring boot+shiro。其中，使用pagehelper作为分页，lucene用来搜索和自动补全，使用百度统计的API做了个日志系统，统计pv和uv什么的，同时，还有使用了JMX来观察JVM的使用和cpu的使用率，机器学习方面，使用了adaboost和朴素贝叶斯对微博进行分类，有兴趣的可以点点<a href=\"http://www.wenzhihuai.com/weibonlp.html\" target=\"_blank\" rel=\"noopener noreferrer\">有点意思</a>这个页面。<br>\n本文从下面这几个方面来讲讲网站的建立：<br></p>\n<ol>\n<li><a href=\"https://github.com/Zephery/newblog/blob/master/doc/1.%E5%8E%86%E5%8F%B2%E4%B8%8E%E6%9E%B6%E6%9E%84.md\" target=\"_blank\" rel=\"noopener noreferrer\">建站故事与网站架构</a><br></li>\n<li><a href=\"https://github.com/Zephery/newblog/blob/master/doc/2.Lucene%E7%9A%84%E4%BD%BF%E7%94%A8.md\" target=\"_blank\" rel=\"noopener noreferrer\">lucene搜索的使用</a><br></li>\n<li><a href=\"https://github.com/Zephery/newblog/blob/master/doc/3.%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.md\" target=\"_blank\" rel=\"noopener noreferrer\">使用quartz来定时备份数据库</a><br></li>\n<li><a href=\"https://github.com/Zephery/baidutongji/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">使用百度统计api做日志系统</a><br></li>\n<li><a href=\"https://github.com/Zephery/newblog/blob/master/doc/6.%E5%B0%8F%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.md\" target=\"_blank\" rel=\"noopener noreferrer\">Nginx小集群的搭建</a><br></li>\n<li>[数据库]<br></li>\n<li>使用机器学习对微博进行分析<br></li>\n<li>网站性能优化<br></li>\n<li>SEO优化<br></li>\n</ol>\n<h2>1.建站故事与网站架构</h2>\n<h3>1.1建站过程</h3>\n<p>起初，是因为学习的时候老是找不到什么好玩而又有挑战性的项目，看着struts、spring、hibernate的书，全都是一些小项目，做了感觉也没啥意义，有时候在博客园看到别人还有自己的网站，特羡慕，最终就选择了自己做一个个人网站。期初刚学的ssh，于是开始了自己的ssh搭建个人网站的行程，但是对于一个后端的人来说，前端是个大问题啊。。。。所以初版的时候差不多全是纯生的html、css、js，至少发博客这个功能实现了，但是确实没法看。前前后后折腾了一个多月，决定推翻重做，到百度看看别人怎么做的。首先看到的是<a href=\"http://www.yangqq.com/\" target=\"_blank\" rel=\"noopener noreferrer\">杨青</a>的网站，已经好几年没更新了，前端的代码看起来比较简单，也是自己能够掌握的，但是不够美观，继续找，在模板之家发现了一个高大上的模板。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/500.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>第二版的界面确实是这样的，只是把图片的切换变成了wowslider，也是简单的用bootstrap和pagehelper做了下分页，现在的最终版保留了它的header，然后评论框使用了多说（超级怀念多说）。后端也由原来的ssh变成了ssm，之后加上了lucene来对文章进行索引。之后，随着多说要关闭了，突然之间有很多div都不适应了（我写死了的。。。），再一次，没法看，不想看，一怒之下再次推翻重做，变成了现在这个版本。</p>\n<p>最终版本在考虑时，也找了很多模板，影响深刻的是<a href=\"https://tale.biezhi.me\" target=\"_blank\" rel=\"noopener noreferrer\">tale</a>和<a href=\"https://yusi123.com\" target=\"_blank\" rel=\"noopener noreferrer\">欲思</a>这两个主题，期中，tale使用的是java语言写的，刚知道的那一刻我就没好感了，java后端我是要自己全部写的，tale这个页面简洁但是不够炫，而且内容量太低，可能就只是个纯博客，之后发现了欲思，拓展性强，只可惜没有静态的版本，后台是纯生的PHP（嗯，PHP是世界上最好的语言），看了看，没事，保存网页，前端自己改，后端自己全部重写，最终变成了现在这个版本，虽然拼接的时候各种css、js混入。。。。还好在做网站性能优化的时候差不多全部去掉了。最终版加入redis、quartz、shiro等，还有python机器学习、flask的restful api，可谓是大杂烩了。<br>\n页面看着还算凑合，至少不是那种看都看不过去的那种了，但是仔细看看，还是有不少问题的，比如瀑布流，还有排版什么的。只能等自己什么时候想认真学学前端的东西了。<br>\n已经部署在腾讯云服务器上，存储使用了七牛云的cdn。</p>\n<h3>1.2 网站整体技术架构</h3>\n<p>最终版的技术架构图如下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/awfawefwefwef.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>网站核心主要采用Spring SpringMVC和Mybatis，下图是当访问一篇博客的时候的运行流程，参考了<a href=\"http://jinnianshilongnian.iteye.com/blog/1594806\" target=\"_blank\" rel=\"noopener noreferrer\">张开涛</a>的博客。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/awefaweagregrgbwerbwer.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p><strong>运行流程分析</strong><br></p>\n<ol>\n<li>浏览器发送http请求。/blogdetail.html?blogid=1。<br></li>\n<li>tomcat容器初始化，顺序为context-param&gt;listener&gt;filter&gt;servlet，此时，spring中的bean还没有被注入的，不建议在此处加载bean，网站声明了两个类（IPFilter和CacheControlFilter），IPFilter用来拦截IP，CacheControlFilter用来缓存。<br></li>\n<li>初始化Spring。<br></li>\n<li>DispatcherServlet——&gt;HandlerMapping进行请求到处理的映射，HandlerMapping将“/blogdetail”路径直接映射到名字为“/blogdetail”的Bean进行处理，即BlogController。<br></li>\n<li>自定义拦截器，其中BaseIntercepter实现了HandleInterceptor的接口，用来记录每次访问的链接以及后台响应的时间。<br></li>\n<li>DispatcherServlet——&gt; SimpleControllerHandlerAdapter，SimpleControllerHandlerAdapter将HandlerExecutionChain中的处理器适配为BlogController。<br></li>\n<li>BlogController执行查询，取得结果集返回数据。<br></li>\n<li>blogdetail（ModelAndView的逻辑视图名）——&gt;InternalResourceViewResolver， InternalResourceViewResolver使用JstlView，具体视图页面在/blogdetail.jsp。<br></li>\n<li>JstlView（/blogdetail.jsp）——&gt;渲染，将在处理器传入的模型数据(blog=Blog！)在视图中展示出来。<br></li>\n<li>返回响应。<br></li>\n</ol>\n<h3>1.3 日志系统</h3>\n<p>日志系统架构如下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/awfawefwefawefwef.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p><a href=\"http://www.wenzhihuai.com/log.html\" target=\"_blank\" rel=\"noopener noreferrer\">日志系统</a>曾经尝试采用过ELK，实时监控实在是让人不能不称赞，本地也跑起来了，但是一到服务器，卡卡卡，毕竟（1Ghz CPU、1G内存），只能放弃ELK，采用百度统计。百度统计提供了Tongji API供开发者使用，只是有次数限制，2000/日，实时的话实在有点低，只能统计前几天的PV、UV等开放出来。其实这个存放在mysql也行，不过这些零碎的数据还是放在redis中，方便管理。<br>\n出了日志系统，自己对服务器的一些使用率也是挺关心的，毕竟服务器配置太低，于是利用了使用了tomcat的JMX来对CPU和jvm使用情况进行监控，这两个都是实时的。出了这两个，对内存的分配做了监控，Eden、Survivor、Tenured的使用情况。<br></p>\n<h3>1.4 【有点意思】自然语言处理</h3>\n<p>本人大学里的毕业设计就是基于AdaBoost算法的情感分类，学到的东西还是要经常拿出来看看，要不然真的浪费了我这么久努力做的毕业设计啊。构建了一个基本的情感分类小系统，每天抓取微博进行分类存储在MySql上，并使用flask提供Restful API给java调用，可以点击<a href=\"http://www.wenzhihuai.com/weibonlp.html\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>尝试（请忽略Google的图片）。目前分类效果不是很明显，准确率大概只有百分之70%，因为训练样本只有500条（找不到训练样本），机器学习真的太依赖样本的标注。这个，只能请教各位路人大神指导指导了。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ截图20170825141127.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>总结<br></h2>\n<p>断断续续，也总算做了一个能拿得出手仍要遮遮掩掩才能给别人看的网站，哈哈哈哈哈，也劳烦各位帮忙找找bug。前前后后从初学Java EE就一直设想的事也还算有了个了结，以后要多多看书，写点精品文章。PS：<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub上求给个Star</a>，以后面试能讲讲这个网站。</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/600-20240126113210252.png",
      "date_published": "2020-01-21T02:38:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "2.Lucene的使用",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/2.Lucene%E7%9A%84%E4%BD%BF%E7%94%A8.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/2.Lucene%E7%9A%84%E4%BD%BF%E7%94%A8.html",
      "summary": "2.Lucene的使用 首先，帮忙点击一下我的网站http://www.wenzhihuai.com/ 。谢谢啊，如果可以，GitHub上麻烦给个star，以后面试能讲讲这个项目，GitHub地址https://github.com/Zephery/newblog 。 Lucene的整体架构 imageimage 搜索引擎的几个重要概念： 倒排索引：将...",
      "content_html": "\n<p>首先，帮忙点击一下我的网站<a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com/</a> 。谢谢啊，如果可以，GitHub上麻烦给个star，以后面试能讲讲这个项目，GitHub地址<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a> 。</p>\n<h3>Lucene的整体架构</h3>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/lucenejoijfoaiwheifuwhifu.png\" alt=\"image\" tabindex=\"0\" loading=\"lazy\"><figcaption>image</figcaption></figure>\n<h3>搜索引擎的几个重要概念：</h3>\n<ol>\n<li>\n<p>倒排索引：将文档中的词作为关键字，建立词与文档的映射关系，通过对倒排索引的检索，可以根据词快速获取包含这个词的文档列表。倒排索引一般需要对句子做去除停用词。<br>\n<img src=\"https://github-images.wenzhihuai.com/images/fewfwaefawe20170903183124.png\" alt=\"\" loading=\"lazy\"></p>\n</li>\n<li>\n<p>停用词：在一段句子中，去掉之后对句子的表达意向没有印象的词语，如“非常”、“如果”，中文中主要包括冠词，副词等。</p>\n</li>\n<li>\n<p>排序：搜索引擎在对一个关键词进行搜索时，可能会命中许多文档，这个时候，搜索引擎就需要快速的查找的用户所需要的文档，因此，相关度大的结果需要进行排序，这个设计到搜索引擎的相关度算法。</p>\n</li>\n</ol>\n<h3>Lucene中的几个概念</h3>\n<ol>\n<li>文档（Document）：文档是一系列域的组合，文档的域则代表一系列域文档相关的内容。</li>\n<li>域（Field）：每个文档可以包含一个或者多个不同名称的域。</li>\n<li>词（Term）：Term是搜索的基本单元，与Field相对应，包含了搜索的域的名称和关键词。</li>\n<li>查询（Query）：一系列Term的条件组合，成为TermQuery，但也有可能是短语查询等。</li>\n<li>分词器（Analyzer）：主要是用来做分词以及去除停用词的处理。</li>\n</ol>\n<p>索引的建立</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/fweafwe170903175148.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>索引的搜索</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/fwefawfagergwerg20170903184512.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>lucene在本网站的使用：</h3>\n<ol>\n<li>搜索    2. 自动分词</li>\n</ol>\n<h2>一、搜索</h2>\n<p>注意：本文使用最新的lucene，版本6.6.0。lucene的版本更新很快，每跨越一次大版本，使用方式就不一样。首先需要导入lucene所使用的包。使用maven：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">org</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">apache</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">core</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;&lt;!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">lucene核心</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">org</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">apache</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">analyzers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">common</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;&lt;!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">分词器</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">org</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">apache</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">analyzers</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">smartcn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;&lt;!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">中文分词器</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">org</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">apache</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">queryparser</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;&lt;!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">格式化</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">org</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">apache</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">highlighter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;&lt;!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">lucene高亮</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">--</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">    &lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">lucene</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;/</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>构建索引</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Directory</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> dir </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> FSDirectory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Paths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"blog_index\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//索引存储的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SmartChineseAnalyzer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> analyzer </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SmartChineseAnalyzer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//简单的分词器</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">IndexWriterConfig</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> config </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> IndexWriterConfig</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(analyzer)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">IndexWriter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> writer </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> IndexWriter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(dir</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> config)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Document</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> doc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Document</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> TextField</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"title\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getTitle</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Field</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Store</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">YES</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> //对标题做索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> TextField</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"content\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Jsoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getContent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">text</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Field</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Store</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">YES</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//对文章内容做索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">writer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">addDocument</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(doc);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">writer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"2\">\n<li>更新与删除</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">IndexWriter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> writer </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getWriter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Document</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> doc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Document</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> TextField</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"title\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getTitle</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Field</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Store</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">YES</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> TextField</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"content\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Jsoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getContent</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">text</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Field</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Store</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">YES</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">writer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">updateDocument</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Term</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"blogid\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">valueOf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getBlogid</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">())), doc);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">   //更新索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">writer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"3\">\n<li>查询</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> search_index</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> keyword) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Directory</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> dir </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> FSDirectory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Paths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"blog_index\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> //获取要查询的路径，也就是索引所在的位置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        IndexReader</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> reader </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> DirectoryReader</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(dir);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        IndexSearcher</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> searcher </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> IndexSearcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(reader)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        SmartChineseAnalyzer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> analyzer </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SmartChineseAnalyzer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        QueryParser</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> parser </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> QueryParser</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"content\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> analyzer)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> //查询解析器</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Query</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> query </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> parser</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(keyword);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> //通过解析要查询的String，获取查询对象</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        TopDocs</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> docs </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> searcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">search</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(query, </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//开始查询，查询前10条数据，将记录保存在docs中,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ScoreDoc</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> scoreDoc </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> docs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">scoreDocs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) { </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//取出每条查询结果</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            Document</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> doc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> searcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">scoreDoc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> //scoreDoc.doc相当于docID,根据这个docID来获取文档</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"title\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> //fullPath是刚刚建立索引的时候我们定义的一个字段</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        reader</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">IOException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> | </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ParseException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"4\">\n<li>高亮</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Fragmenter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> fragmenter </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SimpleSpanFragmenter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(scorer)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">SimpleHTMLFormatter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> simpleHTMLFormatter </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SimpleHTMLFormatter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"&lt;b&gt;&lt;font color='red'&gt;\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"&lt;/font&gt;&lt;/b&gt;\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Highlighter</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> highlighter </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Highlighter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(simpleHTMLFormatter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> scorer)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">highlighter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setTextFragmenter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(fragmenter);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ScoreDoc</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> scoreDoc </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> docs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">scoreDocs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) { </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//取出每条查询结果</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Document</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> doc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> searcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">scoreDoc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> //scoreDoc.doc相当于docID,根据这个docID来获取文档</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> title </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> doc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"title\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    TokenStream</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> tokenStream </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> analyzer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">tokenStream</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"title\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> StringReader</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(title));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> hTitle </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> highlighter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getBestFragment</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(tokenStream, title);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(hTitle);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>结果</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;&lt;</span><span style=\"--shiki-light:#000000;--shiki-dark:#FFFFFF\">font</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> color</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'red'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;Java&lt;/</span><span style=\"--shiki-light:#000000;--shiki-dark:#FFFFFF\">font</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;堆.栈和常量池 笔记</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ol start=\"5\">\n<li>分页<br>\n目前lucene分页的方式主要有两种：<br>\n(1). 每次都全部查询，然后通过截取获得所需要的记录。由于采用了分词与倒排索引，所有速度是足够快的，但是在数据量过大的时候，占用内存过大，容易造成内存溢出<br>\n(2). 使用searchAfter把数据保存在缓存里面，然后再去取。这种方式对大量的数据友好，但是当数据量比较小的时候，速度会相对慢。<br>\nlucene中使用searchafter来筛选顺序</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">ScoreDoc</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> lastBottom </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//相当于pageSize</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">BooleanQuery</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Builder</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> booleanQuery </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> BooleanQuery</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Builder</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">QueryParser</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> parser1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> QueryParser</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"title\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> analyzer)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//对文章标题进行搜索</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Query</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> query1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> parser1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(q);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">booleanQuery</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(query1, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">BooleanClause</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Occur</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">SHOULD</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">TopDocs</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> hits </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> search</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">searchAfter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(lastBottom, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">booleanQuery</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(), pagehits);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  //lastBottom（pageSize），pagehits（pagenum）</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"6\">\n<li>使用效果<br>\n全部代码放在<a href=\"https://github.com/Zephery/newblog/blob/master/src/main/java/com/myblog/lucene/BlogIndex.java\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>，代码写的不太好，光从代码规范上就不咋地。在网页上的使用效果如下：</li>\n</ol>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/bervererfwaefewf20170903200915.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>二、lucene自动补全</h2>\n<p>百度、谷歌等在输入文字的时候会弹出补全框，如下图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/QQ截图20170728102929.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>在搭建lucene自动补全的时候，也有考虑过使用SQL语句中使用like来进行，主要还是like对数据库压力会大，而且相关度没有lucene的高。主要使用了官方suggest库以及<a href=\"https://github.com/xdan/autocomplete/\" target=\"_blank\" rel=\"noopener noreferrer\">autocompelte.js</a>这个插件。<br>\nsuggest的原理<a href=\"http://iamyida.iteye.com/blog/2205114\" target=\"_blank\" rel=\"noopener noreferrer\">看这</a>,以及索引结构<a href=\"http://blog.csdn.net/u011389474/article/details/69458445\" target=\"_blank\" rel=\"noopener noreferrer\">看这</a>。</p>\n<h4>使用：</h4>\n<ol>\n<li>导入maven包</li>\n</ol>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.apache.lucene&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;lucene-suggest&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;6.6.0&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"2\">\n<li>如果想将结果反序列化，声明实体类的时候要加上：</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Blog</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> implements</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Serializable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ol start=\"3\">\n<li>实现InputIterator接口</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>InputIterator的几个方法：</span></span>\n<span class=\"line\"><span>long weight():返回的权重值，大小会影响排序，默认是1L</span></span>\n<span class=\"line\"><span>BytesRef payload():对某个对象进行序列化</span></span>\n<span class=\"line\"><span>boolean hasPayloads():是否有设置payload信息</span></span>\n<span class=\"line\"><span>Set&lt;BytesRef&gt; contexts():存入context，context里可以是任意的自定义数据，一般用于数据过滤</span></span>\n<span class=\"line\"><span>boolean hasContexts():判断是否有下一个，默认为false</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> BlogIterator</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> implements</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> InputIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    /**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     * logger</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Logger</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> logger </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> LoggerFactory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLogger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">BlogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Iterator</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Blog</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> blogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Blog</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> currentBlog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> BlogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Iterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Blog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">blogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> blogIterator;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> hasContexts</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> boolean</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> hasPayloads</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Comparator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">BytesRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getComparator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> BytesRef</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hasNext</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            currentBlog </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> blogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">next</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                //返回当前Project的name值，把blog类的name属性值作为key</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> BytesRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Jsoup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">parse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">currentBlog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getTitle</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">text</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getBytes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"utf8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Exception</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">                e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">printStackTrace</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    /**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     * 将Blog对象序列化存入payload</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     * 可以只将所需要的字段存入payload，这里对整个实体类进行序列化，方便以后需求，不建议采用这种方法</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> BytesRef</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> payload</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            ByteArrayOutputStream</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> bos</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ByteArrayOutputStream</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            ObjectOutputStream</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ObjectOutputStream</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(bos);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeObject</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(currentBlog);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">close</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            BytesRef</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> bytesRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> BytesRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">bos</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toByteArray</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> bytesRef;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">IOException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, e);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    /**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     * 文章标题</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">BytesRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> contexts</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">            Set</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">BytesRef</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">regions</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HashSet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">BytesRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            regions</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> BytesRef</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">currentBlog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getTitle</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getBytes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"UTF8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> regions;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UnsupportedEncodingException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            throw</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> RuntimeException</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Couldn't convert to UTF-8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    /**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     * 返回权重值，这个值会影响排序</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     * 这里以产品的销售量作为权重值，weight值即最终返回的热词列表里每个热词的权重值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> long</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> weight</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> currentBlog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getHits</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();   </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//change to hits</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"4\">\n<li>ajax 建立索引</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> * ajax建立索引</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"> */</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ajaxbuild</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Directory</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> dir </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> FSDirectory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Paths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"autocomplete\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        SmartChineseAnalyzer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> analyzer </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SmartChineseAnalyzer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        AnalyzingInfixSuggester</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> suggester </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> AnalyzingInfixSuggester</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(dir</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> analyzer)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        //创建Blog测试数据</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        List</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Blog</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> blogs </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> blogMapper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getAllBlog</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        suggester</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">build</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> BlogIterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">blogs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">iterator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">IOException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Error!\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"5\">\n<li>查找<br>\n因为有些文章的标题是一样的，先对list排序，将标题短的放前面，长的放后面，然后使用LinkHashSet来存储。</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ajaxsearch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> keyword) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Directory</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> dir </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> FSDirectory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">open</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">Paths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"autocomplete\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        SmartChineseAnalyzer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> analyzer </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SmartChineseAnalyzer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        AnalyzingInfixSuggester</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> suggester </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> AnalyzingInfixSuggester</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(dir</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> analyzer)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        List</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> list </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> lookup</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(suggester</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> keyword)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        list</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sort</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Comparator</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">            public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> int</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> compare</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> o1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> o2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">o1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> o2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">length</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">                    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Set</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> set </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> LinkedHashSet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> string </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> list) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(string);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        ssubSet</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 7</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">IOException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Error!\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"6\">\n<li>controller层</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">RequestMapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"ajaxsearch\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> ajaxsearch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">HttpServletRequest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HttpServletResponse</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> response) throws IOException {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> keyword </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getParameter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"keyword\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">StringUtils</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">isEmpty</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(keyword)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Set</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> set </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> blogService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ajaxsearch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(keyword);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Gson</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> gson </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Gson</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getWriter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">write</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">gson</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toJson</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(set));</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//返回的数据使用json</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"7\">\n<li>ajax来提交请求<br>\nautocomplete.js源代码与介绍：<a href=\"https://github.com/xdan/autocomplete\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/xdan/autocomplete</a></li>\n</ol>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">link</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> rel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"stylesheet\"</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> href</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"js/autocomplete/jquery.autocomplete.css\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"js/autocomplete/jquery.autocomplete.js\"</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/javascript\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/javascript\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    /******************** remote start **********************/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    $('#remote_input').autocomplete(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">        source</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">                url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"ajaxsearch.html?keyword=%QUERY%\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">                type</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'remote'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">    }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    /********************* remote end ********************/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol start=\"8\">\n<li>效果：<br>\n<img src=\"https://github-images.wenzhihuai.com/images/QQ截图20170728105628.png\" alt=\"\" loading=\"lazy\"></li>\n</ol>\n<h4><a class=\"header-anchor\" href=\"#欢迎访问我的个人网站\"><span>欢迎访问我的</span></a><a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">个人网站</a></h4>\n<p>参考：<br>\n<a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-lucene1/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.ibm.com/developerworks/cn/java/j-lo-lucene1/</a></p>\n<p><a href=\"http://iamyida.iteye.com/blog/2205114\" target=\"_blank\" rel=\"noopener noreferrer\">http://iamyida.iteye.com/blog/2205114</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/lucenejoijfoaiwheifuwhifu.png",
      "date_published": "2020-01-21T02:38:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "3.定时任务",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/3.%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/3.%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.html",
      "summary": "3.定时任务 先看一下Quartz的架构图： 一.特点： 强大的调度功能，例如支持丰富多样的调度方法，可以满足各种常规及特殊需求； 灵活的应用方式，例如支持任务和调度的多种组合方式，支持调度数据的多种存储方式； 分布式和集群能力。 二.主要组成部分 JobDetail：需实现该接口定义的人物，其中JobExecutionContext提供了上下文的各种...",
      "content_html": "\n<p>先看一下Quartz的架构图：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/11627468_1438829844Zbz8.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h3>一.特点：</h3>\n<ol>\n<li>强大的调度功能，例如支持丰富多样的调度方法，可以满足各种常规及特殊需求；</li>\n<li>灵活的应用方式，例如支持任务和调度的多种组合方式，支持调度数据的多种存储方式；</li>\n<li>分布式和集群能力。</li>\n</ol>\n<h3>二.主要组成部分</h3>\n<ol>\n<li>JobDetail：需实现该接口定义的人物，其中JobExecutionContext提供了上下文的各种信息。</li>\n<li>JobDetail：QUartz的执行任务的类，通过newInstance的反射机制实例化Job。</li>\n<li>Trigger： Job的时间触发规则。主要有SimpleTriggerImpl和CronTriggerImpl两个实现类。</li>\n<li>Calendar：org.quartz.Calendar和java.util.Calendar不同，它是一些日历特定时间点的集合（可以简单地将org.quartz.Calendar看作java.util.Calendar的集合——java.util.Calendar代表一个日历时间点，无特殊说明后面的Calendar即指org.quartz.Calendar）。</li>\n<li>Scheduler：由上图可以看出，Scheduler是Quartz独立运行的容器。其中，Trigger和JobDetail可以注册到Scheduler中。</li>\n<li>ThreadPool：Scheduler使用一个线程池作为任务运行的基础设施，任务通过共享线程池中的线程提高运行效率。</li>\n</ol>\n<h3>三、Quartz设计</h3>\n<ol>\n<li>properties file<br>\n<a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.2.x/quick-start.html\" target=\"_blank\" rel=\"noopener noreferrer\">官网</a>中表明：quartz中使用了quartz.properties来对quartz进行配置，并保留在其jar包中，如果没有定义则默认使用改文件。</li>\n<li></li>\n</ol>\n<h3>四、使用</h3>\n<ol>\n<li>hello world！代码<a href=\"\">在这</a></li>\n<li>本网站中使用quartz来对数据库进行备份，与Spring结合<br>\n（1）导入spring的拓展包，其协助spring集成第三方库：邮件服务、定时任务、缓存等。。。</li>\n</ol>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.springframework&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;spring-context-support&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;4.2.6.RELEASE&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（2）导入quartz包</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.quartz-scheduler&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;quartz&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;2.3.0&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（3）mysql远程备份<br>\n使用命令行工具仅仅需要一行：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">mysqldump -u [username] -p[password] -h [hostip] database &gt; file</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>但是java不能直接执行linux的命令，仍旧需要依赖第三方库ganymed</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;ch.ethz.ganymed&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;ganymed-ssh2&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;262&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>完整代码如下：</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Component</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"mysqlService\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//在spring中注册一个mysqlService的Bean</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> MysqlUtil</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    StringBuffer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> sb </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> StringBuffer</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">    sb.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">append</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"mysqldump -u \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">username</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\" -p\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">password</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\" -h \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">host</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\" \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> +</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">            database</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\" &gt;\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">file</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> sql </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> sb</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Connection</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> connection </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Connection</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(s_host)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">    connection.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">connect</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    boolean</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> isAuth </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> connection</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">authenticateWithPassword</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(s_username, s_password);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//进行远程服务器登陆认证</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (!</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">isAuth</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        logger</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"server login error\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    Session</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> session </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> connection</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">openSession</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#61AFEF\">    session.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">execCommand</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">sql</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//执行linux语句</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    InputStream</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> stdout </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> StreamGobbler</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">session</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getStdout</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    BufferedReader</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> br </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> BufferedReader</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> InputStreamReader</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(stdout))</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（4）spring中配置quartz</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jobDetail\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"targetObject\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> ref</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"mysqlService\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"targetMethod\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"exportDataBase\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">&lt;!--定义触发时间  --&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"myTrigger\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"org.springframework.scheduling.quartz.CronTriggerFactoryBean\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jobDetail\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> ref</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jobDetail\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    &lt;!-- cron表达式，每周五2点59分运行--&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"cronExpression\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"0 59 2 ? * FRI\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">&lt;!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 --&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"scheduler\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"org.springframework.scheduling.quartz.SchedulerFactoryBean\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"triggers\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">list</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ref</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"myTrigger\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">list</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（5）java完整文件<a href=\"https://github.com/Zephery/newblog/blob/master/src/main/java/com/myblog/util/MysqlUtil.java\" target=\"_blank\" rel=\"noopener noreferrer\">在这</a></p>\n<h2>Spring的高级特性之定时任务</h2>\n<p>java ee项目的定时任务中除了运行quartz之外，spring3+还提供了task，可以看做是一个轻量级的Quartz，而且使用起来比Quartz简单的多。</p>\n<p>（1）spring配置文件中配置：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">task:annotation-driven</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>（2）最简单的例子，在所需要的函数上添加定时任务即可运行</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Scheduled</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">fixedRate</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> reportCurrentTime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"每隔5秒运行一次\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> sdf</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">format</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Date</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>（3）运行的时候会报错：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.scheduling.TaskScheduler] is defined</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:372)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:332)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:192)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:171)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:86)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:163)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:136)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:380)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>参考：<br>\n1.<a href=\"http://blog.csdn.net/oarsman/article/details/52801877\" target=\"_blank\" rel=\"noopener noreferrer\">http://blog.csdn.net/oarsman/article/details/52801877</a><br>\n2.<a href=\"http://stackoverflow.com/questions/31199888/spring-task-scheduler-no-qualifying-bean-of-type-org-springframework-scheduli\" target=\"_blank\" rel=\"noopener noreferrer\">http://stackoverflow.com/questions/31199888/spring-task-scheduler-no-qualifying-bean-of-type-org-springframework-scheduli</a><br>\nSpring的定时任务调度器会尝试获取一个注册过的 task scheduler来做任务调度，它会尝试通过BeanFactory.getBean的方法来获取一个注册过的scheduler bean，获取的步骤如下：</p>\n<p>1.尝试从配置中找到一个TaskScheduler Bean</p>\n<p>2.寻找ScheduledExecutorService Bean</p>\n<p>3.使用默认的scheduler<br>\n修改log4j.properties即可：<br>\nlog4j.logger.org.springframework.scheduling=INFO<br>\n其实这个功能不影响定时器的功能。<br>\n（4）结果：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">每隔5秒运行一次14:44:34</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">每隔5秒运行一次14:44:39</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">每隔5秒运行一次14:44:44</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "image": "https://github-images.wenzhihuai.com/images/11627468_1438829844Zbz8.png",
      "date_published": "2020-01-21T02:38:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "4.日志系统.md",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/4.%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/4.%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F.html",
      "summary": "4.日志系统.md 欢迎访问我的网站http://www.wenzhihuai.com/ 。感谢，如果可以，希望能在GitHub上给个star，GitHub地址https://github.com/Zephery/newblog 。 建立网站少不了日志系统，用来查看网站的访问次数、停留时间、抓取量、目录抓取统计、页面抓取统计等，其中，最常用的方法还是使...",
      "content_html": "\n<p>欢迎访问我的网站<a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com/</a> 。感谢，如果可以，希望能在GitHub上给个star，GitHub地址<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a> 。</p>\n<p>建立网站少不了日志系统，用来查看网站的访问次数、停留时间、抓取量、目录抓取统计、页面抓取统计等，其中，最常用的方法还是使用ELK，但是，本网站的服务器配置实在太低了（1GHZ、2G内存），压根就跑不起ELK，所以只能寻求其他方式，目前最常用的有<a href=\"https://tongji.baidu.com/web/welcome/login\" target=\"_blank\" rel=\"noopener noreferrer\">百度统计</a>和<a href=\"https://www.umeng.com/\" target=\"_blank\" rel=\"noopener noreferrer\">友盟</a>，这里，本人使用的是百度统计，提供了API给开发者使用，能够将自己所需要的图表移植到自己的网站上。日志是网站及其重要的文件，通过对日志进行统计、分析、综合，就能有效地掌握网站运行状况，发现和排除错误原因，了解客户访问分布等，更好的加强系统的维护和管理。下面是我的百度统计的概览页面：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/300.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>企业级的网站日志不能公开，但是我的是个人网站，用来跟大家一起学习的，所以，需要将百度的统计页面展示出来，但是，百度并不提供日志的图像，只提供API给开发者调用，而且还限制访问次数，一天不能超过2000次，这个对于实时统计来说，确实不够，所以只能展示前几天的访问统计。这里的日志系统分为三个步骤：1.API获取数据；2.存储数据；3.展示数据。页面效果如下，也可以点开我的网站的<a href=\"http://www.wenzhihuai.com/log.html\" target=\"_blank\" rel=\"noopener noreferrer\">日志系统</a>:</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20170918090524.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20170918090534.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20170918090546.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>百度统计提供了Tongji API的Java和Python版本，这两个版本及其复杂，可用性极低，所以，本人用Python写了个及其简单的通用版本，整体只有28行，代码在这，<a href=\"https://github.com/Zephery/baidutongji\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/baidutongji</a>。下面是具体过程</p>\n<h2>1.网站代码安装</h2>\n<p>先在<a href=\"\">百度统计</a>中注册登录之后，进入管理页面，新增网站，然后在代码管理中获取安装代码，大部分人的代码都是类似的，除了hm.js?后面的参数，是记录该网站的唯一标识。</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> _hmt</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> _hmt</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> hm</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> document</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">createElement</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"script\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  hm</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">src</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://hm.baidu.com/hm.js?code\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> s</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> document</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getElementsByTagName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"script\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">parentNode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">insertBefore</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">hm</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">})();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>同时，需要在申请其他设置-&gt;数据导出服务中开通数据导出服务，百度统计Tongji API可以为网站接入者提供便捷的获取网站流量数据的通道。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20170919090557.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>至此，我们获得了username、password、token，然后开始使用三个参数来获取数据。</p>\n<h2>2.根据API获取数据</h2>\n<p><a href=\"https://tongji.baidu.com/dataapi/file/TongjiApiFile.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">官网的API</a>详细的记录了接口的参数以及解释，<br>\n链接：<a href=\"https://api.baidu.com/json/tongji/v1/ReportService/getData\" target=\"_blank\" rel=\"noopener noreferrer\">https://api.baidu.com/json/tongji/v1/ReportService/getData</a>,详细的官方报告请访问官网<a href=\"https://tongji.baidu.com/dataapi/file/TongjiApiFile.pdf\" title=\"百度统计\" target=\"_blank\" rel=\"noopener noreferrer\">TongjiApi</a><br>\n所需参数（必须）：</p>\n<p>|  参数名称 | 参数类型  |描述   |<br>\n|</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/300.png",
      "date_published": "2020-01-21T02:38:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "5.小集群部署.md",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/5.%E5%B0%8F%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/5.%E5%B0%8F%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.html",
      "summary": "5.小集群部署.md 欢迎访问我的个人网站O(∩_∩)O哈哈~希望大佬们能给个star，个人网站网址：http://www.wenzhihuai.com，个人网站代码地址：https://github.com/Zephery/newblog。 洋洋洒洒的买了两个服务器，用来学习分布式、集群之类的东西，整来整去，感觉分布式这种东西没人指导一下真的是太抽象...",
      "content_html": "\n<p>欢迎访问我的个人网站O(∩_∩)O哈哈~希望大佬们能给个star，个人网站网址：<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com</a>，个人网站代码地址：<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a>。<br>\n洋洋洒洒的买了两个服务器，用来学习分布式、集群之类的东西，整来整去，感觉分布式这种东西没人指导一下真的是太抽象了，先从网站的分布式部署一步一步学起来吧，虽然网站本身的访问量不大==。</p>\n<h1>nginx负载均衡</h1>\n<p>一般情况下，当单实例无法支撑起用户的请求时，就需要就行扩容，部署的服务器可以分机房、分地域。而分地域会导致请求分配到太远的地区，比如：深圳的用户却访问到了北京的节点，然后还得从北京返回处理之后的数据，光是来回就至少得30ms。这部分可以通过智能DNS（就近访问）解决。而分机房，需要将请求合理的分配到不同的服务器，这部分就是我们所需要处理的。<br>\n通常，负载均衡分为硬件和软件两种，硬件层的比较牛逼,将4-7层负载均衡功能做到一个硬件里面,如F5,梭子鱼等。目前主流的软件负载均衡分为四层和七层，LVS属于四层负载均衡,工作在tcp/ip协议栈上,通过修改网络包的ip地址和端口来转发, 由于效率比七层高,一般放在架构的前端。七层的负载均衡有nginx, haproxy, apache等,虽然nginx自1.9.0版本后也开始支持四层的负载均衡，但是暂不讨论（我木有硬件条件）。下图来自<a href=\"http://jinnianshilongnian.iteye.com/\" target=\"_blank\" rel=\"noopener noreferrer\">张开涛</a>的《亿级流量网站架构核心技术》</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171018044732.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>本站并没有那么多的服务器，目前只有两台，搭建不了那么大型的架构，就简陋的用两台服务器来模拟一下负载均衡的搭建。下图是本站的简单架构：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171018051437.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>其中服务器A（119.23.46.71）为深圳节点，服务器B（47.95.10.139）为北京节点，搭建Nginx之后流量是这么走的：user-&gt;A-&gt;B-A-&gt;user或者user-&gt;A-&gt;user，第一条中A将请求转发给B，然后B返回的是其运行结果的静态资源。因为这里仅仅是用来学习，所以请不要考虑因为地域导致延时的问题。。。。下面是过程。</p>\n<h2>1.1 Nginx的安装</h2>\n<p>可以选择tar.gz、yum、rpm安装等，这里，由于编译、nginx配置比较复杂，要是没有把握还是使用rpm来安装吧，比较简单。从<a href=\"https://pkgs.org/download/nginx\" target=\"_blank\" rel=\"noopener noreferrer\">https://pkgs.org/download/nginx</a>可以找到最新的rpm包，然后rpm -ivh 文件，然后在命令行中输入nginx即可启动，可以使用netstat检查一下端口。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171103062512.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>启动后页面如下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171103063022.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>记一下常用命令</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">启动nginx，由于是采用rpm方式，所以环境变量什么的都配置好了。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@beijingali ~]# nginx          #启动nginx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@beijingali ~]# nginx -s reload         #重启nginx</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@beijingali ~]# nginx -t           #校验nginx配置文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">nginx: configuration file /etc/nginx/nginx.conf test is successful</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>1.2 Nginx的配置</h2>\n<h4><strong>1.2.1 负载均衡算法</strong></h4>\n<p>Nginx常用的算法有：<br>\n（1）round-robin：轮询，nginx默认的算法，从词语上可以看出，轮流访问服务器，也可以通过weight来控制访问次数。<br>\n（2）ip_hash：根据访客的ip，一个ip地址对应一个服务器。<br>\n（3）hash算法：hash算法常用的方式有根据uri、动态指定的consistent_key两种。<br>\n使用hash算法的缺点是当添加服务器的时候，只有少部分的uri能够被重新分配到新的服务器。这里，本站使用的是hash uri的算法，将不同的uri分配到不同的服务器，但是由于是不同的服务器，tomcat中的session是不一致，解决办法是<a href=\"http://blog.csdn.net/qh_java/article/details/45955923\" target=\"_blank\" rel=\"noopener noreferrer\">tomcat session</a>的共享。额。。。可惜本站目前没有什么能够涉及到登陆什么session的问题。</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">http{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    upstream backend {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        hash $uri;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        # 北京节点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        server 47.95.10.139:8080;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        # 深圳节点</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        server 119.23.46.71:8080;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    server {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        location / {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            root   html;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            index  index.html index.htm;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            proxy_pass http://backend;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4><strong>1.2.2 日志格式</strong></h4>\n<p>之前有使用过ELK来跟踪日志，所以将日志格式化成了json的格式，这里贴一下吧</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    log_format main '{\"@timestamp\":\"$time_iso8601\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"host\":\"$server_addr\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"clientip\":\"$remote_addr\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"size\":$body_bytes_sent,'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"responsetime\":$request_time,'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"upstreamtime\":\"$upstream_response_time\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"upstreamhost\":\"$upstream_addr\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"http_host\":\"$host\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"url\":\"$uri\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"xff\":\"$http_x_forwarded_for\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"referer\":\"$http_referer\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"agent\":\"$http_user_agent\",'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                    '\"status\":\"$status\"}';</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    access_log  logs/access.log  main;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4><strong>1.2.3 HTTP反向代理</strong></h4>\n<p>配置完上流服务器之后，需要配置Http的代理，将请求的端口转发到proxy_pass设定的上流服务器，即当我们访问<a href=\"http://wwww.wenzhihuai.xn--com-5s0em31hr0u\" target=\"_blank\" rel=\"noopener noreferrer\">http://wwww.wenzhihuai.com的时候</a>，请求会被转发到backend中配置的服务器，此处为http://47.95.10.139:8080或者<a href=\"http://119.23.46.71:8080\" target=\"_blank\" rel=\"noopener noreferrer\">http://119.23.46.71:8080</a>。但是，仔细注意之后，我们会发现，tomcat中的访问日志ip来源都是127.0.0.1，相当于本地访问自己的资源。由于后台中有处理ip的代码，对客户端的ip、访问uri等记录下来，所以需要设置nginx来获取用户的实际ip，参考<a href=\"http://blog.csdn.net/bao19901210/article/details/52537279\" target=\"_blank\" rel=\"noopener noreferrer\">nginx 配置</a>。参考文中的一句话：经过反向代理后，由于在客户端和web服务器之间增加了中间层，因此web服务器无法直接拿到客户端的ip，通过$remote_addr变量拿到的将是反向代理服务器的ip地址”。nginx是可以获得用户的真实ip的，也就是说nginx使用$remote_addr变量时获得的是用户的真实ip，如果我们想要在web端获得用户的真实ip，就必须在nginx这里作一个赋值操作，如下：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        location / {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            root   html;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            index  index.html index.htm;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            proxy_pass http://backend;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            proxy_set_header X-Real-IP $remote_addr;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            proxy_set_header Host $host;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            proxy_set_header REMOTE-HOST $remote_addr;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>（1）proxy_set_header            X-real-ip $remote_addr;</strong><br>\n其中这个X-real-ip是一个自定义的变量名，名字可以随意取，这样做完之后，用户的真实ip就被放在X-real-ip这个变量里了，然后，在web端可以这样获取：<br>\nrequest.getAttribute(\"X-real-ip\")</p>\n<p><strong>（2）proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;</strong></p>\n<p>X-Forwarded-For：squid开发的，用于识别通过HTTP代理或负载平衡器原始IP一个连接到Web服务器的客户机地址的非rfc标准，这个不是默认有的，其经过代理转发之后，格式为client1, proxy1, proxy2，如果想通过这个变量来获取用户的ip，那么需要和$proxy_add_x_forwarded_for一起使用。<br>\n$proxy_add_x_forwarded_for：现在的$proxy_add_x_forwarded_for变量，X-Forwarded-For部分包含的是用户的真实ip，$remote_addr部分的值是上一台nginx的ip地址，于是通过这个赋值以后现在的X-Forwarded-For的值就变成了“用户的真实ip，第一台nginx的ip”。</p>\n<h4><strong>1.2.4 HTTPS</strong></h4>\n<p><a href=\"https://baike.baidu.com/item/https/285356?fr=aladdin\" target=\"_blank\" rel=\"noopener noreferrer\">HTTPS</a>（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。一般情况下，能通过服务器的ssh来生成ssl证书，但是如果使用是自己的，一般浏览器（谷歌、360等）都会报证书不安全的错误，正常用户都不敢访问吧==，所以现在使用的是腾讯跟别的机构颁发的：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171105024159.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>首先需要下载证书，放在nginx.conf相同目录下，nginx上的配置也需要有所改变，在nginx.conf中设置listen   443 ssl;开启https。然后配置证书和私钥：</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ssl_certificate 1_www.wenzhihuai.com_bundle.crt;    #主要文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ssl_certificate_key 2_www.wenzhihuai.com.key;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ssl_session_timeout 5m;         # 超时时间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        ssl_prefer_server_ciphers on;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>至此，可以使用https来访问了。https带来的安全性（保证信息安全、识别钓鱼网站等）是http远远不能比拟的，目前大部分网站都是实现全站https，还能将http自动重定向为https，此处，需要在server中添加rewrite ^(.*) https://$server_name$1 permanent;即可</p>\n<h4><strong>1.2.5 失败重试</strong></h4>\n<p>配置好了负载均衡之后，如果有一台服务器挂了怎么办？nginx中提供了可配置的服务器存活的识别，主要是通过max_fails失败请求次数，fail_timeout超时时间，weight为权重，下面的配置的意思是当服务器超时10秒，并失败了两次的时候，nginx将认为上游服务器不可用，将会摘掉上游服务器，fail_timeout时间后会再次将该服务器加入到存活上游服务器列表进行重试</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">upstream backend_server {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    server 10.23.46.71:8080 max_fails=2 fail_timeout=10s weight=1;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    server 47.95.10.139:8080 max_fails=2 fail_timeout=10s weight=1;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h1>session共享</h1>\n<p>分布式情况下难免会要解决session共享的问题，目前推荐的方法基本上都是使用redis，网上查找的方法目前流行的有下面四种，参考自<a href=\"http://blog.csdn.net/qh_java/article/details/45955923\" target=\"_blank\" rel=\"noopener noreferrer\">tomcat 集群中 session 共</a>：<br>\n1.使用 filter 方法存储。（推荐，因为它的服务器使用范围比较多，不仅限于tomcat ，而且实现的原理比较简单容易控制。）<br>\n2.使用 tomcat sessionmanager 方法存储。（直接配置即可）<br>\n3.使用 terracotta 服务器共享。（不知道，不了解）<br>\n4.使用spring-session。（spring的一个小项目，其原理也和第一种基本一致）</p>\n<p>本站使用spring-session，毕竟是spring下的子项目，学习下还是挺好的。参考<a href=\"https://docs.spring.io/spring-session/docs/2.0.0.BUILD-SNAPSHOT/reference/html5/\" target=\"_blank\" rel=\"noopener noreferrer\">Spring-Session官网</a>。官方文档提供了spring-boot、spring等例子，可以参考参考。目前最新版本是2.0.0，不同版本使用方式不同，建议看官网的文档吧。</p>\n<p>首先，添加相关依赖</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.springframework.session&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;spring-session-data-redis&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;1.3.1.RELEASE&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;pom&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;redis.clients&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">groupId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;jedis&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">artifactId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">            &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;${jedis.version}&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">version</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dependency</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>新建一个session.xml，然后在spring的配置文件中添加该文件，然后在session.xml中添加：</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    &lt;!-- redis --&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jedisPoolConfig\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"redis.clients.jedis.JedisPoolConfig\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jedisConnectionFactory\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">          class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hostName\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"${host}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"port\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"${port}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"password\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"${password}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"timeout\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"${timeout}\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"poolConfig\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> ref</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jedisPoolConfig\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"usePool\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"true\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"redisTemplate\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"org.springframework.data.redis.core.StringRedisTemplate\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"connectionFactory\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> ref</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"jedisConnectionFactory\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    &lt;!-- 将session放入redis --&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"redisHttpSessionConfiguration\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">          class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">property</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"maxInactiveIntervalInSeconds\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1800\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bean</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后我们需要保证servlet容器（tomcat）针对每一个请求都使用springSessionRepositoryFilter来拦截</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">filter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;springSessionRepositoryFilter&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-class</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">filter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-mapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;springSessionRepositoryFilter&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">url-pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;/*&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">url-pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dispatcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;REQUEST&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dispatcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dispatcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;ERROR&lt;/</span><span style=\"--shiki-light:white;--shiki-dark:#E06C75\">dispatcher</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filter-mapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置完成，使用RedisDesktopManager查看结果：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171105045003.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>测试：</h2>\n<p>访问<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com</a><br>\ntail -f localhost_access_log.2017-11-05.txt查看日志，然后清空一下当前记录</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171105050714.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>访问技术杂谈页面，此时nginx将请求转发到119.23.46.71服务器，session为28424f91-5bc5-4bba-99ec-f725401d7318。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171105050757.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>点击生活笔记页面，转发到的服务器为47.95.10.139，session为28424f91-5bc5-4bba-99ec-f725401d7318，与上面相同。session已保持一致。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171105050849.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p><strong>值得注意的是：同一个浏览器，在没有关闭的情况下，即使通过域名访问和ip访问得到的session是不同的。</strong><br>\n欢迎访问我的个人网站O(∩_∩)O哈哈~希望能给个star<br>\n个人网站网址：<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com</a><br>\n个人网站代码地址：<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20171018044732.png",
      "date_published": "2020-01-21T02:38:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "6.数据库备份",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/6.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/6.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD.html",
      "summary": "6.数据库备份 先来回顾一下上一篇的小集群架构，tomcat集群，nginx进行反向代理，服务器异地： 由上一篇讲到，部署的时候，将war部署在不同的服务器里，通过spring-session实现了session共享，基本的分布式部署还算是完善了点，但是想了想数据库的访问会不会延迟太大，毕竟一个服务器在北京，一个在深圳，然后试着ping了一下： 果然，...",
      "content_html": "\n<p>先来回顾一下上一篇的小集群架构，tomcat集群，nginx进行反向代理，服务器异地：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171018051437-20240126113709561.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>由上一篇讲到，部署的时候，将war部署在不同的服务器里，通过spring-session实现了session共享，基本的分布式部署还算是完善了点，但是想了想数据库的访问会不会延迟太大，毕竟一个服务器在北京，一个在深圳，然后试着ping了一下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171118033130.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>果然，36ms。。。看起来挺小的，但是对比一下sql执行语句的时间：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171118034129.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>大部分都能在10ms内完成，而最长的语句是insert语句，可见，由于异地导致的36ms延时还是比较大的，捣鼓了一下，最后还是选择换个架构，每个服务器读取自己的数据库，然后数据库底层做一下主主复制，让数据同步。最终架构如下：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171118035150.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h1>一、MySql的复制</h1>\n<p>数据库复制的基本问题就是让一台服务器的数据与其他服务器保持同步。MySql目前支持两种复制方式：基于行的复制和基于语句的复制，这两者的基本过程都是在主库上记录二进制的日志、在备库上重放日志的方式来实现异步的数据复制。其过程分为三步：<br>\n(1)master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）；<br>\n(2)slave将master的binary log events拷贝到它的中继日志(relay log)；<br>\n(3)slave重做中继日志中的事件，将改变反映它自己的数据。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171118040843.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>该过程的第一部分就是master记录二进制日志。在每个事务更新数据完成之前，master在二日志记录这些改变。MySQL将事务串行的写入二进制日志，即使事务中的语句都是交叉执行的。在事件写入二进制日志完成后，master通知存储引擎提交事务。<br>\n下一步就是slave将master的binary log拷贝到它自己的中继日志。首先，slave开始一个工作线程——I/O线程。I/O线程在master上打开一个普通的连接，然后开始binlog dump process。Binlog dump process从master的二进制日志中读取事件，如果已经跟上master，它会睡眠并等待master产生新的事件。I/O线程将这些事件写入中继日志。<br>\nSQL slave thread处理该过程的最后一步。SQL线程从中继日志读取事件，更新slave的数据，使其与master中的数据一致。只要该线程与I/O线程保持一致，中继日志通常会位于OS的缓存中，所以中继日志的开销很小。<br>\n此外，在master中也有一个工作线程：和其它MySQL的连接一样，slave在master中打开一个连接也会使得master开始一个线程。复制过程有一个很重要的限制——复制在slave上是串行化的，也就是说master上的并行更新操作不能在slave上并行操作。<br>\nMySql的基本复制方式有主从复制、主主复制，主主复制即把主从复制的配置倒过来再配置一遍即可，下面的配置则是主从复制的过程，到时候可自行改为主主复制。其他的架构如：一主库多备库、环形复制、树或者金字塔型都是基于这两种方式，可参考《高性能MySql》。</p>\n<h1>二、配置过程</h1>\n<h3>2.1 创建所用的复制账号</h3>\n<p>由于是个自己的小网站，就不做过多的操作了，直接使用root账号</p>\n<h3>2.2 配置master</h3>\n<p>接下来要对mysql的serverID，日志位置，复制方式等进行操作，使用vim打开my.cnf。</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[client]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">default-character-set=utf8</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[mysqld]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">character_set_server=utf8</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">init_connect= SET NAMES utf8</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">datadir=/var/lib/mysql</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">socket=/var/lib/mysql/mysql.sock</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">symbolic-links=0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">log-error=/var/log/mysqld.log</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">pid-file=/var/run/mysqld/mysqld.pid</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># master</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">log-bin=mysql-bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 设为基于行的复制</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-format=ROW</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 设置server的唯一id</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">server-id=2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 忽略的数据库，不使用备份</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-ignore-db=information_schema</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-ignore-db=cluster</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-ignore-db=mysql</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 要进行备份的数据库</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-do-db=myblog</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>重启Mysql之后，查看主库状态，show master status。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171118050128.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>其中，File为日志文件，指定Slave从哪个日志文件开始读复制数据，Position为偏移，从哪个POSITION号开始读，Binlog_Do_DB为要备份的数据库。</p>\n<h3>2.3 配置slave</h3>\n<p>从库的配置跟主库类似，vim /etc/my.cnf配置从库信息。</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[client]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">default-character-set=utf8</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[mysqld]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">character_set_server=utf8</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">init_connect= SET NAMES utf8</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">datadir=/var/lib/mysql</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">socket=/var/lib/mysql/mysql.sock</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">symbolic-links=0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">log-error=/var/log/mysqld.log</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">pid-file=/var/run/mysqld/mysqld.pid</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># slave</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">log-bin=mysql-bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 服务器唯一id</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">server-id=3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 不备份的数据库</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-ignore-db=information_schema</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-ignore-db=cluster</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">binlog-ignore-db=mysql</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 需要备份的数据库</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">replicate-do-db=myblog</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 其他相关信息</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">slave-skip-errors=all</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">slave-net-timeout=60</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 开启中继日志</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">relay_log         = mysql-relay-bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">log_slave_updates = 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"># 防止改变数据</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">read_only         = 1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>重启slave，同时启动复制，还需要调整一下命令。</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">mysql&gt; CHANGE MASTER TO MASTER_HOST = '119.23.46.71', MASTER_USER = 'root', MASTER_PASSWORD = 'helloroot', MASTER_PORT = 3306, MASTER_LOG_FILE = 'mysql-bin.000009', MASTER_LOG_POS = 346180;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>可以看见slave已经开始进行同步了。我们使用show slave status\\G来查看slave的状态。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171118051031.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>其中日志文件和POSITION不一致是合理的，配置好了的话，即使重启，也不会影响到主从复制的配置。</p>\n<p>某天在Github上漂游，发现了阿里的canal，同时才知道上面这个业务是叫异地跨机房同步，早期，阿里巴巴B2B公司因为存在杭州和美国双机房部署，存在跨机房同步的业务需求。不过早期的数据库同步业务，主要是基于trigger的方式获取增量变更，不过从2010年开始，阿里系公司开始逐步的尝试基于数据库的日志解析，获取增量变更进行同步，由此衍生出了增量订阅&amp;消费的业务。下面是基本的原理：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171120094405.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>原理相对比较简单：</p>\n<p>1.canal模拟mysql slave的交互协议，伪装自己为mysql slave，向mysql master发送dump协议<br>\n2.mysql master收到dump请求，开始推送binary log给slave(也就是canal)<br>\n3.canal解析binary log对象(原始为byte流)</p>\n<p>其中，配置过程如下：<a href=\"https://github.com/alibaba/canal\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/alibaba/canal</a>，可以搭配Zookeeper使用。在ZKUI中能够查看到节点：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171120100237.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>一般情况下，还要配合阿里的另一个开源产品使用<a href=\"https://github.com/alibaba/otter\" target=\"_blank\" rel=\"noopener noreferrer\">otter</a>，相关文档还是找找GitHub吧，个人搭建完了之后，用起来还是不如直接使用mysql的主主复制，而且异地机房同步这种大企业才有的业务。</p>\n<p>公司又要996了，实在是忙不过来，感觉自己写的还是急躁了点，困==</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20171018051437-20240126113709561.png",
      "date_published": "2020-01-21T02:38:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "7.那些牛逼的插件",
      "url": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/7.%E9%82%A3%E4%BA%9B%E7%89%9B%E9%80%BC%E7%9A%84%E6%8F%92%E4%BB%B6.html",
      "id": "http://www.wenzhihuai.com/interesting/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/7.%E9%82%A3%E4%BA%9B%E7%89%9B%E9%80%BC%E7%9A%84%E6%8F%92%E4%BB%B6.html",
      "summary": "7.那些牛逼的插件 欢迎访问我的网站http://www.wenzhihuai.com/ 。感谢，如果可以，希望能在GitHub上给个star，GitHub地址https://github.com/Zephery/newblog 。 建站的一开始，我也想自己全部实现，各种布局，各种炫丽的效果，想做点能让大家佩服的UI出来，但是，事实上，自己作为专注Ja...",
      "content_html": "\n<p>欢迎访问我的网站<a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com/</a> 。感谢，如果可以，希望能在GitHub上给个star，GitHub地址<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a> 。<br>\n建站的一开始，我也想自己全部实现，各种布局，各种炫丽的效果，想做点能让大家佩服的UI出来，但是，事实上，自己作为专注Java的程序员，前端的东西一碰脑子就有“我又不是前端，浪费时间在这合适么？”这种想法，捣鼓来捣鼓去，做出的东西实在是没法看，我就觉得，如果自己的“产品”连自己都看不下去了，那还好意思给别人看？特别是留言板那块，初版的页面简直low的要死。所以，还是踏踏实实的“站在巨人的肩膀上”吧，改用别人的插件。但不要纯粹的使用别人的博客模板了，如hexo，wordpress这些，就算是自己拼凑过来的也比这些强。下面是本博客中所用到的插件，给大家介绍介绍，共同学习学习。<br>\n本站主要用到的插件有：<br>\n1.wowslider<br>\n2.畅言<br>\n<a href=\"http://3.Editor.md\" target=\"_blank\" rel=\"noopener noreferrer\">3.Editor.md</a><br>\n4.highchart、echart<br>\n5.百度分享<br>\n6.waterfall.js<br>\n7.心知天气<br>\n8.标签云</p>\n<h2>wowslider</h2>\n<p>可能是我这网站中最炫的东西了，图片能够自动像幻灯片一样自动滚动，让网站的首页一看起来就高大上，简直就是建站必备的东西，而且安装也及其简单，有兴趣可以点击<a href=\"http://wowslider.com/\" target=\"_blank\" rel=\"noopener noreferrer\">官网</a>看看。GitHub里也开放了<a href=\"https://github.com/WOWSlider/WOWSlider\" target=\"_blank\" rel=\"noopener noreferrer\">源代码</a>。安装过程：自己选择“幻灯片”切换效果，保存为html就行了，WORDPREESS中好像有集成这个插件的，做的还更好。感兴趣可以点击<a href=\"http://www.wenzhihuai.com\" target=\"_blank\" rel=\"noopener noreferrer\">我的博客首页</a>看一看。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171121023427.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p><strong>不过还有个值得注意的问题，就是wowslider里面带有一个googleapis的服务，即<a href=\"https://fonts.googleapis.com/css?family=Arimo&amp;subset=latin,cyrillic,latin-ext%EF%BC%8C%E7%94%B1%E4%BA%8E%E4%B8%80%E8%88%AC%E7%94%A8%E6%88%B7%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E8%B0%B7%E6%AD%8C%EF%BC%8C%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%BD%91%E9%A1%B5%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6%E5%8F%8A%E5%85%B6%E7%BC%93%E6%85%A2%EF%BC%8C%E6%89%80%E4%BB%A5%EF%BC%8C%E5%8E%BB%E6%8E%89%E4%B8%BA%E5%A6%99\" target=\"_blank\" rel=\"noopener noreferrer\">https://fonts.googleapis.com/css?family=Arimo&amp;subset=latin,cyrillic,latin-ext，由于一般用户不能访问谷歌，会导致网页加载速度及其缓慢，所以，去掉为妙</a></strong></p>\n<h2>畅言</h2>\n<p>作为社交评论的工具，虽然说表示还是想念以前的多说，但是畅言现在做得还是好了，有评论审核，评论导出导入等功能，如果浏览量大的话，还能提供广告服务，让站长也能拿到一丢丢的广告费。本博客中使用了畅言的基本评论、获取某篇文章评论数的功能。可以到我这里<a href=\"http://www.wenzhihuai.com/board.html\" target=\"_blank\" rel=\"noopener noreferrer\">留言</a>哈</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171121024358.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2><a class=\"header-anchor\" href=\"#editor-md\"><span></span></a><a href=\"http://Editor.md\" target=\"_blank\" rel=\"noopener noreferrer\">Editor.md</a></h2>\n<p>一款能将markdown解析为html的插件，国人的作品，博客的文章编辑器一开始想使用的是markdown，想法是：写文章、保存数据库都是markdown格式的，保存在数据库中，读取时有需要解析markdown，这个过程是有点耗时的，但是相比把html式的网页保存在数据库中友好点吧，因为如果一篇文章比较长的话，转成html的格式，光是大小估计也得超过几十kb？所以，还是本人选择的是一切都用源markdown。<br>\n<a href=\"https://github.com/pandao/editor.md\" target=\"_blank\" rel=\"noopener noreferrer\">editor.md</a>，是一款开源的、可嵌入的 Markdown 在线编辑器（组件），基于 CodeMirror、jQuery 和 Marked 构建。页面看起来还是美观的，相比WORDPRESS的那些牛逼插件还差那么一点点，不过从普通人的眼光来看，应该是可以的了。此处，我用它作为解析网页的利器，还有就是后台编辑也是用的这个。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171122030819.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>代码样式，这一点是不如WORDPRESS的插件了，不过已经可以了。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171122034349.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>图表</h2>\n<p>目前最常用的是highcharts跟echart，目前个人博客中的日志系统主要还是采用了highcharts，主要还是颜色什么的格调比较相符吧，其次是因为对echarts印象不太友好，比如下面做这张，打开网页后，缩小浏览器，百度的地域图却不能自适应，出现了越界，而highcharts的全部都能自适应调整。想起有次面试，我说我用的highcharts，面试官一脸嫌弃。。。（网上这么多人鄙视百度是假的？）</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171121023342.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>不过地图确确实实是echarts的优势，毕竟还是自家的东西了解自家，不过前段时间去看了看echarts的官网，已经不提供下载了。如果有需要，还是去csdn上搜索吧，或者替换为highmap。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171125122526.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>百度分享</h2>\n<p>作为一个以博客为主的网站，免不了使用一些社会化分享的工具，目前主要是<a href=\"http://www.jiathis.com/\" target=\"_blank\" rel=\"noopener noreferrer\">jiathis</a>和百度分享，这两者的ui都是相似的（丑爆了）。凭我个人的感觉，jiathis加载实在是太过于缓慢，这点是无法让人忍受的，只好投靠百度。百度分享类似于jiathis，安装也很简单，具体见官网<a href=\"http://share.baidu.com/code/advance#tools\" target=\"_blank\" rel=\"noopener noreferrer\">http://share.baidu.com/code/advance#tools</a>。一直点点点，配置完之后，就是下图这种，丑爆了是不是？</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171121022116.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>好在对它的美观改变不是很难，此处参考了别人的UI设计，原作者我忘记怎么联系他了。其原理主要是使用图片来替换掉原本的东西。完整的源码可以点击<a href=\"https://github.com/Zephery/newblog/blob/master/src/main/webapp/board.jsp\" target=\"_blank\" rel=\"noopener noreferrer\">此处</a>。</p>\n<div class=\"language-css line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"css\" data-title=\"css\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">#share</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    width: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">34</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">px</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    height: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">34</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">px</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    padding: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    margin: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">6</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">px</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    border-radius: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">25</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">px</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    transition: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#D19A66\">all</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> .4</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">/*主要的是替换掉backgound的背景图片*/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">#share</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">.bds_qzone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    background: </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">url</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">http://image.wenzhihuai.com/t_QQZone.png</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#D19A66\">no-repeat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    background-size: </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">34</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">px</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 34</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">px</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>改完之后的效果。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171127034920.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>瀑布流</h2>\n<p>有段时间，瀑布流特别流行？还有段时间，瀑布流开始遭到各种抵制。。。<a href=\"https://www.zhihu.com/question/20653270\" target=\"_blank\" rel=\"noopener noreferrer\">看看知乎的人怎么说</a>，大部分人不喜欢的原因是让人觉得视觉疲劳，不过瀑布流最大的好处还是有的：提高发现好图的效率以及图片列表页极强的视觉感染力。没错，我还是想把自己的网站弄得铉一些==，所以采用了瀑布流（不过效果不是很好，某些浏览器甚至加载出错），这个大bug有时间再改，毕竟花了很多时间做的这个，效果确实不咋地。目前主要的瀑布流有<a href=\"\">waterfall.js</a>和<a href=\"\">masory.js</a>。这一块目前还不是很完善，希望能得到各位大佬的指点。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171125103716.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>天气插件</h2>\n<p>此类咨询服务还是网上还是挺多的，这一块不知道是不是所谓的“画蛇添足”这部分，主要是我觉得网站右边这部分老是少了点什么，所以加上了天气插件。目前常用的天气插件有<a href=\"http://cj.weather.com.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">中国天气网</a>，<a href=\"https://www.seniverse.com/widget/intro\" target=\"_blank\" rel=\"noopener noreferrer\">心知天气</a>等。安装方式见各自的官网，这里不再阐述，我使用的是心知天气。注意：心知天气限制流量的，一个小时内只能使用400次，如果超出了会失效，当然也可以付费使用。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171125105127.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>标签云</h2>\n<p>标签云，弄得好的话应该说是一个网站的点缀。现在好像比较流行3D的标签云？像下面这种。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171127033202.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>从个人的网站风格来看，比较适应PHP形式的，有点颜色而又不绚丽的即可，之前用的跟分类的一样的样式，即双纵列的样式，美观度还行，虽然老是感觉有点怪怪的，如果某个标签的字数过长怎么办，岂不是要顶出div了。所以还是选择换另一种风格，最终偶然一次找到了下面这种，能够自适应宽度，颜色虽然鲜艳了点（以后有空再调一下吧），源码见<a href=\"https://github.com/Zephery/newblog/blob/master/src/main/webapp/css/newlypublished.css\" target=\"_blank\" rel=\"noopener noreferrer\">style.css</a>。  下图为目前的标签页。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20171127033945.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h1>总结</h1>\n<p>作为一个后端人员，调css和js真是痛苦==，好在坚持下来了，虽然还是很多不足，以后有时间慢慢改。说了那么多，感觉自己还是菜的抠脚。<br>\n题外话，搭建一个博客，对于一个新近程序员来说真的是锻炼自己的一个好机会，能够认识到从前端、java后台、linux、jvm等等知识，只是真的有点耗时间（还不如把时间耗在Spring源码），如果不采用别人的框架的话，付出的代价还是蛮大的（所以不要鄙视我啦）。没有什么能够一举两得，看自己的取舍吧。加油💪(ง •_•)ง</p>\n<p>欢迎访问我的网站<a href=\"http://www.wenzhihuai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.wenzhihuai.com/</a> 。感谢，如果可以，希望能在GitHub上给个star，GitHub地址<a href=\"https://github.com/Zephery/newblog\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Zephery/newblog</a> 。</p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20171121023427.png",
      "date_published": "2020-01-21T02:38:05.000Z",
      "date_modified": "2024-05-11T18:24:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "一次jvm调优过程",
      "url": "http://www.wenzhihuai.com/java/JVM/%E4%B8%80%E6%AC%A1jvm%E8%B0%83%E4%BC%98%E8%BF%87%E7%A8%8B.html",
      "id": "http://www.wenzhihuai.com/java/JVM/%E4%B8%80%E6%AC%A1jvm%E8%B0%83%E4%BC%98%E8%BF%87%E7%A8%8B.html",
      "summary": "一次jvm调优过程 前端时间把公司的一个分布式定时调度的系统弄上了容器云，部署在kubernetes，在容器运行的动不动就出现问题，特别容易jvm溢出，导致程序不可用，终端无法进入，日志一直在刷错误，kubernetes也没有将该容器自动重启。业务方基本每天都在反馈task不稳定，后续就协助接手看了下，先主要讲下该程序的架构吧。 该程序task主要分为...",
      "content_html": "\n<p>前端时间把公司的一个分布式定时调度的系统弄上了容器云，部署在kubernetes，在容器运行的动不动就出现问题，特别容易jvm溢出，导致程序不可用，终端无法进入，日志一直在刷错误，kubernetes也没有将该容器自动重启。业务方基本每天都在反馈task不稳定，后续就协助接手看了下，先主要讲下该程序的架构吧。<br>\n该程序task主要分为三个模块：<br>\nconsole进行一些cron的配置（表达式、任务名称、任务组等）；<br>\nschedule主要从数据库中读取配置然后装载到quartz再然后进行命令下发；<br>\nclient接收任务执行，然后向schedule返回运行的信息（成功、失败原因等）。<br>\n整体架构跟github上开源的xxl-job类似，也可以参考一下。</p>\n<h2>1. 启用jmx和远程debug模式</h2>\n<p>容器的网络使用了BGP，打通了公司的内网，所以可以直接通过ip来进行程序的调试，主要是在启动的jvm参数中添加：</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">JAVA_DEBUG_OPTS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\" -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=0.0.0.0:8000,server=y,suspend=n \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">JAVA_JMX_OPTS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\" -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false \"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中，调试模式的address最好加上0.0.0.0，有时候通过netstat查看端口的时候，该位置显示为127.0.0.1，导致无法正常debug，开启了jmx之后，可以初步观察堆内存的情况。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20200121102100646998927.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20200121102112646209333.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>堆内存（特别是cms的old gen），初步看代码觉得是由于用了大量的map，本地缓存了大量数据，怀疑是每次定时调度的信息都进行了保存。</p>\n<h2>2. memory analyzer、jprofiler进行堆内存分析</h2>\n<p>先从容器中dump出堆内存</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">jmap</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -dump:live,format=b,file=heap.hprof</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 58</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><figure><img src=\"https://github-images.wenzhihuai.com/images/202001211021411245129253.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>由图片可以看出，这些大对象不过也就10M，并没有想象中的那么大，所以并不是大对象的问题，后续继续看了下代码，虽然每次请求都会把信息放进map里，如果能正常调通的话，就会移除map中保存的记录，由于是测试环境，执行端很多时候都没有正常运行，甚至说业务方关闭了程序，导致调度一直出现问题，所以map的只会保留大量的错误请求。不过相对于该程序的堆内存来说，不是主要问题。</p>\n<h2>3. netty的方面的考虑</h2>\n<p>另一个小伙伴一直怀疑的是netty这一块有错误，着重看了下。该程序用netty自己实现了一套rpc，调度端每次进行命令下发的时候都会通过netty的rpc来进行通信，整个过程逻辑写的很混乱，下面开始排查。<br>\n首先是查看堆内存的中占比：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20200121102201592637921.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>可以看出，io.netty.channel.nio.NioEventLoop的占比达到了40%左右，再然后是io.netty.buffer.PoolThreadCache，占比大概达到33%左右。猜想可能是传输的channel没有关闭，还是NioEventLoop没有关闭。再跑去看一下jmx的线程数：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/202001211022191867685117.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>达到了惊人的1000个左右，而且一直在增长，没有过下降的趋势，再次猜想到可能是NioEventLoop没有关闭，在代码中全局搜索NioEventLoop，找到一处比较可疑的地方。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20200121102239634803742.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>声明了一个NioEventLoopGroup的成员变量，通过构造方法进行了初始化，但是在执行syncRequest完之后并没有进行对group进行shutdownGracefully操作，外面对其的操作并没有对该类的group对象进行关闭，导致线程数一直在增长。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/20200121102251548240533.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>最终解决办法：<br>\n在调用完syncRequest方法时，对ChannelBootStrap的group对象进行行shutdownGracefully</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/202001211023001796761285.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>提交代码，容器中继续测试，可以基本看出，线程基本处于稳定状态，并不会出现一直增长的情况了</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/202001211023141978405713.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>还原本以为基本解决了，到最后还是发现，堆内存还算稳定，但是，直接内存依旧打到了100%，虽然程序没有挂掉，所以，上面做的，可能仅仅是为这个程序续命了而已，感觉并没有彻底解决掉问题。</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/202001211023231033694109.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>4. 直接内存排查</h2>\n<p>第一个想到的就是netty的直接内存，关掉，命令如下：</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">-Dio.netty.noPreferDirect</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">true</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -Dio.netty.leakDetectionLevel=advanced</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><figure><img src=\"https://github-images.wenzhihuai.com/images/202001211023381459531529.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>查看了一下java的nio直接内存，发现也就几十kb，然而直接内存还是慢慢往上涨。毫无头绪，然后开始了自己的从linux层面开始排查问题</p>\n<h2>5. 推荐的直接内存排查方法</h2>\n<h4>5.1 pmap</h4>\n<p>一般配合pmap使用，从内核中读取内存块，然后使用views 内存块来判断错误，我简单试了下，乱码，都是二进制的东西，看不出所以然来。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pmap</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 58</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sort</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -k2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pmap</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 58</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sort</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -k3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rw-p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /proc/</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">$1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/maps</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sed</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 's/^\\([0-9a-f]*\\)-\\([0-9a-f]*\\) .*$/\\1 \\2/p'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> start</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> stop</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> gdb</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --batch</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --pid</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> $1</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -ex</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"dump memory </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">$1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$start</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$stop</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.dump 0x</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$start</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 0x</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$stop</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个时候真的懵了，不知道从何入手了，难道是linux操作系统方面的问题？</p>\n<h4><a class=\"header-anchor\" href=\"#_5-2-gperftools-https-github-com-gperftools-gperftools\"><span>5.2 [gperftools]（</span></a><a href=\"https://github.com/gperftools/gperftools%EF%BC%89\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/gperftools/gperftools）</a></h4>\n<p>起初，在网上看到有人说是因为linux自带的glibc版本太低了，导致的内存溢出，考虑一下。初步觉得也可能是因为这个问题，所以开始慢慢排查。oracle官方有一个jemalloc用来替换linux自带的，谷歌那边也有一个tcmalloc，据说性能比glibc、jemalloc都强，开始换一下。<br>\n根据网上说的，在容器里装libunwind，然后再装perf-tools，然后各种捣鼓，到最后发现，执行不了，</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">pprof</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --text</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/bin/java</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> java_58.0001.heap</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><figure><img src=\"https://github-images.wenzhihuai.com/images/202001211024021477267177.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p>看着工具高大上的，似乎能找出linux的调用栈，</p>\n<h2>6. 意外的结果</h2>\n<p>毫无头绪的时候，回想到了linux的top命令以及日志情况，测试环境是由于太多执行端业务方都没有维护，导致调度系统一直会出错，一出错就会导致大量刷错误日志，平均一天一个容器大概就有3G的日志，cron一旦到准点，就会有大量的任务要同时执行，而且容器中是做了对io的限制，磁盘也限制为10G，导致大量的日志都堆积在buff/cache里面，最终直接内存一直在涨，这个时候，系统不会挂，但是先会一直显示内存使用率达到100%。<br>\n修复后的结果如下图所示：</p>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/202001211024142482541.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<figure><img src=\"https://github-images.wenzhihuai.com/images/202001211024261078778632.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2>总结</h2>\n<p>定时调度这个系统当时并没有考虑到公司的系统会用的这么多，设计的时候也仅仅是为了实现上千的量，没想到到最后变成了一天的调度都有几百万次。最初那批开发也就使用了大量的本地缓存map来临时存储数据，然后面向简历编程各种用netty自己实现了通信的方式，一堆坑都留给了后人。目前也算是解决掉了一个由于线程过多导致系统不可用的情况而已，但是由于存在大量的map，系统还是得偶尔重启一下比较好。</p>\n<p>参考：<br>\n1.<a href=\"https://www.cnblogs.com/testfan2019/p/11151008.html\" target=\"_blank\" rel=\"noopener noreferrer\">记一次线上内存泄漏问题的排查过程</a><br>\n2.<a href=\"https://coldwalker.com/2018/08//troubleshooter_native_memory_increase/\" target=\"_blank\" rel=\"noopener noreferrer\">Java堆外内存增长问题排查Case</a><br>\n3.<a href=\"https://static.rainfocus.com/oracle/oow18/sess/1524505564465001W0mS/PF/Troubleshooting_native_memory_leaks_1540301908390001k6DR.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Troubleshooting Native Memory Leaks in Java Applications</a></p>\n",
      "image": "https://github-images.wenzhihuai.com/images/20200121102100646998927.png",
      "date_published": "2020-01-21T02:28:56.000Z",
      "date_modified": "2024-02-16T09:22:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Spark",
      "url": "http://www.wenzhihuai.com/bigdata/",
      "id": "http://www.wenzhihuai.com/bigdata/",
      "summary": "Spark",
      "content_html": "\n",
      "date_published": "2019-08-25T08:27:20.000Z",
      "date_modified": "2024-02-06T07:53:39.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Java",
      "url": "http://www.wenzhihuai.com/java/",
      "id": "http://www.wenzhihuai.com/java/",
      "summary": "Java",
      "content_html": "\n",
      "date_published": "2019-08-25T08:27:20.000Z",
      "date_modified": "2024-05-18T19:54:10.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "目录",
      "url": "http://www.wenzhihuai.com/kubernetes/",
      "id": "http://www.wenzhihuai.com/kubernetes/",
      "summary": "目录 包含CICD、Kubernetes",
      "content_html": "\n<p>包含CICD、Kubernetes</p>\n",
      "date_published": "2019-08-25T08:27:20.000Z",
      "date_modified": "2024-02-16T09:22:35.000Z",
      "authors": [],
      "tags": []
    }
  ]
}